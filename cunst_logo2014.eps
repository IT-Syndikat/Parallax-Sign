%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: cunst_logo2014.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: ty1
%%CreationDate: 2/16/15
%%BoundingBox: 0 0 596 842
%%HiResBoundingBox: 0 0 595.2813 841.8902
%%CropBox: 0 0 595.2813 841.8902
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 92 128 8%%BeginData: 6918 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C4527F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8%F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827%F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8%F827F828FFFD5AF827FFFD5AF828FFFD5AF827FFF8F827F8F8F827F8F8F8%27F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8%F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F8%27F8F8F827F8F8F827F8F8F827F8F8F827F8F8F852FFFD5AF827FFFD08F8%27F800F827F800F827F800F827F800F827FD0DF800F827F800F827F800F8%27F800F827FD0FF805F8F8F827F8F8F827F8F8F827F8F8F800FD05F827FF%FD07F827F827F827F827F827F827F827F827F82727FD0CF827F827F827F8%27F827F827F827F827F827FD13F800FD07F800FD08F827FF27F8F8F827F8%F8F827FD0FF827F8F8F827F8F8F827F8F8F827FD07F827FD08F80027F827%F8F8F827F8F8F827F8F8F827FD07F827FD07F827F8F8F827F828FFFD07F8%27FD07F8272700FD06F827FD13F82127FD07F827FD15F82D322DFD0CF827%FFFD07F80000FD06F8272827FD06F827FD0BF827FD07F827F827FD07F827%FD0DF827FD05F8272D5727FD06F827FD05F828FFFD07F827FD06F8002727%27FD06F827FD12F827F8F827FD06F827FD13F8052C572C57FD0CF827FFF8%F827FD04F82727F827F8F82727F8F82727F8F8F805F827FD05F827F8F8F8%27F827FD05F827F8F8F82727F8F827F8F8F827F8F8F827F8F8F827F8F8F8%05F827F827F8272D572D573357F8F8F827F827F805F8F8F852FFFD07F827%FD05F827FD04F827FD05F827FD10F827F827F8F8F82700FD04F827FD13F8%572C332C332C2DFD0AF827FFFD08F827F8F8F827277DF82727275227F8F8%F827FD0BF827FD04F8002727F8F827F82827F8F8F80000FD0DF827F8F8F8%2757572C572D2D2D27F8F8F827FD05F827FFFD07F827FD05F87D4CF8F852%0027FD04F800FD10F8272727F8F82727FD05F827FD13F82D322D2C57FD0C%F827FF27F8F8F827F8F8F827F8F8F8275227F82727FD06F827F8F8F827F8%F8F827F8F8F827FD05F852F8F8F827FD06F82727F827F8F8F827F8F8F827%F8F8F827FD04F827572D575727F827F8F8F827F8F8F827F828FFFD07F827%FD05F827F828F827FD06F827FD11F827F800F8F827FD05F827FD13F8572C%572C572DFD0BF827FFFD07F80000F8F8F82727275227F852FD05F827FD0B%F827FD04F80027F852F8F82727FD05F827FD0DF827F8F8F82D3257F82D32%5727FD04F827FD05F828FFFD07F827FD04F8272727F8FD0427FD04F827FD%10F827F827F827F82727FD04F827FD12F82D572CF8F857322DFD0AF827FF%F8F827FD04F82727F8F8F8525252F800275227F8F805F827FD05F827F8F8%F827F827FD04F8272727F8F8272727F827F8F8F827F8F8F827F8F8F827F8%F8F805F827F827F8050527F8F8F82DF8F8F827F827F805F8F8F852FFFD07%F827FD05F827FD0AF827FD16F827FD05F827FD24F827FFFD08F827FD0FF8%27FD0BF827FD10F80000FD0DF827F82700FD0527F827F8272727F827FD05%F827FFFD07F827F827275227522752272727F8272728FD0FF82727274C28%282727F852F8272752F827FD0FF852277D52A87D7D2727FFF82752A827FD%06F827FF27F8F8F827F8F8F82752527D7DFF7D522727FFF85252A8F827F8%F8F827F8F8F827F8F8F827F852277D7DFF537D2727FF275252A827F827F8%27F8F8F827F8F8F827F8F8F8FD0627522727F877F8272752F827F8F8F827%F828FFFD07F827F8272727F8270027F8272700F82727F827FD0CF827F827%21272727F827F852F8272727F827FD24F827FFFD08F827F827F827F827F8%27F8270027F8272727FD0BF827F827F827F827F827F827F827F827F827FD%0FF827F827F827F827F827F827F827F827F827FD05F828FFFD5AF827FFF8%F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827%F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8%F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F852%FFFD5AF827FFFD5AF827FFFD5AF827FFFD5AF827FFFD5A527DFDFCFFFDFC%FFFDFCFFFDFCFFFDFCFFFDA7FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD39FFFD23A87DFD38FFA8FD%22FFA8A8FD36FFCBA9FD08FFCBFD19FFA8FD22FFAE83A7FD13FFA8FD06FF%A85277A8FD18FFA8A8FD21FFAD2D5DFD13FFA8FD06FF7DA87DA8FD18FFA8%FD22FF573357FD13FFA8FD05FF7D7D7D527DFD18FFA8A8FD1FFFCF57572D%5782FD12FFA8FD04FF7D7DA8FFA87DA8FD17FFA8FD20FF572D2C572C57A7%FD11FFA8FFFFFFA87DA8FFFFFF7D7DFD17FFA8A8FD1FFF5D57572C572D33%83FD0FFFA8A8FFFFFFFD047DFFFFFF7DA8FD16FFA8FD20FF57572C2D57A7%7CA7FD10FFA8FFFFFF7D7D27A8FFA852A8527DA8FD14FFA8A8FD1FFFCF57%572D57CFFD11FFCBA9FFFFFF7D5252A8FFA852527D7DFD15FFA8FD20FFA7%572C332C82FD12FFA8FFFFFF7D5252FFFFA87DFFA8FFFFFFA8FFA8FFFFFF%A8A8A8FFA8FFFFFFA8FD04FFA8A8FD1FFF822D82813357FD12FFA8FD04FF%7DA8FFFFA87DA8FFFFA8275227522752275200A85227FFFF277D0052FFFF%A8FD1FFFAD2C57A8FF322D57FD11FFA8FFFFFFA87DA87D52FF7DA8FFFF27%52520027F800272727FF27F8A87D27522727FFFFA8A8FD1EFFA75757FFFF%AD3382FD11FFA8FFFFFFA87DFF527DA8FF7DFFFFFF287D277D5252527D52%FF522753FF277D277DFFFFA8FD20FFCFFD17FFA8FFFFFF77A87DA8A87DA8%7D7DFD16FFA8A8FD36FFA8A8FFFF7DA2A87DFFFF7DA8A853A8FD15FFA8FD%1CFF7D52525227522728A84CA8A8275252FD0DFFA8FFFFA8525252FFFFFF%53537DFD16FFA8A8FD1BFF7DFD06274CA8F87D53522752FD0CFFCBA9FD04%FFA8FD05FFA8FD17FFA8FD1CFFA8FD067DA8A87D7DFF7D7D7EFD0DFFA8FD%22FFA8A8FD37FFA8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFA8FD38FFFD24A8FDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFD4FFF7DFD10277DFD4AFF27FD10F852FD4AFF52FD07F82D%2C05FD06F852FD4AFF27FD04F827F827335727F8F827F8F8F87DFD4AFF52%FD05F8272D2D2C2DFD06F852FD4AFF28FD04F82733572D573227FD05F852%FD4AFF52FD04F827572C332C332C05FD04F852FD4AFF4CF8F800F82D3357%2D572D572D27F805F853FD4AFF52FD04F804572C2D3227FD06F852FD4AFF%27FD05F82D572C572DFD06F877FD4AFF52FD05F8572C572C57FD06F852FD%4AFF27FD04F85133572757332DFD05F87DFD4AFF52F8F8F805325727F826%573227FD04F852FD4AFF28FD04F8272D27F8F82D2DFD05F852FD4AFF52FD%10F852FD4AFF4CF8F827F827F8272727F827F827F827F853FD4AFF52F852%27527D7D5252F85228F852527DF852FD4AFF27F82752525377522727527D%F8522753F853FD4AFF27FD10F828FD4AFF53FD04274C272727522727274C%272727A2FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD28FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Druck</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2015-02-16T20:38:40+01:00</xap:CreateDate>
         <xap:ModifyDate>2015-02-16T20:38:41+01:00</xap:ModifyDate>
         <xap:MetadataDate>2015-02-16T20:38:41+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>184</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAC4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A8r4VdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdir23/AJxA/wDJwp/2zrr/AI0xV4liq+CGSeaOGIcp&#xA;ZWCRrUCrMaAVO3XFUV+iLr/flt/0lW//AFUxV36Iuv8Aflt/0lW//VTFXfoi6/35bf8ASVb/APVT&#xA;FXfoi6/35bf9JVv/ANVMVULyzuLO4e3uFCypTkFZXFGAYEMhZTUHscVUcVdiqNGkXnFWYwpzVXVX&#xA;uIEbi4DKSrOCKg13xV36Iuv9+W3/AElW/wD1UxV36Iuv9+W3/SVb/wDVTFXfoi6/35bf9JVv/wBV&#xA;MVUrmwuLZEkk4FJCyo0ckcoJShYVjZqU5DFUPirsVdiqs1pMrFWKBlNCPUTqP9lirX1aTxT/AJGJ&#xA;/XFXfVpPFP8AkYn9cVd9Wk8U/wCRif1xVZJG0bcW67HYg9RUbjFXtf8AziB/5OFP+2ddf8aYq8Sx&#xA;VG6J/wAdmw/5iYf+JjFUFiqaeXdHbVNRWN45Wsoh6l9LEP7qEGhZnIZUFSF5NsK4qv8AMelW9hNa&#xA;PbQzwW95bR3McVywkdedRT1FSJW6VFFHXFUoxVMvMP8Ax1G/4xW//JhMSqW4q7FUbq/+9Uf/ADDW&#xA;v/UPHiqHtrWa5lEUIqx3JJCqAOpZjQAfPFU5v7SwmtL42UEYFhLGscsTl2eMhldnBJ5fFx+MADw2&#xA;xVIcVRsv/HGtf+Ym4/4hBiqCxV2KuxVVu/8Aeqb/AF2/WcVT3yZ5bm1XUopprcyaVDIPrUjEqh2r&#xA;wBG5J22X8MxdVnEInf1dGnNk4R5ph+Yfl2205rO7sbT0bSVTHPJHX0/WDMVU1OzFBXwPbeuVaLUG&#xA;diR3/R/aw0+QyBBLDcz3JVbn+8H+pH/xAYq9o/5xA/8AJwp/2zrr/jTFXiWKo3RP+OzYf8xMP/Ex&#xA;iqCxVnU+jQr+X73LtLbwRLbyRKgAjuLqYsWaViKsUTiqAdN/E4VU9M8vrd+XLW2vdTtYYLktc2bS&#xA;TxxPbOTwcSR3Dwc0kCV5RF+NNxvirC5ECSMgYOFJHNa8TQ9RWm2BUw8w/wDHUb/jFb/8mExKpbir&#xA;sVRur/71R/8AMNa/9Q8eKo/SbSOfS2Dv6MLyym5lHdYYPUjQntyfb5nCFUdAtbh5JbqExEWwAlgn&#xA;cIsqS1RkBbapG2AKhtXtLW2uhHbSc0KhivNJCjEn4C8dUaniv69sVdL/AMca1/5ibj/iEGKoLFXY&#xA;q7FVW7/3qm/12/WcVew+TGsn8p2gt5Iy8KKJI0ZSRI7sX5gbhqb75oNZYym/xs6zPfGVvmy70OHT&#xA;kstaLpa6gCUkVCSGhYboyhqOvLuKUOOlhMy4oc4/pThEruPR5BdLbLcyrau0lsHYQvIoV2SvwllB&#xA;YA0983sbrfm7EOuf7wf6kf8AxAZJL2j/AJxA/wDJwp/2zrr/AI0xV4liqN0T/js2H/MTD/xMYqgs&#xA;VZzFFDDpFnp+uz3B0jTyLu+gR2BMtwv7i2iB5orcasT4E98KoPUtDnn0t7e2rdzaUfWgaOrtLp83&#xA;xrIoWopG32u4rv0OKsSwKmXmH/jqN/xit/8AkwmJVLcVdiqN1f8A3qj/AOYa1/6h48VRlhDdfo76&#xA;pCWM+rMAkYJp6MTEs5A/yk+4HFVURadFcj6tIx0q9Q2skkm3GVQKO3YfGBIPAbYqlF7Zz2d3Lazg&#xA;CaFijhSGFR4EbHFVaX/jjWv/ADE3H/EIMVQWKuxV2Kqt3/vVN/rt+s4q9asI4PKvkkSyr6zQoLmd&#xA;EJKyXFzxCLUbAKvEE+xp1zRZLzZ6+HwHN18v3mSlvmK0s/M/lQ3Fi6KFH121kkIATgCJopHP2aLs&#xA;e1VHY1x08jhy1L3fqP471xkwnReRZvXYKtz/AHg/1I/+IDFXtH/OIH/k4U/7Z11/xpirxLFUbon/&#xA;AB2bD/mJh/4mMVROleU/MurRwyabptxdR3EvoW7RoSJJQyKUT+YhpkBp/MPHFWQX+kfmZe6TDBd6&#xA;RN9TujFOlybWONp6rEInaYKpkqLuKhJqeYxVLpYvOmn6HfW0lpLBp9nP9Sv7kxDlFITU2zTU5KCd&#xA;2StK0riqAl8peZ4rK4vpNLuUs7SOCa7nMTcYo7qnoPIafAJOQ4k9ajxGKqfmH/jqN/xit/8AkwmJ&#xA;VLcVdiqcy6Rqep3rrYW0lybeytprj01qEjEES8mPQDkyrv3IHU4qmWneWPzC+rKLPR7maFX4Qv6H&#xA;qcJJTCtEYg8WY3cP/Br44qhbPy35wt7uO0t9MlluLu3a7hgCCUtDHWsygV+yVO/jiqE03yx5n1p4&#xA;H0/Trm+e9leG2MaM5mmjUPIifzsqsC1OlR4jFUPOrLo9srAhhc3IIOxBCQYqgcVdirsVZPYeR9T1&#xA;a3+vw3NtClzc3cNrDM0nqSGyhFxcMAiOAqLIg+Iipb4a0biqn835S+d4tJie71O2g0d7OfUo+c1x&#xA;JF6VqI2l4wxRSOXX1wSFT4RV2onxZHgF3W6OEXaXal+X3mrTNO81r9fhm07yrfR2GrJBLOIpbl5G&#xA;jPoo8cfqem0R5FgNhUVGPCLut14RdoeT8tdcj027vvrNo31Gytr+4tlkcyhbuI3KRj4ODSLb0lcB&#xA;qBTSvIFRJLF7n+8H+pH/AMQGKvaP+cQP/Jwp/wBs66/40xV4liqI0+4W2v7a5YFlglSRlHUhGDUH&#xA;3Yqyvyx5+uPLcllLpt03q6fI0lrJNZRuy8mWTj/fiqiWNZAD0Ye5BVTK+/N7Xr3S7PTLjUna0sLZ&#xA;bOBBZxj9wqWqBG/0ih30+J+n2qkeyqXSefpJdA1jQpZVksdbvG1G7LafCZVuWYNzik9fktONF8Az&#xA;AbM1VWrrz5cXOm32nvdssOpJGl462UQkcx8Kvy9fZpfRT1CPtcfnVtWMavdw3d+80PL0isaJzADE&#xA;RxqlSAWArx8cVQeKuxVkmm+ZLey9do5HH1u1htriF7dJVDW4T05Eb1oyHR4g6mnsaitVWUJ+dXmG&#xA;K1mtbe++rW808dyY4bFIwssJs2jZONwCpQ6bFT/ZeOKpZo35j3ek60NXt50kufqs1i8c+nQSRNBc&#xA;TNPKpjM1ByaRgeNKqSh+EkFVD6J54bRvq/1OYE2k009uZLGJ+Prgc0oZ6FOSK6qa0YVHeqrHdRvL&#xA;eaFI4pJJn9aaeWWVFjJaYINgryfyV64qgMVdirsVTyx81a3pjU0rWb+whWeS5ijt3aJVllQxO4CS&#xA;ABmiPBj3XY7Yq7/FnmD6o1n+nNQFq6PE8AkcI0cqJHIhHqUKukKKw7hRXpirX+Kdd9LUof01fGLW&#xA;HaXVYy7cbqR25s849SkjFtyW74q5/NWvPYyWD63qDWM0ENrNamRzE8FsSYImT1OJSLkeCnZa7Yql&#xA;E7q8lUrxCqoqKH4VA9/DFXtP/OIH/k4U/wC2ddf8aYq8SxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2Kvbf8AnED/AMnCn/bOuv8AjTFXtf8A0Jj+VH/LdrP/AEkW/wD2T4Fd&#xA;/wBCY/lR/wAt2s/9JFv/ANk+Ku/6Ex/Kj/lu1n/pIt/+yfFXf9CY/lR/y3az/wBJFv8A9k+Ku/6E&#xA;x/Kj/lu1n/pIt/8AsnxV3/QmP5Uf8t2s/wDSRb/9k+Ku/wChMfyo/wCW7Wf+ki3/AOyfFXf9CY/l&#xA;R/y3az/0kW//AGT4q7/oTH8qP+W7Wf8ApIt/+yfFXf8AQmP5Uf8ALdrP/SRb/wDZPirv+hMfyo/5&#xA;btZ/6SLf/snxV3/QmP5Uf8t2s/8ASRb/APZPirv+hMfyo/5btZ/6SLf/ALJ8Vd/0Jj+VH/LdrP8A&#xA;0kW//ZPirv8AoTH8qP8Alu1n/pIt/wDsnxV3/QmP5Uf8t2s/9JFv/wBk+Ku/6Ex/Kj/lu1n/AKSL&#xA;f/snxV3/AEJj+VH/AC3az/0kW/8A2T4q7/oTH8qP+W7Wf+ki3/7J8Vd/0Jj+VH/LdrP/AEkW/wD2&#xA;T4q7/oTH8qP+W7Wf+ki3/wCyfFXf9CY/lR/y3az/ANJFv/2T4qyf8uv+cdPInkHzGNf0W51GW9EM&#xA;luFu5onj4yU5GiQxmvw+OKvUsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqAv7+&#xA;+ivrezs7eKd54pZmaaVogoiaNaDjHLWvq+3TFVvr+Yv+WGz/AOkuX/smxV3r+Yv+WGz/AOkuX/sm&#xA;xV3r+Yv+WGz/AOkuX/smxV3r+Yv+WGz/AOkuX/smxV3r+Yv+WGz/AOkuX/smxV3r+Yv+WGz/AOku&#xA;X/smxV3r+Yv+WGz/AOkuX/smxV3r+Yv+WGz/AOkuX/smxVuwv76W+uLO8t4oHgihmVoZmmDCZpFo&#xA;eUcVKel79cVTDFXYq7FXYq7FXYq7FWndERndgqKCWYmgAHUk4Ca3KvPfL/5m3WrefrnQEitn0yMy&#xA;LDdRMS54cqEtyKnlx7Dvmrxa+Us3DQ4SSPly+bjQzkzro9DzauS7FXYq7FUun/5SKx/5g7v/AJO2&#xA;2Kpjiry/zl521RNT1RNN1oWlppKRFzaLazgs7xoy3BlScp8Tsu3E9Nu+GkvQtBvJL3QtOvJHEklz&#xA;awzPIooGaSNWJAHjXAhHYq7FXYq7FXYql0H/ACkV9/zB2n/J25xVMcVdirsVdirsVdirsVea/nff&#xA;6hHpNhp1rMYY9QkcTla1Ij4UGxG3xE5p+18piIjobPyqvvcTVyoAPDPLlnrUmsodHjae9tm5xpH9&#xA;tuFT8I7n4c1p3ob2XEjZ5c31H5S1zUdY0tbjUdMn0u7Wiyw3ClOR7sgO9PnnQ6bLKY9UeEj7fc7P&#xA;HIkbik6zJZuxV2KpdP8A8pFY/wDMHd/8nbbFWP8A5k61PZWdpYxyvbRagzLcXUVTIkUZTlxUUJqH&#xA;8R4d8IVZ+XuveXtW8lTXcFgNN0aAyxTx3JRleNIwZJJSQBQgnly8PDEqlXljXdK8r3FxbLIZfKl7&#xA;M0mk6jaq9zaxMWPKJ5I1k4eHxN+zXuTil6RHIkiLJGwdHAZHU1BB3BBGBDeKuxV2KuxVLoP+Uivv&#xA;+YO0/wCTtziqY4q7FXYq7FXYq7FXYq81/O/XobXQ4dJiCyX984KLQMyoNqiu4qe/sc1HauQUIfE+&#xA;4frcXVSFU8xXQta/L7WdF1a5BCThZX6gCpqUbbb3HvmukJwIJFH6h+r9fvcYiUCCX0hp2oWeo2UV&#xA;7ZyrNbTqHjdSCKEdNu47jOlx5IziJDk7KMgRYRGTS7FXYql0/wDykVj/AMwd3/ydtsVYp+b+jLfa&#xA;DBdLftY3VpKoteIRubyOjEUcruoj5degP0EKo+WLbQdK8sQeR4LpF1/ULGSb6u6SEiSWIsGloGEf&#xA;FQK1p0qBU4pQ3kLyT5Ov9GV57Fk1CB2jvkSaa3SVg7OjSQRSIjj4qfGvUHEqlfmD8+JdEGoy23ls&#xA;S6LpmtHy5HdNeCBnuYbWW4mIgEMnCOMRBVPL4uVdqY0hj3/Q15eee1t/KM1xdwWf15oYrssTH9Ti&#xA;uzSlv0QStzNPhVeW9aBpWU6B+eN1qFj5ov73Q4LOy8taTa6uZo9Q9YXBvrT65bwpzt4OPNPh5HvT&#xA;bfGlRFj+d8F9+Vtp52ttKWW+vbyLTo9Fju0YJdT3IgjSa54UiBVlkrJGCARUb4qq+Uvzjl1zz7ce&#xA;UbrQn09oBcQrfC4E6NeWCQG8h4CNGVIzcjhKdnFDQVoGlZzB/wApFff8wdp/yducCpjirsVdirsV&#xA;dirsVS7X/MeieX7AX+s3aWdoZEhWR6nlJIaIiqoLMx8AMVYJr/nP8jtbmtp9W1W0eeLibeYmaJqF&#xA;YZAOQC1HG7jb5N7NTHzaTHkNyG7CeKMuaJ1Dz5+T3mLy/fG81KK50fR47e4vHZLhBCk5CwNXgrHn&#xA;yAFK5LLpoTiIkbBMoCQopxfee/y68rWtna3OqWthbSWn1yzjUllNqNxKOAb4W/ZJ+0dhU5ZjxiEe&#xA;GIoBIiAKDI9P1Cy1KwttQsZlubK7iSe2uIzVHjkUMjKfAg1ySURirsVS6f8A5SKx/wCYO7/5O22K&#xA;sJ/MjWYbbWrOPVq22j2iPco0oZYLmZULrEZaPCCSnCj8TQmnUYQlDaZ5Xl1ny1/im2mkbzDcTvew&#xA;zlue0UjARRgmRAG4cl4j+UbAYqt8s67cT+dGl8vpDcQagR/iGzPIPazK3xyeqOYP7TKpPfj16Ksr&#xA;1f8ALD8vtYnv7jU9As7qfUzE1/K8Y5StBX02YinxLyI5dabYEKFx+UX5aXEnqT+XbOQ1ZuDJVPjS&#xA;GMjhXhx4WsYC0oOO3U1bVMY/Ivk+OPU4k0i2WDWIYLXUrcIPSlgtYvRgjMX2FWOP4VCgUxVD2P5a&#xA;+RLHy3e+WbbRbddB1CQy3mnMGkieRgg50ctQ/ulII6EVG++KorRvJHlDRNQk1LSdItbLUJbeKzku&#xA;4YlWU28CqscZf7XEKij34rXoMVRUH/KRX3/MHaf8nbnFUxxV2KuxV2KuxV2KpH5u8oaZ5p0+3tL6&#xA;W4t2s7qK+sru0k9KeG4hrwkRiGFaMw3B6+OKsCb/AJxl/Llmgb1tR5W07XNuxuEYozLEiqC0bfCk&#xA;duiKD2998NqmX/Kg/Io8q6l5YR75NM1WOyjueNx8YGn7xcTxpud2VgV8AKCjaojVvyW8s6rb2Ed1&#xA;f6oZrHT49LN2t1SaeGCQTQNcMUIeSGZRKjAD4utemNqy/wAu6Dp3l/QrDRNNQpYadAlvbqx5NwjF&#xA;AWbux6k4FTDFXYqlOo3AttasriSOZ4RbXUZeGGWajNJblQ3pK9KhDSvhiqr+nrH/AH1ef9IV3/1S&#xA;xV36esf99Xn/AEhXf/VLFXfp6x/31ef9IV3/ANUsVd+nrH/fV5/0hXf/AFSxV36esf8AfV5/0hXf&#xA;/VLFXfp6x/31ef8ASFd/9UsVd+nrH/fV5/0hXf8A1SxV36esf99Xn/SFd/8AVLFVLTrhbrW76eOK&#xA;ZIfq1qgeaGWEFlkuCwX1VStAwrTxxVNsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir5x/5yP8Az48+fl/54sdG8vtaiyuN&#xA;MivJBcQ+q3qvcTxmjcl24xLtiryn/ob/APOH+fTv+kX/AJvwqmQ/5yd/Ps6WdU9Cx+ogcvVNso+H&#xA;lx5BfU5ca96UyrxocXDfqYeJG66pb/0N/wDnD/Pp3/SL/wA35azes/8AON356+e/zB846jpPmFrV&#xA;rS2057uL6vD6Teos8UYqeTbcZDir6LwK7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXx&#xA;b/zmp/5NPSv+2HB/1F3eKvHPKHlz9O6p9XkkMVrCnq3LrQuVqFCJXbkzMB7dd6UzH1Ofw431asuT&#xA;gFvV10qyXTG0gB4LJojbHgf3iRsSWoWDVO56jNJ40uLj5nm6/jN8XV4xq2l3el6hNY3SFZYmIBIo&#xA;GX9l18VYbjOgx5BOIkOTs4yEhYe8f84U/wDkydY/7Y0n/UVb5YyfZuBXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq+Lf+c1P/Jp6V/2w4P+ou7xV5j+V15PF5j+rxxh4riMmdixUIkR9Xns&#xA;Gr9mgHvmD2jEHFfd/Y4+qjcHp8qXTxzCOkU91HKLWWQAqsrA8G+MEEB6VrmlBFjuFX7v7HAjVh4n&#xA;rOv65qYjt9TnMn1Vn4IURCrNQPXgq/yjrnR4sEIWYjm7SGOMeT3D/nCn/wAmTrH/AGxpP+oq3y5m&#xA;+zcCuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV8W/8AOan/AJNPSv8Athwf9Rd3iry3&#xA;yH5l0fRWuxexuJbngouEHICNSWZCAajk1DtXoMw9Zp5ZAKPJx8+OUuSO0z8wlh8xalLdPK+kXsrP&#xA;AAoDw8KrAQoO37uisAffcjKsmhvHECuKP4P62M9PcQBzDHPNeqadqetTXlhbmCKTeRmJ5SyEkvKy&#xA;1IUsT0H68y9PjlCAEjf45N2KJEaL2z/nCn/yZOsf9saT/qKt8vbH2bgV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KvkT/nKeTQY/wA8tCbXkD6b+gVDh/U9MSma9Fu0oh/emJZ+BkCfEUqB&#xA;vhV55aXv5KNaKl1GVnl0yOjxxzgw6hFaW6sGBDB1luYJjtsFlB6jiCqD1PU/yql8w6YtnZxRaCNW&#xA;im1BAt0HFisFuJIRKxaVozL64DcfUI+LiNlwKp20n5S2/mLWfrFb3RW1Oxl091juoz+ijMXvYIVL&#xA;BluAjIitKaFVehDFcVes/wDOK8ugS/nV5kk0CIQ6UdG/covqcOYmtRMYxMWlEbS8igc8gtK74q+t&#xA;cCuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVjXmX8tfIfmi/jv/ADBodrqd7FEII57h&#xA;OTCJWZwgPgGdj9OKpT/yon8nv+pS07/kV/birv8AlRP5Pf8AUpad/wAiv7cVd/yon8nv+pS07/kV&#xA;/biqb+Wfy38ieV7yS98vaJa6ZdzRmGWe3TizRlgxUnw5KDirJMVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdir//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:1EFC4725B7AE11E4B08FC41823758645</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:1EFC4726B7AE11E4B08FC41823758645</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:ec7ae7c0-e709-324d-aa16-92fd8c1ae645</stRef:instanceID>
            <stRef:documentID>xmp.did:02801174072068118083941DD2F4FE33</stRef:documentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>21.000157</stDim:w>
            <stDim:h>29.700009</stDim:h>
            <stDim:unit>Centimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -841.89 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 841.89 li
595.281 841.89 li
595.281 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0 219.426 mo
595.281 219.426 li
595.281 0.000976563 li
0 0.000976563 li
0 219.426 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0.912 0.788 0.62 0.975 cmyk
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
557.268 173.098 mo
447.357 173.098 li
447.357 47.0894 li
557.268 47.0894 li
557.268 173.098 li
cp
0 0 0 0 cmyk
@
gsave
0 0 mo
595.28 0 li
595.28 841.89 li
0 841.89 li
0 0 li
cp
clp
0.75 lw
79.6758 134.639 mo
80.6226 134.912 88.104 138.559 88.104 138.559 cv
88.104 138.559 90.5757 138.768 91.3359 136.805 cv
92.0977 134.842 91.4028 133.364 91.4028 133.364 cv
90.1348 132.146 li
90.1348 132.146 89.3687 131.943 89.625 131.335 cv
89.813 130.887 94.5708 123.145 95.2637 122.807 cv
95.9629 122.473 96.1968 121.958 96.3457 121.612 cv
96.9219 120.262 100.278 115.053 100.344 114.583 cv
100.344 114.583 106.112 124.791 106.305 125.46 cv
106.492 126.131 114.221 138.089 115.112 138.223 cv
116.006 138.356 116 138.832 116.633 138.356 cv
117.274 137.879 123.614 131.741 123.614 131.741 cv
123.614 131.741 124.623 130.245 123.864 129.17 cv
123.102 128.094 121.901 128.43 121.901 128.43 cv
120.821 129.037 li
120.821 129.037 120.569 129.311 120.315 128.903 cv
120.059 128.5 116.508 121.743 116.508 121.743 cv
116.508 121.743 115.932 119.508 115.684 119.041 cv
115.432 118.574 111.309 108.243 111.309 108.243 cv
111.309 108.243 110.797 106.751 110.547 104.727 cv
110.299 102.702 109.793 101.151 109.914 100.271 cv
110.045 99.3906 110.488 98.3057 110.678 97.3647 cv
110.869 96.4204 110.862 95.6797 110.738 95.2778 cv
110.738 95.2778 114.102 98.5107 114.608 98.5786 cv
115.112 98.6519 117.518 100.137 117.967 100.472 cv
118.414 100.808 118.729 101.137 119.49 101.137 cv
120.248 101.137 126.084 101.081 126.588 100.875 cv
127.096 100.678 128.869 100.202 128.807 98.2437 cv
128.748 96.2896 127.61 95.6797 126.975 95.6797 cv
126.975 95.6797 125.129 95.5166 124.813 95.1748 cv
124.498 94.8315 122.727 94.0464 122.147 94.0605 cv
121.533 94.0728 120.276 91.7095 119.619 91.5596 cv
118.508 91.2998 117.49 89.5576 116.824 88.0146 cv
116.446 87.1367 115.94 85.8179 115.748 84.8057 cv
115.557 83.7896 114.614 81.2349 113.91 80.6885 cv
113.211 80.1445 112.319 78.7905 111.5 78.5234 cv
110.678 78.2578 108.969 77.3726 108.33 77.3105 cv
107.696 77.2456 107.944 76.4355 107.883 75.8276 cv
107.826 75.2197 108.268 74.8774 108.711 74.7437 cv
109.156 74.6118 109.596 73.7324 109.662 72.9248 cv
109.729 72.1128 109.985 69.4717 109.729 68.7983 cv
109.471 68.1284 109.033 67.9185 109.156 67.3828 cv
109.28 66.8438 109.028 65.3574 108.52 64.9497 cv
108.014 64.5454 107.322 62.9897 105.354 63.1284 cv
103.385 63.2705 102.557 62.9507 101.418 63.9624 cv
100.729 64.5757 99.4487 65.4946 99.1348 67.0474 cv
98.8208 68.5986 99.2656 70.7578 99.582 71.4346 cv
99.895 72.1128 100.211 72.7886 100.086 73.5996 cv
99.9629 74.4087 98.8828 75.7578 98.2476 75.9585 cv
97.6167 76.1616 96.0977 76.0947 95.4609 76.7017 cv
94.8257 77.3105 88.104 82.3115 87.7886 83.1206 cv
87.4727 83.9307 83.5996 88.6538 83.5366 89.3315 cv
83.479 90.0078 82.5278 93.1797 82.7188 94.5986 cv
82.9077 96.0146 82.7188 103.72 83.0308 104.391 cv
83.3496 105.063 83.0308 105.263 83.606 105.537 cv
84.1738 105.81 85.502 107.5 87.1509 106.619 cv
88.8027 105.74 88.793 103.987 88.793 103.987 cv
88.793 103.987 88.9297 101.086 89.4336 100.341 cv
89.9399 99.5938 90.3149 95.4526 90.1836 94.9849 cv
90.0527 94.5146 90.5708 94.1226 90.8867 93.2485 cv
91.1987 92.3755 93.2969 89.6714 93.9976 89.1997 cv
93.9976 89.1997 93.4897 91.4194 93.6187 92.3008 cv
93.752 93.1797 93.4297 98.6519 93.4937 99.0557 cv
93.5586 99.4595 93.4297 101.479 92.8599 102.228 cv
92.2866 102.973 90.3848 106.013 90.3848 106.824 cv
90.3848 107.633 88.5488 111.548 88.5488 111.548 cv
88.5488 111.548 86.7046 115.876 86.772 116.545 cv
86.8379 117.217 86.0757 117.559 85.8828 118.096 cv
85.6938 118.633 85.1899 120.395 84.7437 121.138 cv
84.3008 121.876 82.2739 125.258 82.2739 125.868 cv
82.2739 126.475 81.3867 127.953 81.1289 128.229 cv
80.8726 128.5 79.7397 130.114 79.6758 130.385 cv
79.6099 130.659 79.0366 131.67 79.0366 132.348 cv
79.0366 133.026 78.7246 134.368 79.6758 134.639 cv
cp
@
2 lw
82.3086 134.639 mo
83.2578 134.912 90.7368 138.559 90.7368 138.559 cv
90.7368 138.559 93.2085 138.768 93.9707 136.805 cv
94.7324 134.842 94.0376 133.364 94.0376 133.364 cv
92.7676 132.146 li
92.7676 132.146 92.0015 131.943 92.2578 131.335 cv
92.4478 130.887 97.2036 123.145 97.8965 122.807 cv
98.5957 122.473 98.8296 121.958 98.9805 121.612 cv
99.5566 120.262 102.913 115.053 102.977 114.583 cv
102.977 114.583 108.746 124.791 108.939 125.46 cv
109.125 126.131 116.855 138.089 117.747 138.223 cv
118.639 138.356 118.633 138.832 119.266 138.356 cv
119.907 137.879 126.247 131.741 126.247 131.741 cv
126.247 131.741 127.255 130.245 126.497 129.17 cv
125.737 128.094 124.536 128.43 124.536 128.43 cv
123.454 129.037 li
123.454 129.037 123.202 129.311 122.948 128.903 cv
122.691 128.5 119.143 121.743 119.143 121.743 cv
119.143 121.743 118.566 119.508 118.318 119.041 cv
118.066 118.574 113.943 108.243 113.943 108.243 cv
113.943 108.243 113.432 106.751 113.182 104.727 cv
112.932 102.702 112.426 101.151 112.549 100.271 cv
112.678 99.3906 113.121 98.3057 113.311 97.3647 cv
113.501 96.4204 113.496 95.6797 113.371 95.2778 cv
113.371 95.2778 116.737 98.5107 117.243 98.5786 cv
117.747 98.6519 120.153 100.137 120.602 100.472 cv
121.046 100.808 121.364 101.137 122.123 101.137 cv
122.88 101.137 128.719 101.081 129.223 100.875 cv
129.729 100.678 131.503 100.202 131.441 98.2437 cv
131.38 96.2896 130.245 95.6797 129.607 95.6797 cv
129.607 95.6797 127.762 95.5166 127.446 95.1748 cv
127.133 94.8315 125.362 94.0464 124.782 94.0605 cv
124.167 94.0728 122.911 91.7095 122.251 91.5596 cv
121.141 91.2998 120.125 89.5576 119.458 88.0146 cv
119.079 87.1367 118.575 85.8179 118.38 84.8057 cv
118.191 83.7896 117.248 81.2349 116.542 80.6885 cv
115.846 80.1445 114.954 78.7905 114.133 78.5234 cv
113.311 78.2578 111.604 77.3726 110.965 77.3105 cv
110.329 77.2456 110.579 76.4355 110.518 75.8276 cv
110.458 75.2197 110.9 74.8774 111.346 74.7437 cv
111.789 74.6118 112.229 73.7324 112.296 72.9248 cv
112.362 72.1128 112.62 69.4717 112.362 68.7983 cv
112.104 68.1284 111.666 67.9185 111.789 67.3828 cv
111.914 66.8438 111.663 65.3574 111.155 64.9497 cv
110.648 64.5454 109.955 62.9897 107.987 63.1284 cv
106.02 63.2705 105.191 62.9507 104.051 63.9624 cv
103.364 64.5757 102.083 65.4946 101.768 67.0474 cv
101.454 68.5986 101.9 70.7578 102.215 71.4346 cv
102.53 72.1128 102.844 72.7886 102.719 73.5996 cv
102.596 74.4087 101.518 75.7578 100.883 75.9585 cv
100.25 76.1616 98.7324 76.0947 98.0938 76.7017 cv
97.4604 77.3105 90.7368 82.3115 90.4214 83.1206 cv
90.1055 83.9307 86.2344 88.6538 86.1714 89.3315 cv
86.1118 90.0078 85.1606 93.1797 85.3535 94.5986 cv
85.5425 96.0146 85.3535 103.72 85.6655 104.391 cv
85.9824 105.063 85.6655 105.263 86.2388 105.537 cv
86.8066 105.81 88.1367 107.5 89.7856 106.619 cv
91.4375 105.74 91.4277 103.987 91.4277 103.987 cv
91.4277 103.987 91.5625 101.086 92.0664 100.341 cv
92.5747 99.5938 92.9497 95.4526 92.8164 94.9849 cv
92.6875 94.5146 93.2046 94.1226 93.5195 93.2485 cv
93.8315 92.3755 95.9316 89.6714 96.6328 89.1997 cv
96.6328 89.1997 96.1226 91.4194 96.2515 92.3008 cv
96.3848 93.1797 96.0625 98.6519 96.1265 99.0557 cv
96.1914 99.4595 96.0625 101.479 95.4927 102.228 cv
94.9214 102.973 93.0176 106.013 93.0176 106.824 cv
93.0176 107.633 91.1816 111.548 91.1816 111.548 cv
91.1816 111.548 89.3374 115.876 89.4067 116.545 cv
89.4707 117.217 88.7085 117.559 88.5176 118.096 cv
88.3286 118.633 87.8247 120.395 87.3784 121.138 cv
86.9355 121.876 84.9067 125.258 84.9067 125.868 cv
84.9067 126.475 84.0195 127.953 83.7617 128.229 cv
83.5078 128.5 82.3726 130.114 82.3086 130.385 cv
82.2427 130.659 81.6714 131.67 81.6714 132.348 cv
81.6714 133.026 81.3574 134.368 82.3086 134.639 cv
cp
@
0.75 lw
84.9434 134.639 mo
85.8906 134.912 93.3716 138.559 93.3716 138.559 cv
93.3716 138.559 95.8433 138.768 96.6035 136.805 cv
97.3652 134.842 96.6704 133.364 96.6704 133.364 cv
95.4023 132.146 li
95.4023 132.146 94.6362 131.943 94.8926 131.335 cv
95.0806 130.887 99.8384 123.145 100.531 122.807 cv
101.23 122.473 101.464 121.958 101.613 121.612 cv
102.189 120.262 105.545 115.053 105.609 114.583 cv
105.609 114.583 111.379 124.791 111.572 125.46 cv
111.759 126.131 119.488 138.089 120.379 138.223 cv
121.273 138.356 121.266 138.832 121.9 138.356 cv
122.54 137.879 128.881 131.741 128.881 131.741 cv
128.881 131.741 129.891 130.245 129.129 129.17 cv
128.37 128.094 127.168 128.43 127.168 128.43 cv
126.088 129.037 li
126.088 129.037 125.834 129.311 125.583 128.903 cv
125.326 128.5 121.775 121.743 121.775 121.743 cv
121.775 121.743 121.199 119.508 120.951 119.041 cv
120.699 118.574 116.576 108.243 116.576 108.243 cv
116.576 108.243 116.064 106.751 115.814 104.727 cv
115.566 102.702 115.059 101.151 115.182 100.271 cv
115.311 99.3906 115.755 98.3057 115.945 97.3647 cv
116.136 96.4204 116.129 95.6797 116.005 95.2778 cv
116.005 95.2778 119.37 98.5107 119.875 98.5786 cv
120.379 98.6519 122.785 100.137 123.234 100.472 cv
123.679 100.808 123.997 101.137 124.757 101.137 cv
125.516 101.137 131.352 101.081 131.855 100.875 cv
132.363 100.678 134.136 100.202 134.074 98.2437 cv
134.016 96.2896 132.877 95.6797 132.242 95.6797 cv
132.242 95.6797 130.396 95.5166 130.081 95.1748 cv
129.766 94.8315 127.995 94.0464 127.415 94.0605 cv
126.8 94.0728 125.543 91.7095 124.886 91.5596 cv
123.775 91.2998 122.757 89.5576 122.091 88.0146 cv
121.711 87.1367 121.208 85.8179 121.016 84.8057 cv
120.824 83.7896 119.881 81.2349 119.177 80.6885 cv
118.479 80.1445 117.586 78.7905 116.768 78.5234 cv
115.945 78.2578 114.236 77.3726 113.597 77.3105 cv
112.963 77.2456 113.211 76.4355 113.15 75.8276 cv
113.093 75.2197 113.535 74.8774 113.979 74.7437 cv
114.423 74.6118 114.861 73.7324 114.929 72.9248 cv
114.997 72.1128 115.252 69.4717 114.997 68.7983 cv
114.738 68.1284 114.3 67.9185 114.423 67.3828 cv
114.547 66.8438 114.295 65.3574 113.788 64.9497 cv
113.281 64.5454 112.588 62.9897 110.622 63.1284 cv
108.652 63.2705 107.824 62.9507 106.686 63.9624 cv
105.997 64.5757 104.716 65.4946 104.402 67.0474 cv
104.086 68.5986 104.533 70.7578 104.847 71.4346 cv
105.163 72.1128 105.479 72.7886 105.354 73.5996 cv
105.23 74.4087 104.15 75.7578 103.516 75.9585 cv
102.882 76.1616 101.365 76.0947 100.729 76.7017 cv
100.093 77.3105 93.3716 82.3115 93.0542 83.1206 cv
92.7402 83.9307 88.8672 88.6538 88.8042 89.3315 cv
88.7466 90.0078 87.7954 93.1797 87.9863 94.5986 cv
88.1753 96.0146 87.9863 103.72 88.2983 104.391 cv
88.6172 105.063 88.2983 105.263 88.8735 105.537 cv
89.4414 105.81 90.7695 107.5 92.4185 106.619 cv
94.0703 105.74 94.0605 103.987 94.0605 103.987 cv
94.0605 103.987 94.1953 101.086 94.7012 100.341 cv
95.2075 99.5938 95.5825 95.4526 95.4512 94.9849 cv
95.3203 94.5146 95.8384 94.1226 96.1543 93.2485 cv
96.4644 92.3755 98.5645 89.6714 99.2656 89.1997 cv
99.2656 89.1997 98.7573 91.4194 98.8862 92.3008 cv
99.0195 93.1797 98.6973 98.6519 98.7593 99.0557 cv
98.8262 99.4595 98.6973 101.479 98.1255 102.228 cv
97.5542 102.973 95.6523 106.013 95.6523 106.824 cv
95.6523 107.633 93.8164 111.548 93.8164 111.548 cv
93.8164 111.548 91.9702 115.876 92.0396 116.545 cv
92.1035 117.217 91.3433 117.559 91.1504 118.096 cv
90.9614 118.633 90.4575 120.395 90.0112 121.138 cv
89.5684 121.876 87.5396 125.258 87.5396 125.868 cv
87.5396 126.475 86.6543 127.953 86.3945 128.229 cv
86.1406 128.5 85.0054 130.114 84.9434 130.385 cv
84.8774 130.659 84.3042 131.67 84.3042 132.348 cv
84.3042 133.026 83.9922 134.368 84.9434 134.639 cv
cp
@
65.3125 163.678 mo
64.9375 163.473 64.6216 163.178 64.3716 162.8 cv
64.1323 162.439 63.9497 162.001 63.8267 161.496 cv
63.7056 161.004 63.6445 160.445 63.6445 159.834 cv
63.6445 158.553 63.8965 157.523 64.3926 156.769 cv
64.9355 155.956 65.6997 155.545 66.6626 155.545 cv
67.0957 155.545 67.5195 155.661 67.9297 155.891 cv
67.9297 153.324 li
67.4536 153.189 66.9824 153.121 66.5234 153.121 cv
64.7383 153.121 63.3555 153.708 62.2983 154.915 cv
61.2407 156.132 60.7017 157.784 60.7017 159.824 cv
60.7017 162.003 61.2715 163.699 62.3945 164.866 cv
63.3965 165.906 64.5996 166.412 66.0703 166.412 cv
66.6074 166.412 67.2183 166.298 67.8945 166.073 cv
68.0376 163.588 li
67.0933 164.11 66.0723 164.093 65.3125 163.678 cv
f
78.9492 164.357 mo
79.1812 163.903 79.2974 163.301 79.2974 162.555 cv
79.2974 153.121 li
76.437 153.121 li
76.437 161.794 li
76.437 162.536 76.3491 163.038 76.1602 163.374 cv
75.9883 163.66 75.6484 163.986 74.9551 163.986 cv
74.2754 163.986 73.9312 163.643 73.7622 163.355 cv
73.5581 163.01 73.4653 162.512 73.4653 161.785 cv
73.4653 153.121 li
70.605 153.121 li
70.605 162.018 li
70.605 163.664 71.0952 164.816 72.1011 165.542 cv
72.9043 166.119 73.9243 166.412 75.1313 166.412 cv
76.1851 166.412 77.0884 166.15 77.812 165.632 cv
78.3442 165.248 78.7261 164.818 78.9492 164.357 cv
f
88.5137 166.412 mo
91.3945 166.412 li
91.3945 153.121 li
88.6738 153.121 li
88.6738 155.832 li
88.6738 156.411 88.7085 157.144 88.7817 158.012 cv
88.8555 158.89 88.9629 159.947 89.1035 161.182 cv
88.1309 161.389 li
87.7329 160.129 li
87.5747 159.636 87.4297 159.199 87.2969 158.819 cv
86.9438 157.803 li
85.1367 153.121 li
82.2949 153.121 li
82.2949 166.412 li
85.0176 166.412 li
85.0176 163.265 li
85.0176 162.728 84.9829 162.083 84.9116 161.35 cv
84.8418 160.611 84.7305 159.736 84.5776 158.749 cv
85.5527 158.533 li
85.6797 158.969 85.8296 159.428 85.9995 159.909 cv
86.1719 160.396 86.3657 160.918 86.5776 161.475 cv
88.5137 166.412 li
cp
f
99.3652 165.243 mo
100.136 164.452 100.511 163.469 100.511 162.237 cv
100.511 161.526 100.359 160.927 100.045 160.407 cv
99.73 159.874 99.1914 159.342 98.439 158.82 cv
97.8223 158.379 li
97.1641 157.924 96.8281 157.416 96.8281 156.875 cv
96.8281 156.497 96.9941 156.162 97.3081 155.907 cv
97.9004 155.393 98.9282 155.428 99.8262 156.057 cv
99.9243 156.125 100.019 156.2 100.113 156.279 cv
100.113 153.645 li
99.3472 153.297 98.584 153.121 97.8364 153.121 cv
96.9141 153.121 96.1563 153.375 95.5151 153.901 cv
95.2773 154.087 95.0703 154.297 94.894 154.533 cv
94.709 154.781 94.5474 155.053 94.4102 155.342 cv
94.1362 155.966 93.9961 156.578 93.9961 157.147 cv
93.9961 157.479 94.0332 157.797 94.1094 158.097 cv
94.1831 158.388 94.3032 158.677 94.4653 158.954 cv
94.6294 159.238 94.8452 159.517 95.1094 159.782 cv
95.3882 160.065 95.728 160.352 96.1191 160.635 cv
96.7583 161.115 li
97.3452 161.568 97.6421 162.063 97.6421 162.594 cv
97.6421 163 97.4692 163.356 97.1421 163.621 cv
96.8423 163.864 96.4634 163.987 96.0132 163.987 cv
95.3203 163.987 94.6641 163.727 94.0513 163.213 cv
94.0513 165.977 li
96.269 166.724 98.1152 166.527 99.3652 165.243 cv
f
109.406 153.121 mo
102.205 153.121 li
102.205 155.545 li
104.334 155.545 li
104.334 166.412 li
107.193 166.412 li
107.193 155.545 li
109.406 155.545 li
109.406 153.121 li
cp
f
118.547 161.177 mo
118.93 160.95 li
120.897 163.552 li
120.524 163.856 li
120.117 164.189 119.684 164.358 119.234 164.358 cv
118.783 164.358 118.383 164.183 118.08 163.853 cv
117.777 163.525 117.625 163.127 117.625 162.672 cv
117.625 162.238 117.783 161.627 118.547 161.177 cv
118.92 155.548 mo
118.992 155.396 119.088 155.262 119.211 155.15 cv
119.328 155.043 119.461 154.957 119.609 154.894 cv
120.076 154.699 120.645 154.799 121.01 155.155 cv
121.254 155.395 121.383 155.706 121.383 156.055 cv
121.383 156.583 121.053 157.151 120.344 157.84 cv
119.914 158.256 li
119.58 157.76 li
119.047 156.967 118.809 156.438 118.809 156.045 cv
118.809 155.874 118.846 155.707 118.92 155.548 cv
116.135 165.305 mo
116.922 166.051 117.858 166.412 118.994 166.412 cv
119.996 166.412 120.988 166.169 121.943 165.688 cv
122.326 165.496 li
122.983 166.412 li
125.899 166.412 li
124.262 164.23 li
124.6 163.924 li
124.824 163.72 125.057 163.504 125.297 163.271 cv
125.445 163.125 125.6 162.971 125.756 162.806 cv
124.443 161.081 li
124.315 161.245 124.193 161.396 124.078 161.532 cv
123.85 161.808 123.649 162.036 123.477 162.219 cv
123.078 162.642 li
120.975 159.941 li
121.436 159.645 li
122.92 158.698 123.641 157.64 123.641 156.412 cv
123.641 155.507 123.279 154.753 122.535 154.107 cv
121.777 153.444 120.881 153.121 119.799 153.121 cv
118.813 153.121 118.002 153.428 117.326 154.058 cv
116.654 154.682 116.328 155.41 116.328 156.285 cv
116.328 157.064 116.662 157.869 117.318 158.678 cv
117.695 159.142 li
117.172 159.431 li
115.69 160.249 114.969 161.302 114.969 162.649 cv
114.969 163.695 115.35 164.564 116.135 165.305 cv
f
137.563 163.678 mo
137.188 163.472 136.872 163.177 136.622 162.8 cv
136.382 162.436 136.2 161.998 136.077 161.496 cv
135.956 161.009 135.895 160.449 135.895 159.834 cv
135.895 158.555 136.146 157.525 136.643 156.77 cv
137.188 155.956 137.952 155.545 138.913 155.545 cv
139.346 155.545 139.77 155.661 140.18 155.891 cv
140.18 153.324 li
139.704 153.189 139.232 153.121 138.773 153.121 cv
136.988 153.121 135.607 153.708 134.55 154.915 cv
133.491 156.132 132.952 157.783 132.952 159.824 cv
132.952 162.003 133.521 163.699 134.645 164.866 cv
135.648 165.906 136.852 166.412 138.32 166.412 cv
138.857 166.412 139.471 166.298 140.145 166.073 cv
140.288 163.588 li
139.341 164.11 138.322 164.093 137.563 163.678 cv
f
148.93 162.711 mo
148.521 163.764 147.877 163.986 147.409 163.986 cv
146.948 163.986 146.313 163.761 145.901 162.69 cv
145.627 161.977 145.492 161.02 145.492 159.766 cv
145.492 158.487 145.637 157.531 145.932 156.845 cv
146.369 155.772 147.018 155.544 147.483 155.544 cv
149.354 155.544 149.354 158.784 149.354 159.847 cv
149.354 161.045 149.211 162.009 148.93 162.711 cv
150.998 154.869 mo
150.117 153.692 148.961 153.122 147.465 153.122 cv
146.244 153.122 145.217 153.544 144.325 154.417 cv
143.112 155.606 142.494 157.372 142.494 159.665 cv
142.494 162.065 143.083 163.877 144.248 165.048 cv
145.164 165.965 146.233 166.413 147.512 166.413 cv
148.944 166.413 150.076 165.834 150.973 164.645 cv
151.895 163.42 152.362 161.796 152.362 159.815 cv
152.362 157.737 151.903 156.073 150.998 154.869 cv
f
52.0762 172.218 mo
160.987 172.218 li
160.987 47.209 li
52.0762 47.209 li
52.0762 172.218 li
cp
161.987 173.218 mo
51.0762 173.218 li
51.0762 46.209 li
161.987 46.209 li
161.987 173.218 li
cp
f
513.022 93.9058 mo
512.842 93.8818 512.296 93.4517 511.671 92.9126 cv
511.564 93.3638 511.422 93.8359 511.282 94.3027 cv
512.189 94.7856 513.436 95.5659 513.747 95.7988 cv
514.194 96.1348 514.509 96.4639 515.271 96.4639 cv
515.55 96.4639 516.522 96.4556 517.661 96.436 cv
517.082 96.3696 516.772 96.0938 516.382 95.7988 cv
515.933 95.4629 513.526 93.978 513.022 93.9058 cv
0.514 0 0.904 0 cmyk
f
491.231 90.311 mo
491.362 90.7798 490.987 94.9199 490.481 95.667 cv
489.976 96.4141 489.841 99.313 489.841 99.313 cv
489.841 99.313 489.838 99.5933 489.736 99.981 cv
490.304 98.9761 490.972 97.9468 491.272 97.5542 cv
491.843 96.8062 491.972 94.7871 491.907 94.3833 cv
491.853 94.0391 492.076 90.04 492.063 88.3071 cv
492.015 88.4019 491.96 88.5029 491.935 88.5752 cv
491.618 89.4492 491.101 89.8413 491.231 90.311 cv
f
500.081 112.264 mo
499.646 112.992 499.163 113.79 498.721 114.538 cv
500.279 117.335 501.981 120.429 502.085 120.787 cv
502.272 121.458 510.001 133.416 510.893 133.549 cv
511.786 133.683 511.78 134.159 512.413 133.683 cv
512.507 133.613 512.732 133.412 513.033 133.137 cv
511.092 131.024 504.886 121.388 504.72 120.787 cv
504.586 120.325 501.797 115.321 500.081 112.264 cv
f
477.452 127.674 mo
477.452 126.998 478.022 125.985 478.089 125.711 cv
478.153 125.44 479.288 123.826 479.542 123.555 cv
479.8 123.279 480.687 121.801 480.687 121.194 cv
480.687 120.584 482.716 117.203 483.159 116.464 cv
483.604 115.721 484.108 113.959 484.298 113.422 cv
484.489 112.885 485.251 112.543 485.187 111.873 cv
485.118 111.203 486.962 106.875 486.962 106.875 cv
486.962 106.875 488.798 102.959 488.798 102.15 cv
488.798 101.952 488.913 101.62 489.093 101.224 cv
488.867 101.489 488.581 101.742 488.198 101.945 cv
487.457 102.342 486.781 102.217 486.209 101.937 cv
486.193 102.008 486.165 102.095 486.165 102.15 cv
486.165 102.959 484.329 106.875 484.329 106.875 cv
484.329 106.875 482.485 111.203 482.552 111.873 cv
482.618 112.543 481.856 112.885 481.663 113.422 cv
481.473 113.959 480.97 115.721 480.524 116.464 cv
480.081 117.203 478.054 120.584 478.054 121.194 cv
478.054 121.801 477.167 123.279 476.909 123.555 cv
476.653 123.826 475.521 125.44 475.456 125.711 cv
475.389 125.985 474.817 126.998 474.817 127.674 cv
474.817 128.352 474.505 129.694 475.456 129.965 cv
476.403 130.238 483.884 133.885 483.884 133.885 cv
483.884 133.885 484.872 133.967 485.791 133.532 cv
483.891 132.612 478.856 130.187 478.089 129.965 cv
477.138 129.694 477.452 128.352 477.452 127.674 cv
f
481.446 99.7173 mo
481.135 99.0464 481.323 91.3423 481.135 89.9253 cv
480.94 88.5063 481.892 85.3345 481.952 84.6582 cv
482.015 83.98 485.886 79.2583 486.202 78.4473 cv
486.517 77.6382 493.241 72.6372 493.874 72.0293 cv
494.513 71.4214 496.03 71.4883 496.663 71.2852 cv
497.298 71.0845 498.376 69.7354 498.499 68.9263 cv
498.624 68.1152 498.31 67.439 497.995 66.7612 cv
497.681 66.0845 497.233 63.9253 497.548 62.374 cv
497.864 60.8213 499.144 59.9033 499.831 59.2891 cv
500.545 58.6563 501.137 58.5444 501.961 58.5142 cv
501.711 58.4644 501.443 58.4331 501.133 58.4551 cv
499.165 58.5972 498.337 58.2783 497.198 59.2891 cv
496.51 59.9033 495.229 60.8213 494.915 62.374 cv
494.601 63.9253 495.046 66.0845 495.362 66.7612 cv
495.676 67.439 495.991 68.1152 495.866 68.9263 cv
495.743 69.7354 494.663 71.0845 494.028 71.2852 cv
493.397 71.4883 491.878 71.4214 491.241 72.0293 cv
490.606 72.6372 483.885 77.6382 483.569 78.4473 cv
483.253 79.2583 479.38 83.98 479.317 84.6582 cv
479.258 85.3345 478.308 88.5063 478.499 89.9253 cv
478.688 91.3423 478.499 99.0464 478.812 99.7173 cv
479.13 100.39 478.812 100.589 479.386 100.863 cv
479.954 101.136 481.282 102.827 482.931 101.946 cv
483.045 101.884 483.133 101.811 483.232 101.743 cv
482.697 101.407 482.278 100.988 482.019 100.863 cv
481.446 100.589 481.763 100.39 481.446 99.7173 cv
f
513.033 133.137 mo
513.262 133.385 513.433 133.535 513.526 133.549 cv
514.419 133.683 514.413 134.158 515.046 133.683 cv
515.14 133.613 515.365 133.412 515.666 133.137 cv
515.374 132.819 514.986 132.332 514.535 131.729 cv
513.946 132.288 513.422 132.78 513.033 133.137 cv
0.639 0 1 0 cmyk
f
485.791 133.533 mo
486.24 133.75 486.517 133.886 486.517 133.886 cv
486.517 133.886 487.505 133.968 488.425 133.533 cv
488.003 133.328 487.429 133.051 486.78 132.739 cv
486.504 133.109 486.153 133.362 485.791 133.533 cv
f
521.868 124.364 mo
522.062 124.255 li
521.748 123.937 521.398 123.792 521.09 123.74 cv
521.229 123.996 521.327 124.175 521.362 124.229 cv
521.614 124.637 521.868 124.364 521.868 124.364 cv
0.514 0 0.904 0 cmyk
f
484.284 100.49 mo
484.096 100.917 483.769 101.373 483.232 101.743 cv
483.869 102.143 484.67 102.425 485.565 101.946 cv
485.681 101.885 485.768 101.812 485.867 101.743 cv
485.332 101.407 484.913 100.988 484.653 100.864 cv
484.397 100.741 484.321 100.631 484.284 100.49 cv
0.639 0 1 0 cmyk
f
517.661 96.4355 mo
517.741 96.4443 517.811 96.4634 517.903 96.4634 cv
518.182 96.4634 519.155 96.4556 520.295 96.4355 cv
520.181 96.4224 520.066 96.4087 519.971 96.3794 cv
519.225 96.4048 518.409 96.4224 517.661 96.4355 cv
f
504.595 58.5146 mo
504.344 58.4648 504.076 58.4336 503.767 58.4556 cv
503.03 58.5088 502.454 58.4966 501.961 58.5146 cv
502.353 58.5947 502.681 58.7417 502.955 58.9297 cv
503.47 58.6157 503.964 58.5376 504.595 58.5146 cv
f
484.284 100.49 mo
484.239 100.315 484.255 100.09 484.079 99.7173 cv
483.767 99.0464 483.956 91.3423 483.767 89.9263 cv
483.575 88.5063 484.526 85.3345 484.585 84.6582 cv
484.647 83.98 488.521 79.2583 488.835 78.4482 cv
489.151 77.6382 495.874 72.6372 496.509 72.0293 cv
497.146 71.4214 498.663 71.4893 499.296 71.2852 cv
499.931 71.0845 501.011 69.7354 501.134 68.9272 cv
501.259 68.1152 500.942 67.439 500.628 66.7612 cv
500.313 66.0845 499.866 63.9263 500.183 62.374 cv
500.497 60.8223 501.776 59.9033 502.466 59.2891 cv
502.634 59.1392 502.795 59.0264 502.955 58.9292 cv
502.681 58.7412 502.353 58.5942 501.961 58.5142 cv
501.137 58.5444 500.545 58.6563 499.831 59.2891 cv
499.144 59.9033 497.864 60.8223 497.548 62.374 cv
497.233 63.9263 497.681 66.0845 497.995 66.7612 cv
498.31 67.439 498.624 68.1152 498.499 68.9272 cv
498.376 69.7354 497.298 71.0845 496.663 71.2852 cv
496.03 71.4893 494.514 71.4214 493.874 72.0293 cv
493.241 72.6372 486.517 77.6382 486.202 78.4482 cv
485.886 79.2583 482.015 83.98 481.952 84.6582 cv
481.892 85.3345 480.94 88.5063 481.134 89.9263 cv
481.323 91.3423 481.134 99.0464 481.446 99.7173 cv
481.764 100.39 481.446 100.589 482.019 100.864 cv
482.278 100.988 482.697 101.407 483.232 101.743 cv
483.769 101.373 484.096 100.917 484.284 100.49 cv
f
486.78 132.739 mo
484.502 131.645 481.319 130.137 480.724 129.966 cv
479.772 129.694 480.085 128.352 480.085 127.675 cv
480.085 126.998 480.657 125.985 480.724 125.712 cv
480.786 125.44 481.921 123.827 482.176 123.555 cv
482.435 123.28 483.319 121.801 483.319 121.194 cv
483.319 120.584 485.349 117.204 485.792 116.465 cv
486.237 115.721 486.741 113.959 486.931 113.423 cv
487.124 112.885 487.885 112.543 487.819 111.873 cv
487.751 111.204 489.597 106.875 489.597 106.875 cv
489.597 106.875 491.433 102.959 491.433 102.15 cv
491.433 101.339 493.335 98.2998 493.905 97.5537 cv
494.478 96.8057 494.606 94.7866 494.54 94.3828 cv
494.478 93.9775 494.801 88.5068 494.667 87.6265 cv
494.538 86.7466 495.046 84.5259 495.046 84.5259 cv
494.403 84.9585 492.6 87.2539 492.063 88.3066 cv
492.076 90.0396 491.853 94.0386 491.907 94.3828 cv
491.972 94.7866 491.843 96.8057 491.272 97.5537 cv
490.972 97.9468 490.304 98.9756 489.736 99.9819 cv
489.642 100.345 489.453 100.8 489.094 101.224 cv
488.913 101.62 488.798 101.953 488.798 102.15 cv
488.798 102.959 486.962 106.875 486.962 106.875 cv
486.962 106.875 485.118 111.204 485.187 111.873 cv
485.251 112.543 484.489 112.885 484.298 113.423 cv
484.108 113.959 483.604 115.721 483.159 116.465 cv
482.717 117.204 480.687 120.584 480.687 121.194 cv
480.687 121.801 479.801 123.28 479.542 123.555 cv
479.288 123.827 478.153 125.44 478.089 125.712 cv
478.022 125.985 477.452 126.998 477.452 127.675 cv
477.452 128.352 477.138 129.694 478.089 129.966 cv
478.856 130.187 483.892 132.613 485.791 133.533 cv
486.153 133.362 486.504 133.109 486.78 132.739 cv
f
507.353 120.788 mo
507.159 120.118 501.39 109.911 501.39 109.911 cv
501.363 110.102 500.789 111.082 500.081 112.265 cv
501.797 115.321 504.586 120.326 504.72 120.788 cv
504.886 121.389 511.092 131.024 513.033 133.138 cv
513.422 132.781 513.946 132.288 514.535 131.729 cv
511.994 128.328 507.495 121.298 507.353 120.788 cv
f
519.015 95.7988 mo
518.565 95.4629 516.159 93.978 515.655 93.9058 cv
515.149 93.8369 511.785 90.604 511.785 90.604 cv
511.909 91.0059 511.917 91.7476 511.726 92.6909 cv
511.711 92.7627 511.688 92.8398 511.671 92.9126 cv
512.296 93.4517 512.842 93.8818 513.022 93.9058 cv
513.526 93.978 515.933 95.4629 516.382 95.7988 cv
516.772 96.0938 517.082 96.3696 517.66 96.436 cv
518.409 96.4229 519.226 96.4038 519.971 96.3799 cv
519.585 96.2617 519.327 96.0347 519.015 95.7988 cv
f
528.022 91.0059 mo
528.022 91.0059 526.177 90.8428 525.86 90.502 cv
525.546 90.1577 523.774 89.373 523.194 89.3867 cv
522.582 89.3999 521.323 87.0356 520.668 86.8857 cv
519.556 86.627 518.538 84.8848 517.872 83.3418 cv
517.491 82.4629 516.987 81.144 516.796 80.1318 cv
516.604 79.1167 515.661 76.561 514.959 76.0161 cv
514.259 75.4717 513.366 74.1167 512.548 73.8511 cv
511.726 73.585 510.017 72.6987 509.378 72.6367 cv
508.743 72.5728 508.991 71.7627 508.931 71.1538 cv
508.875 70.5469 509.315 70.2046 509.759 70.0708 cv
510.204 69.938 510.642 69.0601 510.711 68.251 cv
510.776 67.439 511.032 64.7979 510.776 64.126 cv
510.519 63.4561 510.081 63.2446 510.204 62.709 cv
510.327 62.1699 510.075 60.6851 509.567 60.2769 cv
509.062 59.8721 508.368 58.3159 506.401 58.4561 cv
505.666 58.5078 505.088 58.4971 504.595 58.5146 cv
505.938 58.7866 506.508 59.936 506.935 60.2769 cv
507.442 60.6851 507.694 62.1699 507.569 62.709 cv
507.446 63.2446 507.884 63.4561 508.142 64.126 cv
508.399 64.7979 508.142 67.439 508.077 68.251 cv
508.009 69.0601 507.569 69.938 507.127 70.0708 cv
506.681 70.2046 506.239 70.5469 506.298 71.1538 cv
506.358 71.7627 506.108 72.5728 506.745 72.6367 cv
507.384 72.6987 509.091 73.585 509.913 73.8511 cv
510.733 74.1167 511.627 75.4717 512.323 76.0161 cv
513.028 76.561 513.972 79.1167 514.161 80.1318 cv
514.354 81.144 514.858 82.4629 515.239 83.3418 cv
515.905 84.8848 516.921 86.627 518.032 86.8857 cv
518.69 87.0356 519.948 89.3999 520.562 89.3867 cv
521.142 89.373 522.913 90.1577 523.226 90.502 cv
523.543 90.8428 525.388 91.0059 525.388 91.0059 cv
526.024 91.0059 527.161 91.6157 527.222 93.5708 cv
527.284 95.5278 525.509 96.0039 525.003 96.2026 cv
524.685 96.332 522.244 96.4019 520.295 96.436 cv
520.377 96.4448 520.445 96.4639 520.538 96.4639 cv
521.296 96.4639 527.132 96.4067 527.636 96.2026 cv
528.144 96.0039 529.918 95.5278 529.854 93.5708 cv
529.796 91.6157 528.657 91.0059 528.022 91.0059 cv
0.514 0 0.904 0 cmyk
f
488.597 90.311 mo
488.729 90.7798 488.354 94.9199 487.847 95.667 cv
487.343 96.4141 487.208 99.313 487.208 99.313 cv
487.208 99.313 487.205 99.5923 487.104 99.979 cv
487.671 98.9741 488.338 97.9468 488.64 97.5542 cv
489.21 96.8062 489.339 94.7871 489.274 94.3833 cv
489.22 94.0391 489.443 90.0352 489.431 88.3042 cv
489.381 88.3999 489.326 88.502 489.3 88.5752 cv
488.985 89.4492 488.468 89.8413 488.597 90.311 cv
f
485.867 101.744 mo
485.977 101.813 486.091 101.877 486.209 101.936 cv
486.252 101.744 486.33 101.512 486.459 101.225 cv
486.301 101.411 486.1 101.583 485.867 101.744 cv
0.639 0 1 0 cmyk
f
522.026 127.067 mo
522.026 127.067 517.416 131.531 515.666 133.137 cv
515.894 133.385 516.065 133.536 516.159 133.549 cv
517.054 133.683 517.047 134.159 517.681 133.683 cv
518.319 133.207 524.661 127.067 524.661 127.067 cv
524.661 127.067 525.672 125.572 524.909 124.498 cv
524.149 123.421 522.948 123.756 522.948 123.756 cv
522.062 124.255 li
522.135 124.33 522.209 124.402 522.276 124.498 cv
523.036 125.572 522.026 127.067 522.026 127.067 cv
0.514 0 0.904 0 cmyk
f
509.036 92.9121 mo
508.828 93.8003 508.448 94.7842 508.329 95.5972 cv
508.206 96.4771 508.712 98.0283 508.962 100.053 cv
509.212 102.079 509.723 103.57 509.723 103.57 cv
509.723 103.57 513.847 113.9 514.098 114.368 cv
514.347 114.834 514.923 117.07 514.923 117.07 cv
514.923 117.07 517.57 122.11 518.455 123.74 cv
518.764 123.792 519.114 123.936 519.428 124.254 cv
520.315 123.756 li
520.315 123.756 520.657 123.667 521.09 123.74 cv
520.205 122.11 517.556 117.07 517.556 117.07 cv
517.556 117.07 516.979 114.834 516.731 114.368 cv
516.479 113.9 512.356 103.57 512.356 103.57 cv
512.356 103.57 511.845 102.079 511.595 100.053 cv
511.347 98.0283 510.839 96.4771 510.962 95.5972 cv
511.021 95.1982 511.146 94.7539 511.282 94.3032 cv
510.882 94.0894 510.542 93.9282 510.388 93.9063 cv
510.207 93.8813 509.661 93.4521 509.036 92.9121 cv
f
494.761 116.938 mo
494.61 117.286 494.376 117.799 493.677 118.133 cv
492.983 118.471 488.228 126.213 488.038 126.663 cv
487.781 127.269 488.548 127.473 488.548 127.473 cv
489.817 128.69 li
489.817 128.69 490.513 130.168 489.751 132.131 cv
489.471 132.853 488.959 133.28 488.425 133.532 cv
488.874 133.75 489.151 133.885 489.151 133.885 cv
489.151 133.885 491.624 134.094 492.384 132.131 cv
493.146 130.168 492.449 128.69 492.449 128.69 cv
491.183 127.473 li
491.183 127.473 490.417 127.269 490.673 126.663 cv
490.86 126.213 495.618 118.471 496.312 118.133 cv
497.011 117.799 497.245 117.286 497.394 116.938 cv
497.591 116.476 498.114 115.56 498.721 114.539 cv
498.271 113.731 497.833 112.949 497.448 112.264 cv
496.418 113.985 495.103 116.138 494.761 116.938 cv
f
498.757 109.911 mo
498.73 110.102 498.156 111.082 497.448 112.265 cv
497.833 112.95 498.271 113.73 498.721 114.539 cv
499.163 113.791 499.646 112.992 500.081 112.265 cv
499.312 110.892 498.757 109.911 498.757 109.911 cv
0.639 0 1 0 cmyk
f
519.233 124.364 mo
519.428 124.255 li
519.114 123.936 518.764 123.792 518.455 123.74 cv
518.594 123.996 518.692 124.175 518.728 124.229 cv
518.981 124.637 519.233 124.364 519.233 124.364 cv
f
488.198 101.946 mo
488.581 101.742 488.867 101.489 489.093 101.224 cv
489.26 100.851 489.489 100.42 489.736 99.9819 cv
489.838 99.5928 489.841 99.313 489.841 99.313 cv
489.841 99.313 489.976 96.4141 490.481 95.667 cv
490.987 94.9209 491.362 90.7798 491.231 90.311 cv
491.101 89.8418 491.618 89.4487 491.935 88.5747 cv
491.96 88.5029 492.015 88.4019 492.063 88.3071 cv
492.061 88.002 492.052 87.7578 492.032 87.627 cv
491.903 86.7471 492.413 84.5259 492.413 84.5259 cv
491.771 84.959 489.971 87.249 489.431 88.3037 cv
489.443 90.0347 489.219 94.0391 489.274 94.3828 cv
489.339 94.7866 489.21 96.8057 488.64 97.5537 cv
488.338 97.9468 487.671 98.9741 487.104 99.979 cv
487.01 100.342 486.821 100.799 486.459 101.225 cv
486.33 101.512 486.252 101.744 486.209 101.936 cv
486.781 102.217 487.457 102.342 488.198 101.946 cv
f
509.151 90.604 mo
509.276 91.0059 509.282 91.748 509.091 92.6909 cv
509.076 92.7622 509.053 92.8389 509.036 92.9121 cv
509.661 93.4521 510.207 93.8809 510.388 93.9063 cv
510.542 93.9282 510.882 94.0889 511.282 94.3032 cv
511.423 93.835 511.564 93.3643 511.672 92.9131 cv
510.542 91.939 509.151 90.604 509.151 90.604 cv
f
527.222 93.5708 mo
527.161 91.6157 526.024 91.0059 525.388 91.0059 cv
525.388 91.0059 523.542 90.8428 523.226 90.502 cv
522.913 90.1577 521.142 89.373 520.562 89.3867 cv
519.948 89.3999 518.69 87.0356 518.032 86.8857 cv
516.921 86.627 515.905 84.8848 515.239 83.3418 cv
514.858 82.4629 514.354 81.144 514.161 80.1328 cv
513.972 79.1167 513.028 76.561 512.323 76.0161 cv
511.626 75.4717 510.733 74.1167 509.913 73.8511 cv
509.091 73.585 507.384 72.6987 506.745 72.6367 cv
506.108 72.5728 506.358 71.7627 506.298 71.1538 cv
506.239 70.5469 506.681 70.2046 507.126 70.0708 cv
507.569 69.938 508.009 69.0601 508.077 68.251 cv
508.142 67.439 508.399 64.7988 508.142 64.126 cv
507.884 63.4561 507.446 63.2446 507.569 62.709 cv
507.694 62.1699 507.442 60.6851 506.935 60.2769 cv
506.508 59.936 505.938 58.7866 504.595 58.5151 cv
503.964 58.5376 503.47 58.6147 502.955 58.9287 cv
503.622 59.3857 503.997 60.0347 504.3 60.2769 cv
504.808 60.6851 505.06 62.1699 504.937 62.709 cv
504.813 63.2446 505.251 63.4561 505.509 64.126 cv
505.765 64.7988 505.509 67.439 505.442 68.251 cv
505.376 69.0601 504.937 69.938 504.491 70.0708 cv
504.048 70.2046 503.606 70.5469 503.663 71.1538 cv
503.724 71.7627 503.476 72.5728 504.11 72.6367 cv
504.749 72.6987 506.458 73.585 507.28 73.8511 cv
508.099 74.1167 508.991 75.4717 509.69 76.0161 cv
510.394 76.561 511.337 79.1167 511.528 80.1328 cv
511.72 81.144 512.226 82.4629 512.604 83.3418 cv
513.271 84.8848 514.288 86.627 515.399 86.8857 cv
516.056 87.0356 517.313 89.3999 517.927 89.3867 cv
518.507 89.373 520.278 90.1577 520.593 90.502 cv
520.91 90.8428 522.755 91.0059 522.755 91.0059 cv
523.39 91.0059 524.528 91.6157 524.587 93.5708 cv
524.649 95.5288 522.876 96.0039 522.367 96.2026 cv
522.172 96.2817 521.167 96.3398 519.971 96.3799 cv
520.066 96.4077 520.181 96.4229 520.295 96.436 cv
522.244 96.4019 524.685 96.332 525.003 96.2026 cv
525.509 96.0039 527.283 95.5288 527.222 93.5708 cv
f
506.458 92.6909 mo
506.269 93.6318 505.825 94.7168 505.694 95.5972 cv
505.573 96.478 506.079 98.0278 506.327 100.053 cv
506.577 102.079 507.089 103.57 507.089 103.57 cv
507.089 103.57 511.212 113.9 511.464 114.368 cv
511.712 114.835 512.288 117.07 512.288 117.07 cv
512.288 117.07 515.839 123.827 516.095 124.229 cv
516.349 124.637 516.601 124.364 516.601 124.364 cv
517.681 123.756 li
517.681 123.756 518.022 123.667 518.455 123.74 cv
517.57 122.11 514.923 117.07 514.923 117.07 cv
514.923 117.07 514.347 114.835 514.099 114.368 cv
513.847 113.9 509.724 103.57 509.724 103.57 cv
509.724 103.57 509.212 102.079 508.962 100.053 cv
508.712 98.0278 508.206 96.478 508.329 95.5972 cv
508.448 94.7837 508.828 93.7998 509.036 92.9121 cv
507.908 91.939 506.519 90.604 506.519 90.604 cv
506.642 91.0059 506.649 91.748 506.458 92.6909 cv
f
520.315 123.756 mo
519.428 124.254 li
519.501 124.33 519.576 124.402 519.644 124.498 cv
520.403 125.571 519.394 127.067 519.394 127.067 cv
519.394 127.067 516.602 129.771 514.535 131.729 cv
514.986 132.333 515.374 132.819 515.666 133.137 cv
517.416 131.531 522.026 127.067 522.026 127.067 cv
522.026 127.067 523.036 125.571 522.276 124.498 cv
522.209 124.402 522.135 124.33 522.062 124.255 cv
521.868 124.363 li
521.868 124.363 521.614 124.637 521.362 124.229 cv
521.327 124.174 521.229 123.996 521.09 123.739 cv
520.657 123.667 520.315 123.756 520.315 123.756 cv
f
489.751 132.131 mo
490.513 130.168 489.817 128.69 489.817 128.69 cv
488.548 127.473 li
488.548 127.473 487.782 127.27 488.038 126.663 cv
488.228 126.213 492.983 118.471 493.677 118.133 cv
494.376 117.799 494.61 117.285 494.761 116.938 cv
495.103 116.138 496.418 113.985 497.448 112.264 cv
496.679 110.891 496.124 109.91 496.124 109.91 cv
496.058 110.379 492.702 115.588 492.126 116.938 cv
491.978 117.285 491.743 117.799 491.044 118.133 cv
490.351 118.471 485.593 126.213 485.405 126.663 cv
485.149 127.27 485.915 127.473 485.915 127.473 cv
487.183 128.69 li
487.183 128.69 487.878 130.168 487.116 132.131 cv
487.026 132.363 486.911 132.563 486.78 132.738 cv
487.429 133.05 488.003 133.329 488.425 133.532 cv
488.959 133.279 489.471 132.854 489.751 132.131 cv
f
486.459 101.225 mo
486.628 100.85 486.856 100.417 487.105 99.9785 cv
487.205 99.5928 487.208 99.3125 487.208 99.3125 cv
487.208 99.3125 487.343 96.4136 487.847 95.6665 cv
488.355 94.9204 488.73 90.7798 488.597 90.3105 cv
488.468 89.8418 488.985 89.4497 489.3 88.5757 cv
489.326 88.5015 489.381 88.3994 489.431 88.3037 cv
489.428 87.9995 489.419 87.7588 489.399 87.6265 cv
489.271 86.7466 489.778 84.5259 489.778 84.5259 cv
489.077 84.9976 486.98 87.7026 486.667 88.5757 cv
486.351 89.4497 485.833 89.8418 485.964 90.3105 cv
486.095 90.7798 485.72 94.9204 485.214 95.6665 cv
484.71 96.4136 484.573 99.3125 484.573 99.3125 cv
484.573 99.3125 484.565 99.8574 484.284 100.491 cv
484.321 100.631 484.397 100.742 484.653 100.864 cv
484.913 100.989 485.332 101.408 485.867 101.744 cv
486.1 101.583 486.301 101.411 486.459 101.225 cv
f
489.736 99.9814 mo
489.489 100.419 489.261 100.851 489.092 101.225 cv
489.453 100.799 489.642 100.344 489.736 99.9814 cv
f
487.104 99.979 mo
486.856 100.417 486.628 100.85 486.459 101.225 cv
486.821 100.799 487.01 100.342 487.104 99.979 cv
f
500.183 62.374 mo
499.866 63.9263 500.313 66.084 500.628 66.7622 cv
500.942 67.439 501.259 68.1152 501.134 68.9272 cv
501.011 69.7349 499.931 71.084 499.296 71.2861 cv
498.662 71.4888 497.146 71.4209 496.509 72.0288 cv
495.874 72.6372 489.151 77.6382 488.835 78.4478 cv
488.521 79.2578 484.647 83.98 484.585 84.6582 cv
484.526 85.334 483.575 88.5059 483.767 89.9263 cv
483.956 91.3423 483.767 99.0459 484.078 99.7173 cv
484.255 100.09 484.239 100.315 484.284 100.49 cv
484.565 99.8579 484.573 99.313 484.573 99.313 cv
484.573 99.313 484.71 96.4141 485.214 95.667 cv
485.72 94.9199 486.095 90.7798 485.964 90.311 cv
485.833 89.8408 486.351 89.4492 486.667 88.5752 cv
486.979 87.7031 489.077 84.998 489.778 84.5259 cv
489.778 84.5259 489.271 86.7471 489.399 87.627 cv
489.419 87.7578 489.428 88 489.431 88.3042 cv
489.971 87.249 491.771 84.958 492.412 84.5259 cv
492.412 84.5259 491.903 86.7471 492.032 87.627 cv
492.052 87.7578 492.061 88.001 492.063 88.3071 cv
492.6 87.2529 494.403 84.959 495.046 84.5259 cv
495.046 84.5259 494.537 86.7471 494.667 87.627 cv
494.8 88.5059 494.478 93.978 494.54 94.3828 cv
494.606 94.7871 494.478 96.8062 493.905 97.5542 cv
493.335 98.2988 491.433 101.339 491.433 102.15 cv
491.433 102.959 489.597 106.875 489.597 106.875 cv
489.597 106.875 487.751 111.204 487.819 111.873 cv
487.884 112.543 487.124 112.885 486.931 113.422 cv
486.741 113.959 486.237 115.721 485.792 116.464 cv
485.349 117.204 483.319 120.584 483.319 121.194 cv
483.319 121.801 482.435 123.28 482.175 123.555 cv
481.921 123.827 480.786 125.44 480.724 125.711 cv
480.657 125.985 480.085 126.998 480.085 127.674 cv
480.085 128.352 479.772 129.694 480.724 129.965 cv
481.319 130.137 484.502 131.645 486.78 132.739 cv
486.911 132.563 487.026 132.364 487.116 132.131 cv
487.878 130.168 487.183 128.69 487.183 128.69 cv
485.915 127.473 li
485.915 127.473 485.149 127.269 485.405 126.663 cv
485.593 126.213 490.351 118.471 491.044 118.133 cv
491.743 117.799 491.978 117.286 492.126 116.938 cv
492.702 115.588 496.058 110.379 496.124 109.911 cv
496.124 109.911 496.679 110.892 497.448 112.264 cv
498.156 111.082 498.73 110.102 498.757 109.911 cv
498.757 109.911 499.312 110.892 500.081 112.264 cv
500.789 111.082 501.363 110.102 501.39 109.911 cv
501.39 109.911 507.159 120.118 507.353 120.788 cv
507.494 121.298 511.994 128.328 514.535 131.729 cv
516.602 129.77 519.394 127.067 519.394 127.067 cv
519.394 127.067 520.403 125.572 519.644 124.498 cv
519.576 124.402 519.501 124.33 519.428 124.254 cv
519.233 124.364 li
519.233 124.364 518.981 124.637 518.728 124.229 cv
518.692 124.174 518.594 123.996 518.455 123.74 cv
518.022 123.667 517.681 123.756 517.681 123.756 cv
516.601 124.364 li
516.601 124.364 516.349 124.637 516.095 124.229 cv
515.839 123.827 512.287 117.07 512.287 117.07 cv
512.287 117.07 511.712 114.834 511.464 114.368 cv
511.212 113.9 507.089 103.57 507.089 103.57 cv
507.089 103.57 506.577 102.079 506.327 100.053 cv
506.078 98.0278 505.573 96.478 505.694 95.5972 cv
505.825 94.7173 506.269 93.6318 506.458 92.6909 cv
506.649 91.748 506.642 91.0059 506.519 90.604 cv
506.519 90.604 507.908 91.939 509.036 92.9121 cv
509.053 92.8389 509.076 92.7622 509.091 92.6909 cv
509.282 91.748 509.276 91.0059 509.151 90.604 cv
509.151 90.604 510.542 91.939 511.671 92.9131 cv
511.688 92.8389 511.711 92.7632 511.726 92.6909 cv
511.917 91.748 511.909 91.0059 511.786 90.604 cv
511.786 90.604 515.149 93.8369 515.655 93.9058 cv
516.159 93.978 518.565 95.4629 519.015 95.7988 cv
519.328 96.0352 519.585 96.2622 519.971 96.3789 cv
521.167 96.3389 522.172 96.2822 522.368 96.2031 cv
522.876 96.0039 524.649 95.5278 524.587 93.5708 cv
524.528 91.6162 523.39 91.0059 522.755 91.0059 cv
522.755 91.0059 520.909 90.8433 520.593 90.501 cv
520.278 90.1582 518.507 89.373 517.927 89.3872 cv
517.313 89.3989 516.056 87.0361 515.399 86.8862 cv
514.287 86.626 513.271 84.8853 512.604 83.3423 cv
512.226 82.4629 511.72 81.144 511.528 80.1318 cv
511.337 79.1172 510.394 76.561 509.69 76.0161 cv
508.991 75.4722 508.099 74.1172 507.28 73.8511 cv
506.458 73.584 504.749 72.6992 504.11 72.6372 cv
503.476 72.5728 503.724 71.7632 503.662 71.1538 cv
503.606 70.5459 504.048 70.2051 504.491 70.0708 cv
504.937 69.938 505.376 69.0601 505.442 68.251 cv
505.509 67.439 505.765 64.7979 505.509 64.125 cv
505.251 63.4561 504.813 63.2451 504.937 62.709 cv
505.06 62.1699 504.808 60.6851 504.3 60.2759 cv
503.996 60.0352 503.621 59.3862 502.955 58.9292 cv
502.795 59.0259 502.634 59.1401 502.466 59.2891 cv
501.776 59.9028 500.496 60.8218 500.183 62.374 cv
0.719 0.25 1 0.095 cmyk
f
461.093 159.005 mo
460.718 158.8 460.401 158.505 460.151 158.127 cv
459.913 157.766 459.729 157.328 459.606 156.823 cv
459.485 156.331 459.425 155.772 459.425 155.161 cv
459.425 153.88 459.677 152.85 460.173 152.096 cv
460.716 151.283 461.479 150.872 462.442 150.872 cv
462.876 150.872 463.3 150.988 463.71 151.218 cv
463.71 148.651 li
463.233 148.516 462.763 148.448 462.304 148.448 cv
460.519 148.448 459.136 149.035 458.079 150.242 cv
457.021 151.459 456.481 153.111 456.481 155.151 cv
456.481 157.33 457.052 159.026 458.175 160.193 cv
459.177 161.233 460.38 161.739 461.851 161.739 cv
462.388 161.739 462.999 161.625 463.675 161.4 cv
463.817 158.915 li
462.874 159.437 461.853 159.42 461.093 159.005 cv
0 0 0 0 cmyk
f
474.729 159.684 mo
474.962 159.229 475.077 158.627 475.077 157.882 cv
475.077 148.448 li
472.218 148.448 li
472.218 157.121 li
472.218 157.863 472.13 158.365 471.94 158.701 cv
471.769 158.987 471.429 159.313 470.735 159.313 cv
470.056 159.313 469.712 158.97 469.543 158.682 cv
469.339 158.336 469.245 157.839 469.245 157.112 cv
469.245 148.448 li
466.386 148.448 li
466.386 157.345 li
466.386 158.991 466.875 160.143 467.882 160.869 cv
468.685 161.446 469.704 161.739 470.911 161.739 cv
471.966 161.739 472.868 161.477 473.593 160.958 cv
474.124 160.575 474.507 160.145 474.729 159.684 cv
f
484.294 161.739 mo
487.175 161.739 li
487.175 148.448 li
484.454 148.448 li
484.454 151.159 li
484.454 151.738 484.489 152.471 484.562 153.339 cv
484.636 154.217 484.743 155.274 484.884 156.509 cv
483.911 156.716 li
483.513 155.456 li
483.354 154.963 483.21 154.526 483.077 154.146 cv
482.724 153.13 li
480.917 148.448 li
478.075 148.448 li
478.075 161.739 li
480.798 161.739 li
480.798 158.592 li
480.798 158.055 480.763 157.41 480.692 156.677 cv
480.622 155.938 480.511 155.063 480.357 154.076 cv
481.333 153.86 li
481.46 154.296 481.61 154.755 481.78 155.236 cv
481.952 155.723 482.146 156.245 482.357 156.802 cv
484.294 161.739 li
cp
f
495.146 160.569 mo
495.916 159.778 496.291 158.795 496.291 157.563 cv
496.291 156.853 496.14 156.253 495.825 155.733 cv
495.511 155.2 494.972 154.668 494.22 154.146 cv
493.603 153.707 li
492.944 153.25 492.608 152.742 492.608 152.201 cv
492.608 151.823 492.774 151.488 493.089 151.233 cv
493.681 150.719 494.709 150.754 495.606 151.383 cv
495.704 151.452 495.8 151.526 495.894 151.605 cv
495.894 148.971 li
495.128 148.625 494.364 148.447 493.616 148.447 cv
492.694 148.447 491.937 148.702 491.296 149.228 cv
491.058 149.415 490.851 149.625 490.675 149.859 cv
490.489 150.107 490.327 150.379 490.19 150.668 cv
489.916 151.292 489.776 151.904 489.776 152.474 cv
489.776 152.805 489.813 153.125 489.89 153.423 cv
489.964 153.714 490.084 154.003 490.245 154.28 cv
490.409 154.564 490.626 154.843 490.89 155.108 cv
491.169 155.392 491.509 155.678 491.899 155.961 cv
492.538 156.441 li
493.126 156.895 493.423 157.39 493.423 157.92 cv
493.423 158.327 493.25 158.683 492.923 158.947 cv
492.622 159.19 492.243 159.313 491.794 159.313 cv
491.101 159.313 490.444 159.053 489.831 158.541 cv
489.831 161.303 li
492.05 162.05 493.896 161.854 495.146 160.569 cv
f
505.187 148.448 mo
497.985 148.448 li
497.985 150.872 li
500.114 150.872 li
500.114 161.739 li
502.974 161.739 li
502.974 150.872 li
505.187 150.872 li
505.187 148.448 li
cp
f
514.327 156.503 mo
514.71 156.276 li
516.677 158.878 li
516.304 159.183 li
515.897 159.516 515.464 159.685 515.014 159.685 cv
514.563 159.685 514.163 159.509 513.86 159.179 cv
513.557 158.852 513.405 158.454 513.405 157.999 cv
513.405 157.564 513.563 156.954 514.327 156.503 cv
514.7 150.875 mo
514.772 150.722 514.868 150.588 514.991 150.477 cv
515.108 150.37 515.241 150.284 515.389 150.22 cv
515.856 150.025 516.425 150.125 516.79 150.481 cv
517.034 150.721 517.163 151.032 517.163 151.381 cv
517.163 151.911 516.833 152.478 516.124 153.167 cv
515.694 153.583 li
515.36 153.086 li
514.827 152.293 514.589 151.764 514.589 151.372 cv
514.589 151.201 514.626 151.034 514.7 150.875 cv
511.915 160.631 mo
512.702 161.377 513.638 161.738 514.774 161.738 cv
515.776 161.738 516.768 161.496 517.723 161.014 cv
518.106 160.822 li
518.763 161.738 li
521.679 161.738 li
520.042 159.556 li
520.38 159.25 li
520.604 159.046 520.837 158.831 521.077 158.597 cv
521.225 158.453 521.38 158.297 521.536 158.132 cv
520.223 156.407 li
520.095 156.571 519.973 156.722 519.858 156.858 cv
519.63 157.134 519.429 157.362 519.257 157.545 cv
518.858 157.968 li
516.755 155.268 li
517.216 154.971 li
518.7 154.024 519.421 152.966 519.421 151.738 cv
519.421 150.833 519.059 150.08 518.315 149.434 cv
517.557 148.771 516.661 148.447 515.579 148.447 cv
514.593 148.447 513.782 148.754 513.106 149.384 cv
512.434 150.008 512.108 150.736 512.108 151.611 cv
512.108 152.391 512.442 153.195 513.098 154.004 cv
513.475 154.468 li
512.952 154.757 li
511.47 155.576 510.749 156.628 510.749 157.976 cv
510.749 159.021 511.13 159.891 511.915 160.631 cv
f
533.343 159.005 mo
532.968 158.799 532.651 158.504 532.401 158.127 cv
532.163 157.763 531.979 157.325 531.856 156.823 cv
531.735 156.336 531.675 155.776 531.675 155.161 cv
531.675 153.882 531.927 152.852 532.423 152.097 cv
532.968 151.283 533.731 150.872 534.692 150.872 cv
535.126 150.872 535.55 150.988 535.96 151.218 cv
535.96 148.651 li
535.483 148.516 535.013 148.448 534.554 148.448 cv
532.769 148.448 531.388 149.035 530.331 150.242 cv
529.271 151.459 528.731 153.11 528.731 155.151 cv
528.731 157.33 529.302 159.026 530.425 160.193 cv
531.429 161.233 532.632 161.739 534.101 161.739 cv
534.638 161.739 535.251 161.625 535.925 161.4 cv
536.067 158.915 li
535.122 159.437 534.103 159.42 533.343 159.005 cv
f
544.71 158.038 mo
544.302 159.091 543.657 159.313 543.189 159.313 cv
542.729 159.313 542.093 159.088 541.681 158.017 cv
541.407 157.303 541.272 156.346 541.272 155.092 cv
541.272 153.814 541.417 152.858 541.712 152.172 cv
542.149 151.099 542.798 150.871 543.263 150.871 cv
545.134 150.871 545.134 154.11 545.134 155.174 cv
545.134 156.372 544.991 157.336 544.71 158.038 cv
546.778 150.195 mo
545.897 149.019 544.741 148.448 543.245 148.448 cv
542.024 148.448 540.997 148.871 540.105 149.744 cv
538.892 150.933 538.274 152.698 538.274 154.991 cv
538.274 157.392 538.864 159.204 540.028 160.375 cv
540.944 161.292 542.013 161.739 543.292 161.739 cv
544.724 161.739 545.856 161.161 546.753 159.971 cv
547.675 158.747 548.142 157.123 548.142 155.142 cv
548.142 153.064 547.683 151.4 546.778 150.195 cv
f
1 lw
223.581 467.034 mo
113.67 467.034 li
113.67 341.024 li
223.581 341.024 li
223.581 467.034 li
cp
@
179.336 387.841 mo
179.154 387.817 178.609 387.387 177.984 386.848 cv
177.877 387.299 177.734 387.771 177.596 388.238 cv
178.502 388.721 179.749 389.501 180.062 389.734 cv
180.508 390.07 180.822 390.399 181.584 390.399 cv
181.863 390.399 182.836 390.391 183.976 390.372 cv
183.396 390.305 183.086 390.029 182.695 389.734 cv
182.247 389.398 179.84 387.914 179.336 387.841 cv
0.514 0 0.904 0 cmyk
f
157.545 384.247 mo
157.676 384.715 157.301 388.855 156.795 389.603 cv
156.289 390.35 156.154 393.249 156.154 393.249 cv
156.154 393.249 156.151 393.529 156.05 393.917 cv
156.617 392.912 157.285 391.882 157.586 391.49 cv
158.156 390.742 158.285 388.723 158.221 388.318 cv
158.166 387.975 158.39 383.976 158.377 382.243 cv
158.328 382.337 158.274 382.438 158.248 382.511 cv
157.932 383.385 157.414 383.776 157.545 384.247 cv
f
166.395 406.2 mo
165.958 406.928 165.477 407.726 165.035 408.474 cv
166.592 411.271 168.294 414.365 168.398 414.723 cv
168.585 415.394 176.314 427.352 177.206 427.485 cv
178.101 427.619 178.095 428.094 178.728 427.619 cv
178.82 427.549 179.045 427.348 179.347 427.073 cv
177.404 424.959 171.2 415.324 171.034 414.723 cv
170.899 414.261 168.11 409.257 166.395 406.2 cv
f
143.766 421.61 mo
143.766 420.933 144.335 419.921 144.402 419.647 cv
144.467 419.376 145.602 417.762 145.855 417.491 cv
146.114 417.215 147 415.737 147 415.13 cv
147 414.52 149.03 411.139 149.473 410.4 cv
149.917 409.657 150.421 407.895 150.612 407.358 cv
150.803 406.821 151.564 406.479 151.5 405.808 cv
151.432 405.139 153.275 400.811 153.275 400.811 cv
153.275 400.811 155.112 396.895 155.112 396.086 cv
155.112 395.888 155.227 395.556 155.407 395.16 cv
155.181 395.425 154.895 395.678 154.512 395.881 cv
153.771 396.278 153.095 396.153 152.522 395.872 cv
152.507 395.944 152.479 396.031 152.479 396.086 cv
152.479 396.895 150.643 400.811 150.643 400.811 cv
150.643 400.811 148.799 405.139 148.866 405.808 cv
148.932 406.479 148.169 406.821 147.977 407.358 cv
147.787 407.895 147.284 409.657 146.837 410.4 cv
146.395 411.139 144.368 414.52 144.368 415.13 cv
144.368 415.737 143.48 417.215 143.223 417.491 cv
142.967 417.762 141.833 419.376 141.77 419.647 cv
141.703 419.921 141.13 420.933 141.13 421.61 cv
141.13 422.288 140.818 423.629 141.77 423.901 cv
142.717 424.174 150.198 427.821 150.198 427.821 cv
150.198 427.821 151.186 427.903 152.104 427.468 cv
150.205 426.546 145.169 424.122 144.402 423.901 cv
143.452 423.629 143.766 422.288 143.766 421.61 cv
f
147.76 393.653 mo
147.448 392.982 147.637 385.278 147.448 383.861 cv
147.254 382.442 148.205 379.27 148.266 378.594 cv
148.328 377.916 152.199 373.194 152.516 372.383 cv
152.83 371.574 159.555 366.573 160.188 365.965 cv
160.826 365.357 162.344 365.424 162.977 365.221 cv
163.612 365.02 164.69 363.671 164.813 362.862 cv
164.938 362.051 164.623 361.375 164.309 360.697 cv
163.994 360.02 163.547 357.861 163.862 356.31 cv
164.178 354.757 165.457 353.839 166.145 353.225 cv
166.859 352.592 167.45 352.48 168.275 352.45 cv
168.025 352.4 167.757 352.369 167.447 352.391 cv
165.479 352.533 164.651 352.214 163.512 353.225 cv
162.823 353.839 161.543 354.757 161.229 356.31 cv
160.914 357.861 161.36 360.02 161.676 360.697 cv
161.989 361.375 162.305 362.051 162.18 362.862 cv
162.057 363.671 160.977 365.02 160.342 365.221 cv
159.711 365.424 158.192 365.357 157.555 365.965 cv
156.92 366.573 150.198 371.574 149.883 372.383 cv
149.567 373.194 145.694 377.916 145.631 378.594 cv
145.572 379.27 144.621 382.442 144.813 383.861 cv
145.002 385.278 144.813 392.982 145.125 393.653 cv
145.444 394.326 145.125 394.525 145.699 394.799 cv
146.268 395.072 147.596 396.763 149.244 395.882 cv
149.359 395.82 149.447 395.747 149.546 395.679 cv
149.011 395.343 148.592 394.924 148.332 394.799 cv
147.76 394.525 148.076 394.326 147.76 393.653 cv
f
179.346 427.073 mo
179.575 427.321 179.746 427.471 179.84 427.485 cv
180.733 427.619 180.727 428.093 181.36 427.619 cv
181.453 427.549 181.678 427.348 181.979 427.073 cv
181.688 426.754 181.299 426.268 180.848 425.665 cv
180.26 426.223 179.735 426.715 179.346 427.073 cv
0.639 0 1 0 cmyk
f
152.104 427.468 mo
152.554 427.686 152.831 427.821 152.831 427.821 cv
152.831 427.821 153.818 427.903 154.738 427.467 cv
154.316 427.264 153.743 426.987 153.094 426.674 cv
152.817 427.043 152.466 427.297 152.104 427.468 cv
f
188.182 418.299 mo
188.375 418.19 li
188.061 417.873 187.711 417.728 187.403 417.675 cv
187.541 417.931 187.641 418.11 187.676 418.165 cv
187.928 418.572 188.182 418.299 188.182 418.299 cv
0.514 0 0.904 0 cmyk
f
150.598 394.426 mo
150.409 394.852 150.082 395.309 149.546 395.679 cv
150.183 396.079 150.984 396.361 151.879 395.882 cv
151.994 395.821 152.081 395.748 152.181 395.679 cv
151.646 395.343 151.227 394.924 150.967 394.8 cv
150.711 394.677 150.635 394.567 150.598 394.426 cv
0.639 0 1 0 cmyk
f
183.975 390.371 mo
184.055 390.38 184.123 390.399 184.217 390.399 cv
184.496 390.399 185.469 390.391 186.608 390.371 cv
186.495 390.358 186.379 390.344 186.284 390.315 cv
185.539 390.34 184.723 390.358 183.975 390.371 cv
f
170.908 352.45 mo
170.657 352.4 170.389 352.369 170.08 352.391 cv
169.344 352.444 168.767 352.432 168.274 352.45 cv
168.666 352.53 168.994 352.677 169.268 352.865 cv
169.783 352.551 170.277 352.473 170.908 352.45 cv
f
150.598 394.426 mo
150.553 394.251 150.569 394.026 150.393 393.653 cv
150.08 392.982 150.27 385.278 150.08 383.862 cv
149.889 382.442 150.84 379.27 150.899 378.594 cv
150.961 377.916 154.833 373.194 155.149 372.384 cv
155.465 371.574 162.188 366.573 162.823 365.965 cv
163.458 365.357 164.977 365.425 165.61 365.221 cv
166.244 365.02 167.325 363.671 167.448 362.863 cv
167.573 362.051 167.256 361.375 166.942 360.697 cv
166.627 360.02 166.18 357.862 166.496 356.31 cv
166.811 354.758 168.09 353.839 168.78 353.225 cv
168.948 353.075 169.109 352.962 169.269 352.865 cv
168.994 352.677 168.666 352.53 168.275 352.45 cv
167.451 352.48 166.859 352.592 166.145 353.225 cv
165.457 353.839 164.178 354.758 163.862 356.31 cv
163.547 357.862 163.994 360.02 164.309 360.697 cv
164.623 361.375 164.938 362.051 164.813 362.863 cv
164.689 363.671 163.612 365.02 162.977 365.221 cv
162.344 365.425 160.827 365.357 160.188 365.965 cv
159.555 366.573 152.83 371.574 152.516 372.384 cv
152.2 373.194 148.328 377.916 148.266 378.594 cv
148.205 379.27 147.254 382.442 147.448 383.862 cv
147.637 385.278 147.448 392.982 147.76 393.653 cv
148.077 394.326 147.76 394.525 148.332 394.8 cv
148.592 394.924 149.011 395.343 149.546 395.679 cv
150.082 395.309 150.409 394.852 150.598 394.426 cv
f
153.094 426.674 mo
150.816 425.581 147.633 424.073 147.037 423.901 cv
146.086 423.629 146.399 422.288 146.399 421.61 cv
146.399 420.933 146.971 419.92 147.037 419.647 cv
147.1 419.375 148.235 417.762 148.489 417.49 cv
148.748 417.215 149.633 415.736 149.633 415.129 cv
149.633 414.521 151.662 411.139 152.105 410.4 cv
152.551 409.656 153.055 407.896 153.244 407.358 cv
153.438 406.82 154.198 406.479 154.133 405.808 cv
154.064 405.139 155.91 400.812 155.91 400.812 cv
155.91 400.812 157.746 396.896 157.746 396.085 cv
157.746 395.274 159.649 392.235 160.219 391.489 cv
160.791 390.741 160.92 388.722 160.854 388.318 cv
160.791 387.914 161.114 382.442 160.98 381.563 cv
160.852 380.682 161.36 378.461 161.36 378.461 cv
160.717 378.895 158.913 381.189 158.377 382.242 cv
158.39 383.975 158.166 387.974 158.221 388.318 cv
158.285 388.722 158.156 390.741 157.586 391.489 cv
157.285 391.882 156.617 392.911 156.05 393.917 cv
155.955 394.28 155.767 394.735 155.407 395.159 cv
155.227 395.555 155.112 395.888 155.112 396.085 cv
155.112 396.896 153.276 400.812 153.276 400.812 cv
153.276 400.812 151.432 405.139 151.5 405.808 cv
151.564 406.479 150.803 406.82 150.612 407.358 cv
150.422 407.896 149.917 409.656 149.473 410.4 cv
149.03 411.139 147 414.521 147 415.129 cv
147 415.736 146.114 417.215 145.855 417.49 cv
145.602 417.762 144.467 419.375 144.403 419.647 cv
144.336 419.92 143.766 420.933 143.766 421.61 cv
143.766 422.288 143.451 423.629 144.403 423.901 cv
145.17 424.122 150.205 426.547 152.104 427.468 cv
152.467 427.297 152.818 427.043 153.094 426.674 cv
f
173.666 414.723 mo
173.473 414.053 167.703 403.846 167.703 403.846 cv
167.677 404.037 167.103 405.017 166.395 406.2 cv
168.11 409.256 170.899 414.261 171.033 414.723 cv
171.199 415.324 177.405 424.959 179.346 427.073 cv
179.735 426.715 180.26 426.223 180.848 425.665 cv
178.307 422.263 173.809 415.233 173.666 414.723 cv
f
185.329 389.734 mo
184.879 389.398 182.474 387.914 181.97 387.841 cv
181.463 387.772 178.1 384.54 178.1 384.54 cv
178.224 384.941 178.23 385.683 178.04 386.626 cv
178.023 386.698 178 386.775 177.984 386.848 cv
178.609 387.387 179.155 387.817 179.336 387.841 cv
179.841 387.914 182.247 389.398 182.696 389.734 cv
183.086 390.029 183.395 390.305 183.975 390.372 cv
184.724 390.358 185.54 390.339 186.284 390.315 cv
185.898 390.197 185.641 389.97 185.329 389.734 cv
f
194.336 384.941 mo
194.336 384.941 192.49 384.778 192.174 384.438 cv
191.859 384.093 190.088 383.309 189.508 383.322 cv
188.896 383.335 187.637 380.971 186.981 380.821 cv
185.87 380.563 184.853 378.82 184.187 377.277 cv
183.805 376.398 183.301 375.08 183.109 374.067 cv
182.918 373.052 181.976 370.497 181.272 369.952 cv
180.572 369.407 179.68 368.052 178.861 367.787 cv
178.04 367.521 176.331 366.634 175.691 366.572 cv
175.057 366.508 175.304 365.698 175.245 365.089 cv
175.188 364.482 175.628 364.141 176.072 364.006 cv
176.519 363.874 176.956 362.996 177.024 362.187 cv
177.09 361.375 177.346 358.733 177.09 358.062 cv
176.833 357.392 176.396 357.181 176.519 356.645 cv
176.642 356.105 176.389 354.621 175.88 354.212 cv
175.375 353.808 174.682 352.251 172.714 352.392 cv
171.979 352.443 171.401 352.433 170.908 352.451 cv
172.252 352.723 172.821 353.872 173.249 354.212 cv
173.755 354.621 174.007 356.105 173.882 356.645 cv
173.759 357.181 174.197 357.392 174.456 358.062 cv
174.712 358.733 174.456 361.375 174.391 362.187 cv
174.322 362.996 173.882 363.874 173.439 364.006 cv
172.995 364.141 172.552 364.482 172.611 365.089 cv
172.671 365.698 172.421 366.508 173.059 366.572 cv
173.697 366.634 175.404 367.521 176.228 367.787 cv
177.047 368.052 177.94 369.407 178.637 369.952 cv
179.342 370.497 180.285 373.052 180.476 374.067 cv
180.668 375.08 181.172 376.398 181.553 377.277 cv
182.219 378.82 183.234 380.563 184.346 380.821 cv
185.004 380.971 186.262 383.335 186.875 383.322 cv
187.456 383.309 189.228 384.093 189.54 384.438 cv
189.856 384.778 191.701 384.941 191.701 384.941 cv
192.338 384.941 193.476 385.551 193.535 387.506 cv
193.599 389.463 191.822 389.939 191.316 390.138 cv
190.999 390.268 188.558 390.337 186.607 390.372 cv
186.69 390.38 186.758 390.399 186.853 390.399 cv
187.609 390.399 193.445 390.342 193.949 390.138 cv
194.458 389.939 196.231 389.463 196.168 387.506 cv
196.109 385.551 194.971 384.941 194.336 384.941 cv
0.514 0 0.904 0 cmyk
f
154.91 384.247 mo
155.043 384.715 154.668 388.855 154.16 389.603 cv
153.656 390.35 153.521 393.249 153.521 393.249 cv
153.521 393.249 153.518 393.527 153.418 393.915 cv
153.984 392.91 154.651 391.882 154.953 391.49 cv
155.523 390.742 155.652 388.723 155.588 388.318 cv
155.533 387.975 155.757 383.971 155.744 382.24 cv
155.694 382.335 155.639 382.438 155.613 382.511 cv
155.299 383.385 154.781 383.776 154.91 384.247 cv
f
152.181 395.679 mo
152.29 395.748 152.405 395.813 152.522 395.871 cv
152.566 395.679 152.644 395.447 152.772 395.16 cv
152.615 395.346 152.413 395.518 152.181 395.679 cv
0.639 0 1 0 cmyk
f
188.34 421.002 mo
188.34 421.002 183.729 425.467 181.979 427.073 cv
182.208 427.321 182.379 427.471 182.473 427.485 cv
183.367 427.619 183.36 428.094 183.994 427.619 cv
184.633 427.142 190.975 421.002 190.975 421.002 cv
190.975 421.002 191.985 419.507 191.223 418.434 cv
190.463 417.356 189.262 417.691 189.262 417.691 cv
188.375 418.19 li
188.447 418.266 188.522 418.337 188.59 418.434 cv
189.35 419.507 188.34 421.002 188.34 421.002 cv
0.514 0 0.904 0 cmyk
f
175.35 386.848 mo
175.142 387.736 174.762 388.72 174.643 389.533 cv
174.52 390.413 175.025 391.963 175.275 393.989 cv
175.525 396.015 176.038 397.505 176.038 397.505 cv
176.038 397.505 180.161 407.835 180.413 408.304 cv
180.661 408.77 181.237 411.005 181.237 411.005 cv
181.237 411.005 183.884 416.045 184.768 417.676 cv
185.077 417.728 185.429 417.872 185.741 418.189 cv
186.629 417.691 li
186.629 417.691 186.972 417.603 187.402 417.676 cv
186.518 416.045 183.87 411.005 183.87 411.005 cv
183.87 411.005 183.293 408.77 183.045 408.304 cv
182.793 407.835 178.67 397.505 178.67 397.505 cv
178.67 397.505 178.159 396.015 177.909 393.989 cv
177.661 391.963 177.152 390.413 177.275 389.533 cv
177.334 389.134 177.459 388.689 177.597 388.239 cv
177.196 388.024 176.855 387.864 176.702 387.842 cv
176.52 387.816 175.975 387.388 175.35 386.848 cv
f
161.074 410.874 mo
160.924 411.222 160.689 411.734 159.99 412.068 cv
159.297 412.407 154.541 420.148 154.351 420.599 cv
154.095 421.205 154.861 421.409 154.861 421.409 cv
156.131 422.625 li
156.131 422.625 156.826 424.104 156.064 426.067 cv
155.784 426.789 155.272 427.215 154.738 427.467 cv
155.187 427.686 155.465 427.821 155.465 427.821 cv
155.465 427.821 157.937 428.03 158.697 426.067 cv
159.459 424.104 158.763 422.625 158.763 422.625 cv
157.496 421.409 li
157.496 421.409 156.73 421.205 156.986 420.599 cv
157.174 420.148 161.931 412.407 162.625 412.068 cv
163.324 411.734 163.558 411.222 163.707 410.874 cv
163.904 410.412 164.428 409.496 165.034 408.475 cv
164.584 407.667 164.146 406.884 163.762 406.2 cv
162.731 407.92 161.416 410.074 161.074 410.874 cv
f
165.07 403.846 mo
165.044 404.037 164.469 405.017 163.761 406.2 cv
164.146 406.885 164.584 407.666 165.034 408.474 cv
165.476 407.726 165.959 406.927 166.395 406.2 cv
165.625 404.827 165.07 403.846 165.07 403.846 cv
0.639 0 1 0 cmyk
f
185.547 418.299 mo
185.74 418.19 li
185.428 417.872 185.076 417.728 184.769 417.675 cv
184.906 417.931 185.006 418.11 185.042 418.165 cv
185.295 418.572 185.547 418.299 185.547 418.299 cv
f
154.512 395.881 mo
154.895 395.677 155.181 395.424 155.407 395.159 cv
155.574 394.786 155.803 394.355 156.05 393.917 cv
156.152 393.528 156.155 393.249 156.155 393.249 cv
156.155 393.249 156.289 390.349 156.795 389.603 cv
157.301 388.856 157.676 384.715 157.545 384.247 cv
157.414 383.777 157.932 383.384 158.248 382.51 cv
158.274 382.438 158.328 382.337 158.377 382.242 cv
158.374 381.938 158.366 381.693 158.346 381.563 cv
158.217 380.682 158.727 378.461 158.727 378.461 cv
158.083 378.895 156.284 381.185 155.744 382.239 cv
155.757 383.97 155.533 387.974 155.588 388.318 cv
155.653 388.722 155.524 390.741 154.953 391.489 cv
154.652 391.882 153.985 392.909 153.417 393.915 cv
153.324 394.277 153.135 394.734 152.772 395.16 cv
152.644 395.447 152.566 395.679 152.522 395.872 cv
153.095 396.152 153.771 396.277 154.512 395.881 cv
f
175.465 384.54 mo
175.59 384.941 175.596 385.684 175.404 386.626 cv
175.39 386.698 175.366 386.774 175.35 386.848 cv
175.975 387.388 176.52 387.816 176.702 387.841 cv
176.856 387.864 177.196 388.024 177.596 388.239 cv
177.735 387.771 177.878 387.299 177.985 386.849 cv
176.856 385.875 175.465 384.54 175.465 384.54 cv
f
193.536 387.506 mo
193.475 385.551 192.338 384.941 191.702 384.941 cv
191.702 384.941 189.855 384.778 189.54 384.438 cv
189.227 384.093 187.456 383.308 186.875 383.322 cv
186.263 383.335 185.004 380.971 184.347 380.821 cv
183.234 380.563 182.22 378.82 181.554 377.277 cv
181.172 376.398 180.668 375.08 180.475 374.068 cv
180.286 373.052 179.343 370.497 178.638 369.951 cv
177.939 369.407 177.047 368.052 176.227 367.786 cv
175.405 367.521 173.698 366.634 173.059 366.572 cv
172.421 366.508 172.671 365.698 172.612 365.089 cv
172.553 364.482 172.994 364.14 173.439 364.006 cv
173.883 363.874 174.323 362.996 174.391 362.187 cv
174.455 361.375 174.712 358.734 174.455 358.062 cv
174.198 357.391 173.76 357.18 173.883 356.645 cv
174.008 356.105 173.755 354.621 173.248 354.212 cv
172.822 353.872 172.251 352.722 170.909 352.45 cv
170.278 352.473 169.784 352.55 169.269 352.864 cv
169.936 353.321 170.311 353.97 170.614 354.212 cv
171.121 354.621 171.373 356.105 171.25 356.645 cv
171.126 357.18 171.564 357.391 171.823 358.062 cv
172.078 358.734 171.823 361.375 171.755 362.187 cv
171.689 362.996 171.25 363.874 170.805 364.006 cv
170.362 364.14 169.919 364.482 169.977 365.089 cv
170.037 365.698 169.789 366.508 170.424 366.572 cv
171.063 366.634 172.771 367.521 173.594 367.786 cv
174.412 368.052 175.305 369.407 176.003 369.951 cv
176.708 370.497 177.65 373.052 177.843 374.068 cv
178.034 375.08 178.54 376.398 178.918 377.277 cv
179.584 378.82 180.602 380.563 181.713 380.821 cv
182.37 380.971 183.627 383.335 184.241 383.322 cv
184.821 383.308 186.593 384.093 186.907 384.438 cv
187.224 384.778 189.068 384.941 189.068 384.941 cv
189.704 384.941 190.843 385.551 190.9 387.506 cv
190.963 389.464 189.189 389.939 188.682 390.138 cv
188.484 390.217 187.48 390.275 186.284 390.315 cv
186.379 390.343 186.495 390.358 186.607 390.372 cv
188.557 390.337 190.999 390.267 191.316 390.138 cv
191.823 389.939 193.598 389.464 193.536 387.506 cv
f
172.771 386.626 mo
172.583 387.567 172.139 388.652 172.007 389.532 cv
171.887 390.414 172.393 391.963 172.641 393.988 cv
172.891 396.015 173.402 397.505 173.402 397.505 cv
173.402 397.505 177.525 407.835 177.777 408.303 cv
178.025 408.771 178.603 411.005 178.603 411.005 cv
178.603 411.005 182.152 417.762 182.409 418.165 cv
182.663 418.572 182.915 418.299 182.915 418.299 cv
183.995 417.691 li
183.995 417.691 184.336 417.603 184.769 417.675 cv
183.883 416.045 181.236 411.005 181.236 411.005 cv
181.236 411.005 180.661 408.771 180.413 408.303 cv
180.161 407.835 176.038 397.505 176.038 397.505 cv
176.038 397.505 175.525 396.015 175.275 393.988 cv
175.025 391.963 174.52 390.414 174.643 389.532 cv
174.762 388.719 175.142 387.735 175.35 386.848 cv
174.222 385.875 172.833 384.54 172.833 384.54 cv
172.956 384.941 172.962 385.684 172.771 386.626 cv
f
186.629 417.692 mo
185.74 418.19 li
185.815 418.265 185.889 418.338 185.958 418.433 cv
186.717 419.507 185.708 421.003 185.708 421.003 cv
185.708 421.003 182.915 423.706 180.849 425.665 cv
181.299 426.268 181.688 426.755 181.979 427.073 cv
183.729 425.467 188.34 421.003 188.34 421.003 cv
188.34 421.003 189.351 419.507 188.59 418.433 cv
188.522 418.338 188.447 418.265 188.375 418.191 cv
188.183 418.299 li
188.183 418.299 187.928 418.573 187.676 418.165 cv
187.642 418.11 187.542 417.931 187.402 417.675 cv
186.971 417.603 186.629 417.692 186.629 417.692 cv
f
156.064 426.067 mo
156.827 424.104 156.13 422.625 156.13 422.625 cv
154.861 421.409 li
154.861 421.409 154.096 421.205 154.352 420.598 cv
154.542 420.149 159.296 412.407 159.991 412.069 cv
160.689 411.735 160.923 411.221 161.075 410.874 cv
161.417 410.074 162.731 407.921 163.762 406.2 cv
162.993 404.827 162.438 403.846 162.438 403.846 cv
162.372 404.315 159.016 409.524 158.439 410.874 cv
158.292 411.221 158.057 411.735 157.357 412.069 cv
156.665 412.407 151.906 420.149 151.719 420.598 cv
151.462 421.205 152.229 421.409 152.229 421.409 cv
153.497 422.625 li
153.497 422.625 154.191 424.104 153.43 426.067 cv
153.339 426.299 153.225 426.499 153.094 426.674 cv
153.743 426.987 154.316 427.264 154.738 427.467 cv
155.272 427.215 155.785 426.789 156.064 426.067 cv
f
152.772 395.16 mo
152.941 394.785 153.169 394.353 153.418 393.914 cv
153.519 393.528 153.521 393.248 153.521 393.248 cv
153.521 393.248 153.657 390.349 154.161 389.602 cv
154.668 388.856 155.043 384.715 154.911 384.246 cv
154.782 383.777 155.298 383.385 155.613 382.511 cv
155.64 382.437 155.694 382.335 155.745 382.239 cv
155.742 381.935 155.732 381.694 155.712 381.562 cv
155.584 380.682 156.091 378.461 156.091 378.461 cv
155.391 378.933 153.293 381.638 152.98 382.511 cv
152.665 383.385 152.146 383.777 152.277 384.246 cv
152.409 384.715 152.034 388.856 151.527 389.602 cv
151.023 390.349 150.887 393.248 150.887 393.248 cv
150.887 393.248 150.878 393.793 150.598 394.426 cv
150.634 394.567 150.71 394.677 150.966 394.799 cv
151.227 394.924 151.646 395.343 152.181 395.679 cv
152.414 395.518 152.614 395.346 152.772 395.16 cv
f
156.05 393.917 mo
155.803 394.355 155.574 394.786 155.406 395.16 cv
155.767 394.735 155.955 394.28 156.05 393.917 cv
f
153.418 393.915 mo
153.17 394.353 152.941 394.786 152.772 395.161 cv
153.135 394.734 153.323 394.277 153.418 393.915 cv
f
166.496 356.31 mo
166.18 357.861 166.627 360.02 166.941 360.698 cv
167.256 361.375 167.572 362.05 167.447 362.863 cv
167.324 363.67 166.244 365.02 165.609 365.222 cv
164.976 365.424 163.459 365.356 162.822 365.964 cv
162.187 366.573 155.465 371.574 155.148 372.383 cv
154.834 373.193 150.961 377.916 150.898 378.594 cv
150.84 379.27 149.889 382.441 150.08 383.861 cv
150.269 385.277 150.08 392.981 150.392 393.652 cv
150.568 394.025 150.553 394.25 150.598 394.425 cv
150.879 393.793 150.887 393.249 150.887 393.249 cv
150.887 393.249 151.023 390.35 151.527 389.603 cv
152.033 388.855 152.408 384.715 152.277 384.247 cv
152.146 383.776 152.664 383.385 152.98 382.511 cv
153.293 381.639 155.391 378.934 156.092 378.461 cv
156.092 378.461 155.584 380.683 155.713 381.563 cv
155.732 381.693 155.741 381.936 155.744 382.24 cv
156.284 381.185 158.084 378.894 158.726 378.461 cv
158.726 378.461 158.217 380.683 158.346 381.563 cv
158.365 381.693 158.374 381.937 158.377 382.243 cv
158.913 381.188 160.717 378.895 161.359 378.461 cv
161.359 378.461 160.851 380.683 160.98 381.563 cv
161.113 382.441 160.791 387.914 160.853 388.318 cv
160.92 388.723 160.791 390.742 160.219 391.49 cv
159.648 392.234 157.746 395.274 157.746 396.085 cv
157.746 396.895 155.91 400.811 155.91 400.811 cv
155.91 400.811 154.064 405.14 154.133 405.809 cv
154.197 406.479 153.437 406.821 153.244 407.357 cv
153.055 407.895 152.551 409.657 152.105 410.399 cv
151.662 411.14 149.633 414.52 149.633 415.129 cv
149.633 415.736 148.748 417.215 148.488 417.491 cv
148.234 417.763 147.1 419.375 147.037 419.646 cv
146.971 419.92 146.398 420.934 146.398 421.609 cv
146.398 422.288 146.086 423.629 147.037 423.901 cv
147.633 424.073 150.815 425.581 153.094 426.674 cv
153.225 426.499 153.34 426.299 153.43 426.067 cv
154.191 424.104 153.496 422.625 153.496 422.625 cv
152.228 421.409 li
152.228 421.409 151.463 421.205 151.719 420.599 cv
151.906 420.148 156.664 412.407 157.357 412.068 cv
158.057 411.734 158.291 411.222 158.439 410.874 cv
159.016 409.523 162.371 404.314 162.437 403.847 cv
162.437 403.847 162.992 404.828 163.762 406.2 cv
164.47 405.018 165.044 404.038 165.07 403.847 cv
165.07 403.847 165.625 404.828 166.394 406.2 cv
167.102 405.018 167.677 404.038 167.703 403.847 cv
167.703 403.847 173.473 414.054 173.666 414.724 cv
173.808 415.233 178.307 422.263 180.848 425.665 cv
182.914 423.706 185.707 421.002 185.707 421.002 cv
185.707 421.002 186.717 419.507 185.957 418.434 cv
185.889 418.337 185.815 418.266 185.741 418.189 cv
185.547 418.299 li
185.547 418.299 185.295 418.573 185.041 418.165 cv
185.006 418.109 184.907 417.932 184.768 417.675 cv
184.336 417.603 183.995 417.691 183.995 417.691 cv
182.914 418.299 li
182.914 418.299 182.663 418.573 182.409 418.165 cv
182.153 417.763 178.602 411.005 178.602 411.005 cv
178.602 411.005 178.026 408.77 177.778 408.304 cv
177.526 407.835 173.402 397.505 173.402 397.505 cv
173.402 397.505 172.891 396.015 172.641 393.989 cv
172.392 391.963 171.887 390.414 172.008 389.533 cv
172.139 388.652 172.582 387.567 172.771 386.626 cv
172.963 385.684 172.955 384.941 172.832 384.54 cv
172.832 384.54 174.222 385.875 175.35 386.848 cv
175.366 386.774 175.39 386.698 175.404 386.626 cv
175.596 385.684 175.59 384.941 175.465 384.54 cv
175.465 384.54 176.856 385.875 177.985 386.849 cv
178 386.774 178.024 386.699 178.039 386.626 cv
178.231 385.684 178.223 384.941 178.1 384.54 cv
178.1 384.54 181.463 387.772 181.969 387.841 cv
182.473 387.914 184.879 389.398 185.329 389.734 cv
185.641 389.971 185.899 390.198 186.284 390.314 cv
187.481 390.274 188.485 390.217 188.682 390.139 cv
189.19 389.939 190.963 389.463 190.901 387.506 cv
190.842 385.552 189.704 384.941 189.069 384.941 cv
189.069 384.941 187.223 384.778 186.907 384.437 cv
186.592 384.094 184.821 383.309 184.241 383.323 cv
183.627 383.334 182.37 380.972 181.713 380.822 cv
180.602 380.562 179.584 378.82 178.918 377.277 cv
178.539 376.398 178.034 375.08 177.842 374.067 cv
177.651 373.053 176.707 370.497 176.004 369.952 cv
175.305 369.408 174.412 368.053 173.594 367.787 cv
172.771 367.52 171.062 366.635 170.424 366.573 cv
169.789 366.508 170.037 365.699 169.976 365.089 cv
169.92 364.481 170.361 364.141 170.805 364.006 cv
171.25 363.874 171.689 362.996 171.756 362.187 cv
171.822 361.375 172.078 358.733 171.822 358.061 cv
171.564 357.392 171.127 357.181 171.25 356.645 cv
171.373 356.105 171.121 354.621 170.613 354.211 cv
170.31 353.971 169.935 353.322 169.268 352.865 cv
169.108 352.961 168.947 353.076 168.779 353.225 cv
168.09 353.838 166.81 354.757 166.496 356.31 cv
0.719 0.25 1 0.095 cmyk
f
127.406 452.94 mo
127.031 452.736 126.715 452.44 126.465 452.062 cv
126.226 451.702 126.043 451.263 125.92 450.758 cv
125.799 450.266 125.738 449.708 125.738 449.096 cv
125.738 447.816 125.99 446.786 126.486 446.032 cv
127.029 445.218 127.793 444.807 128.756 444.807 cv
129.189 444.807 129.613 444.923 130.023 445.154 cv
130.023 442.586 li
129.547 442.452 129.076 442.383 128.617 442.383 cv
126.833 442.383 125.449 442.97 124.392 444.178 cv
123.334 445.395 122.795 447.046 122.795 449.086 cv
122.795 451.265 123.365 452.961 124.488 454.127 cv
125.49 455.168 126.693 455.674 128.164 455.674 cv
128.701 455.674 129.313 455.561 129.988 455.334 cv
130.131 452.85 li
129.188 453.373 128.167 453.356 127.406 452.94 cv
0.912 0.788 0.62 0.975 cmyk
f
141.043 453.62 mo
141.275 453.166 141.391 452.563 141.391 451.817 cv
141.391 442.383 li
138.531 442.383 li
138.531 451.057 li
138.531 451.797 138.443 452.299 138.254 452.636 cv
138.082 452.922 137.742 453.249 137.049 453.249 cv
136.369 453.249 136.025 452.905 135.856 452.617 cv
135.652 452.272 135.559 451.774 135.559 451.047 cv
135.559 442.383 li
132.699 442.383 li
132.699 451.28 li
132.699 452.926 133.189 454.079 134.195 454.803 cv
134.998 455.381 136.018 455.674 137.225 455.674 cv
138.279 455.674 139.182 455.413 139.906 454.895 cv
140.438 454.51 140.82 454.081 141.043 453.62 cv
f
150.607 455.674 mo
153.488 455.674 li
153.488 442.383 li
150.768 442.383 li
150.768 445.094 li
150.768 445.672 150.802 446.407 150.875 447.274 cv
150.949 448.153 151.057 449.209 151.197 450.444 cv
150.225 450.651 li
149.826 449.391 li
149.668 448.898 149.523 448.461 149.391 448.082 cv
149.038 447.065 li
147.23 442.383 li
144.388 442.383 li
144.388 455.674 li
147.111 455.674 li
147.111 452.528 li
147.111 451.991 147.076 451.346 147.005 450.613 cv
146.936 449.874 146.824 448.999 146.671 448.012 cv
147.646 447.795 li
147.773 448.231 147.923 448.69 148.093 449.171 cv
148.266 449.659 148.459 450.18 148.671 450.738 cv
150.607 455.674 li
cp
f
161.459 454.504 mo
162.23 453.714 162.605 452.731 162.605 451.499 cv
162.605 450.788 162.453 450.189 162.139 449.668 cv
161.824 449.136 161.285 448.604 160.533 448.083 cv
159.916 447.641 li
159.258 447.186 158.922 446.678 158.922 446.137 cv
158.922 445.759 159.088 445.424 159.402 445.168 cv
159.994 444.655 161.022 444.69 161.92 445.319 cv
162.018 445.387 162.113 445.461 162.207 445.541 cv
162.207 442.907 li
161.441 442.559 160.678 442.383 159.93 442.383 cv
159.008 442.383 158.25 442.638 157.609 443.163 cv
157.371 443.35 157.164 443.56 156.988 443.795 cv
156.803 444.042 156.641 444.315 156.504 444.604 cv
156.23 445.228 156.09 445.84 156.09 446.41 cv
156.09 446.741 156.127 447.06 156.203 447.359 cv
156.277 447.651 156.397 447.939 156.559 448.216 cv
156.723 448.5 156.939 448.779 157.203 449.043 cv
157.482 449.328 157.822 449.614 158.213 449.897 cv
158.852 450.376 li
159.439 450.83 159.736 451.327 159.736 451.856 cv
159.736 452.263 159.563 452.619 159.236 452.883 cv
158.936 453.125 158.557 453.249 158.107 453.249 cv
157.414 453.249 156.758 452.989 156.145 452.475 cv
156.145 455.239 li
158.363 455.987 160.209 455.789 161.459 454.504 cv
f
171.5 442.383 mo
164.299 442.383 li
164.299 444.807 li
166.428 444.807 li
166.428 455.674 li
169.287 455.674 li
169.287 444.807 li
171.5 444.807 li
171.5 442.383 li
cp
f
180.641 450.439 mo
181.024 450.212 li
182.991 452.813 li
182.618 453.118 li
182.211 453.451 181.778 453.62 181.328 453.62 cv
180.877 453.62 180.477 453.446 180.174 453.116 cv
179.871 452.787 179.719 452.389 179.719 451.934 cv
179.719 451.5 179.877 450.889 180.641 450.439 cv
181.014 444.81 mo
181.086 444.658 181.182 444.524 181.305 444.413 cv
181.422 444.305 181.555 444.219 181.703 444.157 cv
182.17 443.961 182.739 444.061 183.104 444.417 cv
183.348 444.657 183.477 444.967 183.477 445.317 cv
183.477 445.846 183.147 446.413 182.438 447.102 cv
182.008 447.518 li
181.674 447.022 li
181.141 446.229 180.903 445.7 180.903 445.307 cv
180.903 445.135 180.94 444.969 181.014 444.81 cv
178.229 454.567 mo
179.016 455.313 179.952 455.674 181.088 455.674 cv
182.09 455.674 183.082 455.43 184.037 454.95 cv
184.42 454.758 li
185.077 455.674 li
187.993 455.674 li
186.356 453.492 li
186.694 453.186 li
186.918 452.983 187.151 452.766 187.391 452.533 cv
187.539 452.388 187.694 452.233 187.85 452.069 cv
186.537 450.343 li
186.409 450.507 186.287 450.658 186.172 450.793 cv
185.944 451.07 185.743 451.298 185.571 451.481 cv
185.172 451.905 li
183.069 449.203 li
183.53 448.907 li
185.014 447.959 185.735 446.902 185.735 445.674 cv
185.735 444.769 185.373 444.014 184.629 443.37 cv
183.871 442.706 182.975 442.383 181.893 442.383 cv
180.907 442.383 180.096 442.69 179.42 443.321 cv
178.748 443.944 178.422 444.672 178.422 445.547 cv
178.422 446.326 178.756 447.131 179.412 447.94 cv
179.789 448.405 li
179.266 448.694 li
177.784 449.511 177.063 450.564 177.063 451.911 cv
177.063 452.958 177.444 453.827 178.229 454.567 cv
f
199.657 452.94 mo
199.282 452.735 198.966 452.44 198.716 452.062 cv
198.477 451.698 198.293 451.26 198.171 450.758 cv
198.05 450.271 197.989 449.711 197.989 449.096 cv
197.989 447.818 198.241 446.788 198.737 446.032 cv
199.282 445.218 200.046 444.807 201.007 444.807 cv
201.439 444.807 201.864 444.923 202.274 445.154 cv
202.274 442.586 li
201.798 442.452 201.327 442.383 200.868 442.383 cv
199.083 442.383 197.702 442.97 196.645 444.177 cv
195.584 445.394 195.046 447.045 195.046 449.086 cv
195.046 451.265 195.616 452.961 196.739 454.127 cv
197.743 455.168 198.946 455.674 200.415 455.674 cv
200.952 455.674 201.564 455.561 202.239 455.336 cv
202.382 452.85 li
201.436 453.372 200.417 453.356 199.657 452.94 cv
f
211.024 451.973 mo
210.616 453.026 209.971 453.249 209.503 453.249 cv
209.042 453.249 208.407 453.024 207.995 451.954 cv
207.721 451.239 207.586 450.282 207.586 449.028 cv
207.586 447.75 207.731 446.793 208.026 446.108 cv
208.463 445.034 209.112 444.807 209.577 444.807 cv
211.448 444.807 211.448 448.045 211.448 449.11 cv
211.448 450.308 211.305 451.272 211.024 451.973 cv
213.092 444.131 mo
212.211 442.956 211.055 442.383 209.559 442.383 cv
208.338 442.383 207.311 442.807 206.419 443.679 cv
205.206 444.868 204.588 446.633 204.588 448.926 cv
204.588 451.329 205.178 453.139 206.342 454.311 cv
207.258 455.228 208.327 455.674 209.606 455.674 cv
211.038 455.674 212.17 455.096 213.067 453.907 cv
213.989 452.683 214.456 451.059 214.456 449.077 cv
214.456 447 213.997 445.336 213.092 444.131 cv
f
225.79 714.417 mo
115.879 714.417 li
115.879 588.406 li
225.79 588.406 li
225.79 714.417 li
cp
f
181.545 635.225 mo
181.363 635.2 180.818 634.77 180.193 634.231 cv
180.086 634.682 179.943 635.155 179.805 635.622 cv
180.711 636.105 181.958 636.885 182.271 637.118 cv
182.717 637.455 183.031 637.782 183.793 637.782 cv
184.072 637.782 185.045 637.774 186.185 637.754 cv
185.604 637.688 185.295 637.414 184.904 637.118 cv
184.456 636.782 182.049 635.297 181.545 635.225 cv
0.514 0 0.904 0 cmyk
f
159.753 631.629 mo
159.884 632.098 159.509 636.239 159.003 636.986 cv
158.498 637.734 158.362 640.631 158.362 640.631 cv
158.362 640.631 158.359 640.913 158.258 641.3 cv
158.825 640.295 159.493 639.266 159.794 638.874 cv
160.364 638.125 160.493 636.106 160.429 635.702 cv
160.375 635.359 160.599 631.359 160.585 629.625 cv
160.537 629.721 160.482 629.822 160.457 629.894 cv
160.141 630.768 159.623 631.161 159.753 631.629 cv
f
168.603 653.583 mo
168.167 654.312 167.685 655.11 167.243 655.858 cv
168.801 658.654 170.502 661.748 170.606 662.106 cv
170.793 662.778 178.523 674.735 179.415 674.868 cv
180.31 675.002 180.304 675.477 180.936 675.002 cv
181.029 674.932 181.254 674.731 181.556 674.456 cv
179.613 672.342 173.408 662.708 173.242 662.106 cv
173.108 661.645 170.319 656.639 168.603 653.583 cv
f
145.974 668.993 mo
145.974 668.317 146.544 667.303 146.611 667.03 cv
146.675 666.758 147.81 665.145 148.064 664.874 cv
148.322 664.597 149.208 663.12 149.208 662.512 cv
149.208 661.903 151.238 658.522 151.681 657.784 cv
152.126 657.04 152.63 655.278 152.82 654.741 cv
153.011 654.204 153.773 653.862 153.708 653.192 cv
153.64 652.522 155.484 648.194 155.484 648.194 cv
155.484 648.194 157.32 644.278 157.32 643.469 cv
157.32 643.272 157.435 642.939 157.615 642.543 cv
157.389 642.808 157.103 643.061 156.72 643.263 cv
155.979 643.661 155.303 643.536 154.731 643.254 cv
154.715 643.328 154.687 643.415 154.687 643.469 cv
154.687 644.278 152.851 648.194 152.851 648.194 cv
152.851 648.194 151.007 652.522 151.074 653.192 cv
151.14 653.862 150.378 654.204 150.185 654.741 cv
149.995 655.278 149.492 657.04 149.046 657.784 cv
148.603 658.522 146.576 661.903 146.576 662.512 cv
146.576 663.12 145.689 664.597 145.431 664.874 cv
145.175 665.145 144.042 666.758 143.978 667.03 cv
143.911 667.303 143.339 668.317 143.339 668.993 cv
143.339 669.67 143.027 671.012 143.978 671.284 cv
144.925 671.556 152.406 675.204 152.406 675.204 cv
152.406 675.204 153.394 675.286 154.313 674.852 cv
152.413 673.929 147.378 671.504 146.611 671.284 cv
145.66 671.012 145.974 669.67 145.974 668.993 cv
f
149.968 641.036 mo
149.656 640.365 149.845 632.661 149.656 631.245 cv
149.462 629.825 150.413 626.653 150.474 625.977 cv
150.536 625.299 154.407 620.577 154.724 619.766 cv
155.038 618.958 161.763 613.956 162.396 613.348 cv
163.034 612.74 164.552 612.806 165.186 612.604 cv
165.82 612.403 166.898 611.054 167.021 610.246 cv
167.146 609.434 166.832 608.758 166.517 608.081 cv
166.202 607.403 165.755 605.245 166.07 603.693 cv
166.386 602.141 167.666 601.221 168.353 600.608 cv
169.067 599.975 169.659 599.864 170.483 599.833 cv
170.233 599.784 169.966 599.752 169.655 599.774 cv
167.687 599.917 166.859 599.596 165.72 600.608 cv
165.031 601.221 163.751 602.141 163.438 603.693 cv
163.122 605.245 163.568 607.403 163.884 608.081 cv
164.197 608.758 164.513 609.434 164.388 610.246 cv
164.265 611.054 163.186 612.403 162.55 612.604 cv
161.919 612.806 160.4 612.74 159.763 613.348 cv
159.128 613.956 152.406 618.958 152.091 619.766 cv
151.775 620.577 147.902 625.299 147.839 625.977 cv
147.78 626.653 146.829 629.825 147.021 631.245 cv
147.21 632.661 147.021 640.365 147.333 641.036 cv
147.652 641.709 147.333 641.908 147.907 642.181 cv
148.476 642.456 149.804 644.147 151.452 643.264 cv
151.567 643.204 151.655 643.13 151.754 643.062 cv
151.219 642.726 150.8 642.306 150.541 642.181 cv
149.968 641.908 150.284 641.709 149.968 641.036 cv
f
181.555 674.456 mo
181.784 674.704 181.955 674.854 182.049 674.868 cv
182.942 675.002 182.936 675.476 183.569 675.002 cv
183.662 674.932 183.887 674.731 184.188 674.456 cv
183.897 674.137 183.508 673.651 183.057 673.047 cv
182.469 673.606 181.944 674.098 181.555 674.456 cv
0.639 0 1 0 cmyk
f
154.313 674.852 mo
154.762 675.069 155.039 675.204 155.039 675.204 cv
155.039 675.204 156.027 675.286 156.947 674.85 cv
156.525 674.647 155.951 674.37 155.302 674.057 cv
155.026 674.426 154.675 674.68 154.313 674.852 cv
f
190.391 665.682 mo
190.584 665.574 li
190.27 665.255 189.92 665.111 189.612 665.059 cv
189.75 665.315 189.85 665.493 189.885 665.547 cv
190.137 665.956 190.391 665.682 190.391 665.682 cv
0.514 0 0.904 0 cmyk
f
152.806 641.809 mo
152.617 642.235 152.29 642.692 151.754 643.062 cv
152.391 643.461 153.192 643.745 154.087 643.264 cv
154.202 643.204 154.289 643.131 154.389 643.063 cv
153.854 642.727 153.435 642.307 153.175 642.182 cv
152.919 642.06 152.843 641.95 152.806 641.809 cv
0.639 0 1 0 cmyk
f
186.184 637.754 mo
186.264 637.764 186.332 637.782 186.426 637.782 cv
186.705 637.782 187.678 637.775 188.817 637.754 cv
188.704 637.741 188.588 637.727 188.493 637.698 cv
187.748 637.723 186.932 637.742 186.184 637.754 cv
f
173.116 599.833 mo
172.866 599.784 172.598 599.752 172.288 599.774 cv
171.552 599.827 170.975 599.816 170.483 599.833 cv
170.874 599.913 171.202 600.062 171.477 600.249 cv
171.991 599.934 172.485 599.856 173.116 599.833 cv
f
152.806 641.809 mo
152.761 641.633 152.777 641.409 152.601 641.036 cv
152.288 640.365 152.478 632.661 152.288 631.245 cv
152.097 629.825 153.048 626.653 153.107 625.977 cv
153.169 625.299 157.042 620.577 157.357 619.766 cv
157.673 618.958 164.396 613.955 165.031 613.348 cv
165.667 612.74 167.185 612.807 167.817 612.604 cv
168.452 612.403 169.532 611.054 169.655 610.246 cv
169.78 609.434 169.464 608.758 169.149 608.08 cv
168.835 607.403 168.388 605.245 168.704 603.693 cv
169.018 602.141 170.298 601.221 170.987 600.608 cv
171.155 600.458 171.317 600.345 171.477 600.248 cv
171.202 600.061 170.874 599.913 170.483 599.833 cv
169.659 599.864 169.067 599.975 168.352 600.608 cv
167.665 601.221 166.386 602.141 166.07 603.693 cv
165.755 605.245 166.202 607.403 166.517 608.08 cv
166.831 608.758 167.146 609.434 167.021 610.246 cv
166.898 611.054 165.82 612.403 165.185 612.604 cv
164.552 612.807 163.035 612.74 162.396 613.348 cv
161.763 613.955 155.038 618.958 154.724 619.766 cv
154.408 620.577 150.536 625.299 150.474 625.977 cv
150.413 626.653 149.462 629.825 149.656 631.245 cv
149.845 632.661 149.656 640.365 149.968 641.036 cv
150.285 641.709 149.968 641.908 150.54 642.182 cv
150.8 642.307 151.219 642.726 151.754 643.062 cv
152.29 642.692 152.617 642.235 152.806 641.809 cv
f
155.302 674.057 mo
153.024 672.963 149.841 671.456 149.245 671.284 cv
148.294 671.012 148.607 669.67 148.607 668.993 cv
148.607 668.317 149.179 667.303 149.245 667.03 cv
149.308 666.758 150.443 665.145 150.697 664.874 cv
150.956 664.598 151.841 663.12 151.841 662.512 cv
151.841 661.903 153.87 658.522 154.314 657.784 cv
154.759 657.04 155.263 655.278 155.452 654.741 cv
155.646 654.204 156.406 653.862 156.341 653.192 cv
156.273 652.522 158.118 648.194 158.118 648.194 cv
158.118 648.194 159.954 644.278 159.954 643.469 cv
159.954 642.658 161.857 639.618 162.427 638.874 cv
162.999 638.125 163.128 636.106 163.062 635.702 cv
162.999 635.297 163.322 629.825 163.189 628.946 cv
163.06 628.065 163.568 625.844 163.568 625.844 cv
162.925 626.278 161.121 628.573 160.585 629.625 cv
160.598 631.358 160.374 635.358 160.429 635.702 cv
160.493 636.106 160.364 638.125 159.794 638.874 cv
159.493 639.266 158.825 640.295 158.258 641.3 cv
158.163 641.664 157.975 642.12 157.615 642.543 cv
157.435 642.939 157.32 643.272 157.32 643.469 cv
157.32 644.278 155.484 648.194 155.484 648.194 cv
155.484 648.194 153.64 652.522 153.708 653.192 cv
153.773 653.862 153.011 654.204 152.82 654.741 cv
152.63 655.278 152.126 657.04 151.681 657.784 cv
151.238 658.522 149.208 661.903 149.208 662.512 cv
149.208 663.12 148.322 664.598 148.064 664.874 cv
147.81 665.145 146.675 666.758 146.611 667.03 cv
146.544 667.303 145.974 668.317 145.974 668.993 cv
145.974 669.67 145.659 671.012 146.611 671.284 cv
147.378 671.504 152.413 673.93 154.313 674.852 cv
154.675 674.68 155.026 674.426 155.302 674.057 cv
f
175.874 662.106 mo
175.681 661.436 169.911 651.229 169.911 651.229 cv
169.886 651.42 169.312 652.401 168.603 653.583 cv
170.319 656.639 173.108 661.644 173.241 662.106 cv
173.407 662.708 179.614 672.342 181.555 674.456 cv
181.944 674.098 182.469 673.606 183.057 673.047 cv
180.516 669.647 176.016 662.617 175.874 662.106 cv
f
187.538 637.118 mo
187.088 636.782 184.683 635.297 184.179 635.225 cv
183.672 635.156 180.309 631.922 180.309 631.922 cv
180.433 632.325 180.439 633.067 180.249 634.01 cv
180.232 634.082 180.209 634.159 180.193 634.231 cv
180.818 634.77 181.364 635.2 181.545 635.225 cv
182.05 635.297 184.456 636.782 184.905 637.118 cv
185.295 637.413 185.604 637.688 186.184 637.754 cv
186.933 637.742 187.749 637.722 188.493 637.698 cv
188.107 637.581 187.85 637.354 187.538 637.118 cv
f
196.545 632.325 mo
196.545 632.325 194.699 632.163 194.383 631.821 cv
194.068 631.477 192.297 630.692 191.717 630.706 cv
191.104 630.718 189.846 628.355 189.19 628.206 cv
188.079 627.946 187.062 626.204 186.396 624.661 cv
186.014 623.782 185.51 622.463 185.318 621.452 cv
185.127 620.436 184.185 617.879 183.481 617.334 cv
182.781 616.791 181.889 615.436 181.07 615.169 cv
180.249 614.903 178.54 614.018 177.899 613.956 cv
177.264 613.891 177.512 613.082 177.451 612.473 cv
177.396 611.866 177.836 611.524 178.281 611.389 cv
178.728 611.256 179.165 610.378 179.233 609.57 cv
179.299 608.758 179.555 606.118 179.299 605.444 cv
179.042 604.774 178.604 604.564 178.728 604.028 cv
178.851 603.489 178.599 602.003 178.088 601.596 cv
177.583 601.191 176.889 599.635 174.922 599.774 cv
174.187 599.827 173.61 599.816 173.116 599.833 cv
174.46 600.106 175.03 601.254 175.457 601.596 cv
175.963 602.003 176.215 603.489 176.09 604.028 cv
175.967 604.564 176.404 604.774 176.663 605.444 cv
176.92 606.118 176.663 608.758 176.599 609.57 cv
176.529 610.378 176.09 611.256 175.647 611.389 cv
175.202 611.524 174.76 611.866 174.819 612.473 cv
174.879 613.082 174.629 613.891 175.267 613.956 cv
175.905 614.018 177.611 614.903 178.437 615.169 cv
179.256 615.436 180.149 616.791 180.846 617.334 cv
181.551 617.879 182.495 620.436 182.685 621.452 cv
182.877 622.463 183.381 623.782 183.762 624.661 cv
184.428 626.204 185.443 627.946 186.555 628.206 cv
187.213 628.355 188.471 630.718 189.084 630.706 cv
189.665 630.692 191.437 631.477 191.749 631.821 cv
192.065 632.163 193.91 632.325 193.91 632.325 cv
194.547 632.325 195.685 632.935 195.745 634.889 cv
195.808 636.847 194.031 637.323 193.525 637.522 cv
193.208 637.651 190.767 637.721 188.816 637.754 cv
188.899 637.764 188.967 637.782 189.062 637.782 cv
189.818 637.782 195.654 637.726 196.158 637.522 cv
196.667 637.323 198.44 636.847 198.377 634.889 cv
198.318 632.935 197.18 632.325 196.545 632.325 cv
0.514 0 0.904 0 cmyk
f
157.119 631.629 mo
157.251 632.098 156.876 636.239 156.369 636.986 cv
155.865 637.734 155.729 640.631 155.729 640.631 cv
155.729 640.631 155.727 640.911 155.626 641.297 cv
156.193 640.293 156.86 639.266 157.162 638.874 cv
157.732 638.125 157.861 636.106 157.797 635.702 cv
157.742 635.359 157.966 631.354 157.953 629.623 cv
157.903 629.719 157.848 629.821 157.822 629.894 cv
157.508 630.768 156.99 631.161 157.119 631.629 cv
f
154.389 643.063 mo
154.498 643.131 154.613 643.196 154.731 643.254 cv
154.774 643.063 154.852 642.831 154.981 642.543 cv
154.823 642.729 154.621 642.902 154.389 643.063 cv
0.639 0 1 0 cmyk
f
190.549 668.385 mo
190.549 668.385 185.938 672.85 184.188 674.456 cv
184.417 674.704 184.588 674.854 184.682 674.868 cv
185.576 675.002 185.569 675.477 186.203 675.002 cv
186.842 674.526 193.184 668.385 193.184 668.385 cv
193.184 668.385 194.194 666.891 193.432 665.817 cv
192.672 664.739 191.471 665.075 191.471 665.075 cv
190.584 665.573 li
190.656 665.649 190.731 665.721 190.799 665.817 cv
191.559 666.891 190.549 668.385 190.549 668.385 cv
0.514 0 0.904 0 cmyk
f
177.557 634.231 mo
177.35 635.12 176.969 636.103 176.85 636.917 cv
176.727 637.796 177.233 639.347 177.483 641.372 cv
177.733 643.397 178.246 644.889 178.246 644.889 cv
178.246 644.889 182.369 655.219 182.621 655.686 cv
182.869 656.153 183.446 658.389 183.446 658.389 cv
183.446 658.389 186.092 663.429 186.977 665.059 cv
187.286 665.111 187.637 665.254 187.95 665.573 cv
188.838 665.075 li
188.838 665.075 189.18 664.986 189.612 665.059 cv
188.727 663.429 186.078 658.389 186.078 658.389 cv
186.078 658.389 185.502 656.153 185.254 655.686 cv
185.002 655.219 180.879 644.889 180.879 644.889 cv
180.879 644.889 180.368 643.397 180.118 641.372 cv
179.87 639.347 179.362 637.796 179.485 636.917 cv
179.543 636.516 179.668 636.073 179.805 635.622 cv
179.405 635.409 179.065 635.247 178.911 635.225 cv
178.729 635.2 178.182 634.77 177.557 634.231 cv
f
163.283 658.256 mo
163.133 658.604 162.897 659.118 162.199 659.452 cv
161.506 659.79 156.75 667.532 156.56 667.981 cv
156.304 668.588 157.07 668.792 157.07 668.792 cv
158.34 670.008 li
158.34 670.008 159.035 671.487 158.272 673.45 cv
157.993 674.172 157.48 674.598 156.947 674.85 cv
157.396 675.068 157.674 675.204 157.674 675.204 cv
157.674 675.204 160.146 675.413 160.906 673.45 cv
161.667 671.487 160.972 670.008 160.972 670.008 cv
159.705 668.792 li
159.705 668.792 158.938 668.588 159.195 667.981 cv
159.383 667.532 164.14 659.79 164.833 659.452 cv
165.533 659.118 165.767 658.604 165.916 658.256 cv
166.113 657.795 166.637 656.878 167.243 655.858 cv
166.792 655.049 166.354 654.268 165.971 653.583 cv
164.939 655.304 163.625 657.458 163.283 658.256 cv
f
167.279 651.229 mo
167.253 651.42 166.678 652.401 165.97 653.583 cv
166.355 654.268 166.793 655.049 167.243 655.858 cv
167.685 655.11 168.167 654.311 168.603 653.583 cv
167.833 652.21 167.279 651.229 167.279 651.229 cv
0.639 0 1 0 cmyk
f
187.756 665.682 mo
187.949 665.573 li
187.637 665.254 187.285 665.111 186.978 665.059 cv
187.115 665.315 187.215 665.493 187.25 665.547 cv
187.504 665.956 187.756 665.682 187.756 665.682 cv
f
156.72 643.264 mo
157.103 643.061 157.389 642.808 157.615 642.543 cv
157.782 642.169 158.011 641.739 158.258 641.3 cv
158.36 640.913 158.363 640.631 158.363 640.631 cv
158.363 640.631 158.497 637.733 159.003 636.986 cv
159.509 636.239 159.884 632.098 159.753 631.629 cv
159.622 631.16 160.14 630.768 160.456 629.894 cv
160.482 629.822 160.536 629.721 160.585 629.625 cv
160.582 629.321 160.574 629.076 160.554 628.946 cv
160.425 628.065 160.935 625.844 160.935 625.844 cv
160.292 626.278 158.492 628.568 157.952 629.623 cv
157.965 631.354 157.741 635.358 157.796 635.702 cv
157.861 636.106 157.732 638.125 157.161 638.874 cv
156.86 639.266 156.193 640.293 155.626 641.297 cv
155.532 641.66 155.343 642.118 154.981 642.543 cv
154.852 642.831 154.774 643.063 154.731 643.254 cv
155.303 643.535 155.979 643.66 156.72 643.264 cv
f
177.672 631.922 mo
177.797 632.325 177.803 633.067 177.611 634.01 cv
177.599 634.081 177.574 634.158 177.558 634.231 cv
178.183 634.77 178.729 635.2 178.91 635.225 cv
179.065 635.247 179.404 635.409 179.805 635.622 cv
179.943 635.155 180.086 634.682 180.193 634.231 cv
179.065 633.258 177.672 631.922 177.672 631.922 cv
f
195.745 634.889 mo
195.684 632.935 194.547 632.325 193.911 632.325 cv
193.911 632.325 192.064 632.163 191.749 631.821 cv
191.436 631.477 189.665 630.692 189.084 630.706 cv
188.472 630.718 187.213 628.355 186.556 628.206 cv
185.443 627.946 184.429 626.204 183.763 624.66 cv
183.382 623.782 182.877 622.463 182.684 621.451 cv
182.495 620.436 181.552 617.879 180.847 617.334 cv
180.148 616.791 179.257 615.436 178.436 615.169 cv
177.612 614.903 175.906 614.018 175.267 613.956 cv
174.629 613.891 174.879 613.082 174.82 612.473 cv
174.761 611.866 175.203 611.524 175.647 611.389 cv
176.091 611.256 176.53 610.378 176.599 609.57 cv
176.663 608.758 176.92 606.118 176.663 605.444 cv
176.405 604.774 175.968 604.564 176.091 604.028 cv
176.216 603.489 175.963 602.003 175.456 601.595 cv
175.031 601.254 174.459 600.106 173.117 599.833 cv
172.485 599.856 171.992 599.934 171.478 600.249 cv
172.144 600.705 172.519 601.354 172.822 601.595 cv
173.329 602.003 173.581 603.489 173.458 604.028 cv
173.334 604.564 173.772 604.774 174.031 605.444 cv
174.287 606.118 174.031 608.758 173.963 609.57 cv
173.897 610.378 173.458 611.256 173.013 611.389 cv
172.57 611.524 172.127 611.866 172.185 612.473 cv
172.245 613.082 171.997 613.891 172.632 613.956 cv
173.271 614.018 174.979 614.903 175.802 615.169 cv
176.62 615.436 177.513 616.791 178.211 617.334 cv
178.917 617.879 179.859 620.436 180.052 621.451 cv
180.243 622.463 180.749 623.782 181.127 624.66 cv
181.793 626.204 182.811 627.946 183.922 628.206 cv
184.579 628.355 185.836 630.718 186.45 630.706 cv
187.03 630.692 188.802 631.477 189.116 631.821 cv
189.433 632.163 191.278 632.325 191.278 632.325 cv
191.913 632.325 193.052 632.935 193.109 634.889 cv
193.172 636.847 191.398 637.323 190.891 637.522 cv
190.693 637.601 189.689 637.659 188.493 637.698 cv
188.588 637.727 188.704 637.741 188.816 637.754 cv
190.766 637.721 193.208 637.651 193.525 637.522 cv
194.032 637.323 195.807 636.847 195.745 634.889 cv
f
174.979 634.01 mo
174.791 634.952 174.347 636.036 174.215 636.917 cv
174.095 637.796 174.601 639.347 174.849 641.372 cv
175.099 643.397 175.61 644.889 175.61 644.889 cv
175.61 644.889 179.734 655.219 179.986 655.686 cv
180.234 656.153 180.812 658.389 180.812 658.389 cv
180.812 658.389 184.361 665.145 184.618 665.547 cv
184.872 665.956 185.124 665.682 185.124 665.682 cv
186.204 665.075 li
186.204 665.075 186.545 664.986 186.978 665.059 cv
186.092 663.429 183.445 658.389 183.445 658.389 cv
183.445 658.389 182.87 656.153 182.622 655.686 cv
182.37 655.219 178.247 644.889 178.247 644.889 cv
178.247 644.889 177.732 643.397 177.482 641.372 cv
177.232 639.347 176.728 637.796 176.851 636.917 cv
176.97 636.103 177.351 635.12 177.558 634.231 cv
176.431 633.258 175.041 631.922 175.041 631.922 cv
175.164 632.325 175.17 633.067 174.979 634.01 cv
f
188.838 665.075 mo
187.949 665.573 li
188.024 665.649 188.099 665.721 188.167 665.817 cv
188.926 666.891 187.917 668.385 187.917 668.385 cv
187.917 668.385 185.124 671.088 183.058 673.047 cv
183.508 673.651 183.897 674.138 184.188 674.456 cv
185.938 672.85 190.549 668.385 190.549 668.385 cv
190.549 668.385 191.56 666.891 190.799 665.817 cv
190.731 665.721 190.656 665.649 190.584 665.574 cv
190.392 665.682 li
190.392 665.682 190.137 665.956 189.885 665.547 cv
189.851 665.493 189.75 665.315 189.611 665.059 cv
189.18 664.986 188.838 665.075 188.838 665.075 cv
f
158.273 673.45 mo
159.035 671.487 158.339 670.008 158.339 670.008 cv
157.07 668.792 li
157.07 668.792 156.304 668.588 156.56 667.981 cv
156.75 667.532 161.505 659.79 162.199 659.452 cv
162.898 659.118 163.132 658.604 163.283 658.256 cv
163.625 657.458 164.94 655.304 165.97 653.583 cv
165.201 652.21 164.646 651.229 164.646 651.229 cv
164.58 651.698 161.224 656.907 160.648 658.256 cv
160.5 658.604 160.265 659.118 159.566 659.452 cv
158.873 659.79 154.115 667.532 153.927 667.981 cv
153.671 668.588 154.437 668.792 154.437 668.792 cv
155.705 670.008 li
155.705 670.008 156.4 671.487 155.638 673.45 cv
155.548 673.682 155.433 673.881 155.302 674.057 cv
155.951 674.37 156.525 674.647 156.947 674.85 cv
157.481 674.598 157.993 674.172 158.273 673.45 cv
f
154.981 642.543 mo
155.15 642.168 155.378 641.737 155.627 641.297 cv
155.727 640.911 155.73 640.631 155.73 640.631 cv
155.73 640.631 155.865 637.733 156.369 636.986 cv
156.877 636.239 157.252 632.098 157.119 631.629 cv
156.99 631.161 157.507 630.768 157.822 629.894 cv
157.848 629.821 157.903 629.719 157.953 629.623 cv
157.95 629.319 157.941 629.077 157.921 628.946 cv
157.793 628.064 158.3 625.844 158.3 625.844 cv
157.599 626.317 155.502 629.022 155.189 629.894 cv
154.873 630.768 154.355 631.161 154.486 631.629 cv
154.617 632.098 154.242 636.239 153.736 636.986 cv
153.232 637.733 153.095 640.631 153.095 640.631 cv
153.095 640.631 153.087 641.176 152.806 641.809 cv
152.843 641.95 152.919 642.06 153.175 642.182 cv
153.435 642.307 153.854 642.727 154.389 643.063 cv
154.622 642.902 154.823 642.729 154.981 642.543 cv
f
158.258 641.3 mo
158.011 641.739 157.782 642.169 157.614 642.543 cv
157.975 642.119 158.163 641.664 158.258 641.3 cv
f
155.626 641.297 mo
155.378 641.737 155.149 642.168 154.98 642.543 cv
155.343 642.118 155.531 641.661 155.626 641.297 cv
f
168.704 603.693 mo
168.388 605.245 168.835 607.403 169.149 608.081 cv
169.464 608.758 169.78 609.434 169.655 610.246 cv
169.532 611.054 168.452 612.403 167.817 612.604 cv
167.185 612.807 165.667 612.74 165.031 613.348 cv
164.396 613.956 157.673 618.958 157.357 619.766 cv
157.042 620.577 153.169 625.299 153.107 625.977 cv
153.048 626.653 152.097 629.825 152.288 631.245 cv
152.478 632.661 152.288 640.365 152.601 641.036 cv
152.777 641.409 152.761 641.633 152.806 641.809 cv
153.087 641.176 153.095 640.63 153.095 640.63 cv
153.095 640.63 153.232 637.733 153.736 636.986 cv
154.242 636.239 154.617 632.098 154.486 631.629 cv
154.355 631.161 154.872 630.768 155.189 629.894 cv
155.501 629.022 157.599 626.317 158.3 625.844 cv
158.3 625.844 157.792 628.065 157.921 628.946 cv
157.941 629.077 157.95 629.319 157.953 629.623 cv
158.493 628.568 160.292 626.278 160.935 625.844 cv
160.935 625.844 160.425 628.065 160.554 628.946 cv
160.574 629.077 160.582 629.321 160.585 629.625 cv
161.121 628.573 162.925 626.278 163.568 625.844 cv
163.568 625.844 163.06 628.065 163.189 628.946 cv
163.322 629.825 162.999 635.296 163.062 635.702 cv
163.128 636.106 162.999 638.125 162.427 638.874 cv
161.857 639.618 159.954 642.658 159.954 643.469 cv
159.954 644.278 158.119 648.194 158.119 648.194 cv
158.119 648.194 156.273 652.522 156.341 653.192 cv
156.406 653.862 155.646 654.204 155.453 654.741 cv
155.263 655.278 154.759 657.04 154.314 657.784 cv
153.871 658.522 151.841 661.903 151.841 662.512 cv
151.841 663.12 150.956 664.598 150.697 664.874 cv
150.443 665.145 149.308 666.758 149.246 667.03 cv
149.179 667.303 148.607 668.317 148.607 668.993 cv
148.607 669.67 148.294 671.012 149.246 671.284 cv
149.841 671.456 153.024 672.963 155.302 674.057 cv
155.433 673.88 155.548 673.682 155.638 673.45 cv
156.4 671.487 155.704 670.008 155.704 670.008 cv
154.437 668.792 li
154.437 668.792 153.671 668.588 153.927 667.981 cv
154.115 667.532 158.872 659.79 159.566 659.452 cv
160.265 659.118 160.499 658.604 160.648 658.255 cv
161.224 656.907 164.579 651.698 164.646 651.229 cv
164.646 651.229 165.201 652.21 165.97 653.583 cv
166.678 652.401 167.252 651.42 167.279 651.229 cv
167.279 651.229 167.833 652.21 168.602 653.583 cv
169.311 652.401 169.886 651.42 169.911 651.229 cv
169.911 651.229 175.681 661.436 175.874 662.106 cv
176.016 662.617 180.516 669.647 183.057 673.046 cv
185.123 671.088 187.916 668.385 187.916 668.385 cv
187.916 668.385 188.926 666.891 188.166 665.817 cv
188.098 665.721 188.024 665.649 187.95 665.573 cv
187.756 665.682 li
187.756 665.682 187.504 665.956 187.25 665.546 cv
187.215 665.493 187.116 665.315 186.977 665.059 cv
186.545 664.986 186.204 665.075 186.204 665.075 cv
185.123 665.682 li
185.123 665.682 184.871 665.956 184.618 665.546 cv
184.362 665.145 180.811 658.389 180.811 658.389 cv
180.811 658.389 180.235 656.153 179.987 655.686 cv
179.735 655.219 175.61 644.889 175.61 644.889 cv
175.61 644.889 175.099 643.397 174.849 641.372 cv
174.6 639.347 174.095 637.796 174.216 636.917 cv
174.347 636.036 174.79 634.952 174.979 634.01 cv
175.171 633.067 175.163 632.325 175.04 631.921 cv
175.04 631.921 176.43 633.258 177.557 634.231 cv
177.575 634.158 177.598 634.081 177.612 634.01 cv
177.803 633.067 177.797 632.325 177.672 631.921 cv
177.672 631.921 179.065 633.258 180.194 634.231 cv
180.209 634.159 180.233 634.082 180.248 634.01 cv
180.44 633.067 180.432 632.325 180.309 631.921 cv
180.309 631.921 183.672 635.156 184.178 635.225 cv
184.682 635.296 187.088 636.782 187.537 637.118 cv
187.85 637.354 188.108 637.581 188.493 637.698 cv
189.69 637.659 190.694 637.601 190.891 637.522 cv
191.399 637.323 193.172 636.847 193.11 634.889 cv
193.051 632.935 191.912 632.325 191.278 632.325 cv
191.278 632.325 189.432 632.163 189.116 631.821 cv
188.801 631.477 187.03 630.692 186.45 630.706 cv
185.836 630.718 184.579 628.355 183.922 628.206 cv
182.811 627.946 181.793 626.204 181.127 624.661 cv
180.748 623.782 180.243 622.463 180.051 621.452 cv
179.86 620.436 178.916 617.879 178.211 617.334 cv
177.512 616.791 176.62 615.436 175.802 615.169 cv
174.979 614.903 173.27 614.018 172.632 613.956 cv
171.997 613.891 172.245 613.082 172.184 612.473 cv
172.128 611.866 172.569 611.524 173.013 611.389 cv
173.458 611.255 173.897 610.378 173.964 609.57 cv
174.03 608.758 174.286 606.118 174.03 605.444 cv
173.772 604.774 173.335 604.564 173.458 604.028 cv
173.581 603.489 173.329 602.003 172.821 601.595 cv
172.518 601.354 172.143 600.705 171.477 600.249 cv
171.317 600.345 171.155 600.458 170.987 600.608 cv
170.298 601.221 169.018 602.141 168.704 603.693 cv
0.719 0.25 1 0.095 cmyk
f
129.615 700.323 mo
129.24 700.12 128.924 699.823 128.674 699.446 cv
128.435 699.084 128.251 698.647 128.129 698.141 cv
128.008 697.649 127.947 697.09 127.947 696.479 cv
127.947 695.2 128.199 694.168 128.695 693.415 cv
129.238 692.602 130.001 692.19 130.965 692.19 cv
131.397 692.19 131.822 692.307 132.232 692.538 cv
132.232 689.968 li
131.756 689.834 131.285 689.766 130.826 689.766 cv
129.041 689.766 127.658 690.354 126.601 691.561 cv
125.542 692.778 125.004 694.43 125.004 696.468 cv
125.004 698.649 125.574 700.343 126.697 701.512 cv
127.699 702.551 128.902 703.057 130.373 703.057 cv
130.91 703.057 131.521 702.944 132.197 702.717 cv
132.34 700.233 li
131.396 700.756 130.375 700.739 129.615 700.323 cv
0 0 0 0 cmyk
f
143.251 701.002 mo
143.483 700.549 143.6 699.946 143.6 699.2 cv
143.6 689.766 li
140.739 689.766 li
140.739 698.439 li
140.739 699.18 140.651 699.682 140.462 700.02 cv
140.291 700.305 139.951 700.631 139.257 700.631 cv
138.578 700.631 138.233 700.288 138.064 700 cv
137.86 699.655 137.768 699.157 137.768 698.43 cv
137.768 689.766 li
134.908 689.766 li
134.908 698.663 li
134.908 700.309 135.397 701.461 136.403 702.186 cv
137.207 702.764 138.227 703.057 139.434 703.057 cv
140.487 703.057 141.391 702.795 142.114 702.278 cv
142.646 701.893 143.028 701.463 143.251 701.002 cv
f
152.816 703.057 mo
155.697 703.057 li
155.697 689.766 li
152.976 689.766 li
152.976 692.477 li
152.976 693.055 153.011 693.79 153.084 694.657 cv
153.158 695.537 153.265 696.592 153.406 697.827 cv
152.433 698.034 li
152.035 696.774 li
151.877 696.282 151.732 695.844 151.599 695.465 cv
151.246 694.448 li
149.439 689.766 li
146.597 689.766 li
146.597 703.057 li
149.32 703.057 li
149.32 699.912 li
149.32 699.374 149.285 698.729 149.214 697.996 cv
149.144 697.256 149.033 696.381 148.88 695.395 cv
149.855 695.178 li
149.982 695.614 150.132 696.073 150.302 696.555 cv
150.474 697.042 150.668 697.563 150.88 698.121 cv
152.816 703.057 li
cp
f
163.667 701.887 mo
164.438 701.098 164.813 700.114 164.813 698.881 cv
164.813 698.17 164.662 697.573 164.348 697.051 cv
164.033 696.52 163.494 695.987 162.742 695.465 cv
162.125 695.024 li
161.466 694.569 161.13 694.061 161.13 693.52 cv
161.13 693.143 161.296 692.807 161.61 692.551 cv
162.203 692.038 163.23 692.073 164.128 692.702 cv
164.227 692.77 164.321 692.844 164.416 692.924 cv
164.416 690.29 li
163.649 689.942 162.887 689.766 162.139 689.766 cv
161.216 689.766 160.458 690.022 159.817 690.545 cv
159.58 690.733 159.373 690.944 159.196 691.178 cv
159.012 691.426 158.85 691.698 158.712 691.987 cv
158.438 692.612 158.298 693.223 158.298 693.793 cv
158.298 694.124 158.335 694.444 158.412 694.742 cv
158.485 695.034 158.605 695.323 158.768 695.6 cv
158.932 695.883 159.147 696.163 159.412 696.426 cv
159.69 696.711 160.03 696.997 160.421 697.28 cv
161.061 697.76 li
161.647 698.213 161.944 698.709 161.944 699.239 cv
161.944 699.647 161.771 700.002 161.444 700.266 cv
161.145 700.508 160.766 700.631 160.315 700.631 cv
159.623 700.631 158.966 700.372 158.354 699.858 cv
158.354 702.622 li
160.571 703.37 162.417 703.172 163.667 701.887 cv
f
173.708 689.766 mo
166.507 689.766 li
166.507 692.19 li
168.636 692.19 li
168.636 703.057 li
171.495 703.057 li
171.495 692.19 li
173.708 692.19 li
173.708 689.766 li
cp
f
182.85 697.823 mo
183.233 697.596 li
185.2 700.196 li
184.827 700.5 li
184.42 700.834 183.987 701.002 183.537 701.002 cv
183.086 701.002 182.686 700.829 182.383 700.499 cv
182.08 700.17 181.928 699.772 181.928 699.317 cv
181.928 698.883 182.086 698.272 182.85 697.823 cv
183.223 692.194 mo
183.295 692.042 183.391 691.907 183.514 691.795 cv
183.631 691.688 183.764 691.602 183.912 691.54 cv
184.379 691.343 184.948 691.444 185.313 691.799 cv
185.557 692.04 185.686 692.35 185.686 692.7 cv
185.686 693.229 185.356 693.795 184.647 694.485 cv
184.217 694.901 li
183.883 694.405 li
183.35 693.612 183.112 693.083 183.112 692.69 cv
183.112 692.518 183.149 692.352 183.223 692.194 cv
180.438 701.95 mo
181.225 702.696 182.161 703.057 183.297 703.057 cv
184.299 703.057 185.291 702.813 186.246 702.333 cv
186.629 702.141 li
187.286 703.057 li
190.202 703.057 li
188.565 700.875 li
188.903 700.569 li
189.127 700.366 189.36 700.149 189.6 699.917 cv
189.748 699.772 189.903 699.616 190.059 699.452 cv
188.746 697.727 li
188.618 697.891 188.496 698.042 188.381 698.178 cv
188.153 698.454 187.952 698.682 187.78 698.864 cv
187.381 699.288 li
185.278 696.586 li
185.739 696.29 li
187.223 695.342 187.944 694.286 187.944 693.057 cv
187.944 692.153 187.582 691.397 186.838 690.752 cv
186.08 690.088 185.184 689.766 184.102 689.766 cv
183.116 689.766 182.305 690.073 181.629 690.704 cv
180.957 691.327 180.631 692.055 180.631 692.93 cv
180.631 693.709 180.965 694.514 181.621 695.323 cv
181.998 695.788 li
181.475 696.077 li
179.993 696.895 179.272 697.948 179.272 699.293 cv
179.272 700.34 179.653 701.209 180.438 701.95 cv
f
201.866 700.323 mo
201.491 700.118 201.175 699.823 200.925 699.446 cv
200.686 699.081 200.503 698.643 200.38 698.141 cv
200.259 697.655 200.198 697.093 200.198 696.479 cv
200.198 695.202 200.45 694.17 200.946 693.415 cv
201.491 692.602 202.255 692.19 203.216 692.19 cv
203.649 692.19 204.073 692.307 204.483 692.538 cv
204.483 689.968 li
204.007 689.834 203.536 689.766 203.077 689.766 cv
201.292 689.766 199.911 690.354 198.854 691.561 cv
197.794 692.778 197.255 694.428 197.255 696.468 cv
197.255 698.649 197.825 700.343 198.948 701.512 cv
199.952 702.551 201.155 703.057 202.624 703.057 cv
203.161 703.057 203.774 702.944 204.448 702.718 cv
204.591 700.233 li
203.645 700.754 202.625 700.739 201.866 700.323 cv
f
213.233 699.356 mo
212.825 700.409 212.18 700.631 211.712 700.631 cv
211.251 700.631 210.616 700.407 210.204 699.336 cv
209.93 698.622 209.795 697.665 209.795 696.411 cv
209.795 695.133 209.94 694.176 210.235 693.491 cv
210.672 692.417 211.321 692.19 211.786 692.19 cv
213.657 692.19 213.657 695.428 213.657 696.493 cv
213.657 697.692 213.514 698.655 213.233 699.356 cv
215.301 691.514 mo
214.42 690.338 213.264 689.766 211.768 689.766 cv
210.547 689.766 209.52 690.19 208.628 691.063 cv
207.415 692.25 206.797 694.016 206.797 696.309 cv
206.797 698.711 207.387 700.522 208.551 701.694 cv
209.467 702.612 210.536 703.057 211.815 703.057 cv
213.247 703.057 214.379 702.479 215.276 701.29 cv
216.198 700.067 216.665 698.442 216.665 696.461 cv
216.665 694.383 216.206 692.719 215.301 691.514 cv
f
0.5 lw
282.044 139.4 mo
281.752 139.4 281.581 139.381 281.581 139.381 cv
281.088 139.335 li
280.622 139.119 li
276.386 137.054 273.057 135.508 272.588 135.352 cv
271.264 134.974 269.69 133.828 269.923 130.573 cv
269.933 130.45 269.939 130.396 269.939 130.348 cv
269.939 129.274 270.384 128.261 270.65 127.657 cv
270.713 127.512 li
271.043 126.47 272.405 124.765 272.728 124.372 cv
272.726 124.37 li
272.82 124.24 273.078 123.772 273.186 123.525 cv
273.241 122.776 273.663 121.658 276.042 117.69 cv
276.126 117.55 276.316 117.1 276.747 115.755 cv
276.747 115.755 276.903 115.271 276.945 115.152 cv
277.158 114.555 277.482 114.123 277.741 113.822 cv
277.892 113.02 278.346 111.559 279.676 108.438 cv
279.789 108.195 279.901 107.949 280.013 107.705 cv
279.982 107.706 279.953 107.706 279.923 107.706 cv
278.073 107.706 276.767 106.665 276.065 106.106 cv
275.934 106.001 li
274.927 105.477 274.325 104.623 274.143 103.462 cv
273.789 102.601 273.751 101.447 273.725 96.9199 cv
273.715 95.502 273.702 93.4077 273.645 92.9751 cv
273.457 91.5869 273.816 89.8408 274.271 87.8682 cv
274.345 87.543 274.433 87.1689 274.456 87.02 cv
274.548 86.0039 275.052 85.2397 277.355 82.145 cv
277.771 81.5869 278.724 80.3081 278.938 79.9551 cv
279.335 79.0088 280.165 78.1958 285.482 74.042 cv
286.134 73.5317 287.088 72.7861 287.25 72.6401 cv
288.346 71.5962 289.816 71.4131 290.79 71.292 cv
290.811 71.2891 290.832 71.2861 290.854 71.2837 cv
290.892 71.2319 290.931 71.1782 290.965 71.127 cv
290.904 70.9741 290.808 70.7661 290.747 70.6348 cv
290.213 69.4829 289.636 66.7319 290.092 64.4839 cv
290.563 62.1621 292.172 60.7852 293.037 60.0459 cv
293.279 59.835 li
294.911 58.3872 296.488 58.3618 297.755 58.3428 cv
298.117 58.3369 298.473 58.3311 298.885 58.3018 cv
299.039 58.291 299.188 58.2852 299.333 58.2852 cv
302.035 58.2852 303.507 60.063 304.061 60.7319 cv
304.125 60.811 li
305.326 61.7798 305.743 63.73 305.749 65.0317 cv
305.865 65.2329 305.994 65.4829 306.107 65.7788 cv
306.466 66.7192 306.497 67.9111 306.245 70.8872 cv
306.223 71.1548 li
306.17 71.792 305.954 72.7251 305.477 73.5737 cv
305.725 73.6821 305.952 73.7769 306.105 73.8271 cv
307.341 74.228 308.202 75.1748 308.895 75.936 cv
309.079 76.1382 309.264 76.3501 309.393 76.458 cv
311.325 77.9541 312.261 82.2441 312.269 82.2861 cv
312.383 82.8848 312.725 83.8838 313.16 84.8872 cv
313.701 86.1421 314.128 86.6899 314.303 86.8809 cv
315.384 87.2178 316.114 88.1567 316.822 89.0669 cv
316.897 89.165 316.995 89.291 317.092 89.4121 cv
318.084 89.6768 319.241 90.1968 320.002 90.7222 cv
320.224 90.7651 320.582 90.8198 320.919 90.8521 cv
323.012 90.9209 325.271 92.769 325.376 96.1558 cv
325.454 98.6401 324.055 100.534 321.435 101.487 cv
321.338 101.523 li
321.093 101.623 320.234 101.972 313.224 101.972 cv
311.583 101.972 310.631 101.23 310.119 100.831 cv
309.981 100.725 li
309.692 100.509 308.141 99.5708 307.628 99.3291 cv
307.302 99.251 306.957 99.104 306.482 98.7881 cv
306.525 99.104 306.628 99.627 306.688 99.9399 cv
306.825 100.646 306.98 101.446 307.096 102.381 cv
307.287 103.927 307.657 105.116 307.729 105.338 cv
309.656 110.15 311.746 115.336 311.959 115.783 cv
312.035 115.923 312.301 116.422 312.904 118.713 cv
313.689 120.207 314.717 122.155 315.475 123.583 cv
315.65 123.561 315.852 123.546 316.074 123.546 cv
317.621 123.546 319.021 124.272 319.913 125.537 cv
321.217 127.381 320.744 129.774 319.696 131.326 cv
319.529 131.572 li
319.321 131.775 li
316.368 134.635 312.712 138.144 312.058 138.631 cv
311.374 139.146 310.668 139.398 309.905 139.398 cv
309.15 139.398 308.604 139.138 308.34 139.012 cv
307.401 138.836 305.98 137.963 301.702 131.442 cv
300.552 129.689 297.861 125.396 297.378 124.385 cv
297.368 124.389 li
297.225 124.066 295.982 121.781 294.048 118.318 cv
293.441 119.337 292.841 120.367 292.689 120.724 cv
292.499 121.166 292.016 122.291 290.709 123.098 cv
290.035 123.943 288.12 126.915 286.815 129.045 cv
287.481 129.682 li
287.703 130.159 li
287.905 130.587 288.857 132.884 287.714 135.83 cv
286.861 138.032 284.689 139.4 282.044 139.4 cv
cp
@
0.75 lw
285.34 92.9634 mo
285.44 94.3252 285.039 98.1133 284.345 99.1362 cv
284.22 99.3965 284.044 100.567 283.969 101.688 cv
284.691 100.457 285.457 99.3853 285.471 99.3662 cv
285.681 99.0513 285.866 97.7114 285.827 97.2432 cv
285.79 97.0142 285.796 96.6685 285.873 94.6333 cv
285.903 93.8413 285.949 92.6274 285.967 91.7085 cv
285.964 91.7153 285.961 91.7222 285.959 91.7285 cv
285.783 92.2153 285.569 92.5781 285.411 92.8442 cv
285.387 92.8862 285.362 92.9253 285.34 92.9634 cv
cp
282.048 137.982 mo
281.843 137.982 281.723 137.97 281.723 137.97 cv
281.467 137.946 li
281.221 137.833 li
277.648 136.09 273.603 134.18 273.018 134 cv
271.141 133.463 271.286 131.438 271.341 130.674 cv
271.35 130.553 271.36 130.442 271.36 130.347 cv
271.36 129.575 271.715 128.764 271.951 128.229 cv
271.995 128.126 272.035 128.042 272.058 127.979 cv
272.208 127.318 273.695 125.406 273.834 125.258 cv
274.021 125.026 274.54 124.087 274.6 123.776 cv
274.594 123.421 274.594 122.868 277.262 118.419 cv
277.528 117.973 277.915 116.766 278.101 116.187 cv
278.177 115.95 278.239 115.754 278.285 115.625 cv
278.46 115.135 278.766 114.801 278.988 114.557 cv
279.023 114.521 279.059 114.484 279.092 114.446 cv
279.113 113.972 279.367 112.784 280.984 108.993 cv
281.646 107.58 282.365 105.882 282.619 105.089 cv
282.327 105.38 281.976 105.647 281.556 105.87 cv
281.037 106.147 280.488 106.289 279.927 106.289 cv
278.57 106.289 277.556 105.479 276.948 104.994 cv
276.845 104.911 276.756 104.836 276.681 104.789 cv
275.815 104.376 275.613 103.717 275.539 103.193 cv
275.525 103.087 275.522 103.064 275.488 102.995 cv
275.224 102.426 275.173 101.518 275.146 96.9111 cv
275.135 95.2241 275.123 93.3125 275.053 92.7871 cv
274.898 91.6362 275.249 89.9531 275.655 88.1851 cv
275.742 87.8062 275.851 87.3345 275.865 87.2021 cv
275.926 86.5454 276.319 85.9155 278.495 82.9912 cv
279.159 82.1001 280.069 80.8794 280.223 80.5674 cv
280.48 79.9033 281.364 79.0601 286.359 75.1582 cv
287.153 74.5371 288.055 73.8325 288.219 73.6782 cv
288.989 72.9434 290.135 72.8013 290.971 72.6973 cv
291.179 72.6714 291.464 72.6362 291.556 72.6094 cv
291.771 72.4722 292.356 71.6934 292.425 71.3784 cv
292.481 71.0161 292.321 70.6514 292.036 70.0371 cv
291.574 69.0415 291.113 66.5952 291.485 64.7661 cv
291.859 62.9233 293.175 61.7964 293.962 61.1226 cv
294.213 60.9043 li
295.463 59.7954 296.59 59.7783 297.782 59.7593 cv
298.132 59.7544 298.528 59.7485 298.99 59.7153 cv
299.11 59.7065 299.225 59.7021 299.337 59.7021 cv
301.371 59.7021 302.453 61.0083 302.973 61.6353 cv
303.047 61.7241 303.108 61.8062 303.169 61.8643 cv
304.103 62.6133 304.417 64.4243 304.32 65.4136 cv
304.448 65.6064 304.638 65.8955 304.79 66.2896 cv
305.051 66.9751 305.063 68.1045 304.837 70.7671 cv
304.814 71.0386 li
304.733 72.0093 304.197 73.5493 303.049 74.0322 cv
303.05 74.0562 303.05 74.0796 303.049 74.1021 cv
303.455 74.2412 303.936 74.4463 304.536 74.7085 cv
304.969 74.8975 305.416 75.0913 305.675 75.1753 cv
306.548 75.4595 307.24 76.2192 307.851 76.8892 cv
308.099 77.1611 308.355 77.4434 308.52 77.5713 cv
309.772 78.5415 310.733 81.7661 310.879 82.5464 cv
311.014 83.2515 311.382 84.3403 311.864 85.4512 cv
312.748 87.5005 313.491 88.1235 313.682 88.1802 cv
314.482 88.3623 315.05 89.0913 315.707 89.9375 cv
315.88 90.1592 316.146 90.5015 316.32 90.6885 cv
317.276 90.8594 318.722 91.4883 319.393 92.0313 cv
319.663 92.1162 320.307 92.2173 320.791 92.2632 cv
322.048 92.3062 323.875 93.3716 323.963 96.2002 cv
324.022 98.0752 323.011 99.4063 320.954 100.154 cv
320.846 100.195 li
320.005 100.536 314.353 100.554 313.228 100.554 cv
312.072 100.554 311.423 100.046 310.992 99.7114 cv
310.853 99.6035 li
310.463 99.3125 308.586 98.1733 308.06 97.9692 cv
307.748 97.9185 307.284 97.7476 305.648 96.3003 cv
305.573 96.5752 305.49 96.8501 305.409 97.1182 cv
305.256 97.6245 305.11 98.1021 305.056 98.4771 cv
305.018 98.7505 305.168 99.5254 305.301 100.21 cv
305.434 100.895 305.584 101.671 305.692 102.553 cv
305.92 104.391 306.385 105.771 306.389 105.785 cv
307.901 109.571 310.436 115.879 310.686 116.397 cv
310.943 116.881 311.34 118.316 311.578 119.229 cv
312.584 121.143 314.031 123.887 314.781 125.286 cv
315.094 125.11 li
315.258 125.065 li
315.344 125.042 315.655 124.963 316.078 124.963 cv
317.174 124.963 318.126 125.458 318.759 126.354 cv
319.804 127.833 319.104 129.676 318.525 130.533 cv
318.442 130.655 li
318.337 130.758 li
316.834 132.213 311.879 137 311.216 137.493 cv
310.941 137.7 310.5 137.98 309.909 137.98 cv
309.473 137.98 309.146 137.824 308.951 137.731 cv
308.827 137.671 308.77 137.643 308.641 137.625 cv
306.556 137.313 298.714 123.968 298.679 123.84 cv
298.482 123.37 296.346 119.502 294.093 115.491 cv
293.93 115.764 293.747 116.068 293.543 116.408 cv
292.697 117.817 291.644 119.569 291.389 120.168 cv
291.224 120.552 290.851 121.419 289.791 121.995 cv
289.007 122.848 286.097 127.471 285.02 129.282 cv
286.313 130.522 li
286.424 130.76 li
286.522 130.967 287.351 132.859 286.397 135.317 cv
285.75 136.985 284.124 137.982 282.048 137.982 cv
cp
@
1 lw
273.418 132.639 mo
274.365 132.912 281.846 136.559 281.846 136.559 cv
281.846 136.559 284.318 136.768 285.078 134.805 cv
285.84 132.842 285.145 131.364 285.145 131.364 cv
283.877 130.146 li
283.877 130.146 283.111 129.943 283.367 129.335 cv
283.555 128.887 288.313 121.145 289.006 120.807 cv
289.705 120.473 289.939 119.958 290.088 119.612 cv
290.664 118.262 294.02 113.053 294.084 112.583 cv
294.084 112.583 299.854 122.791 300.047 123.46 cv
300.234 124.131 307.963 136.089 308.854 136.223 cv
309.746 136.356 309.74 136.832 310.373 136.356 cv
311.014 135.879 317.354 129.741 317.354 129.741 cv
317.354 129.741 318.363 128.245 317.604 127.17 cv
316.844 126.094 315.643 126.43 315.643 126.43 cv
314.561 127.037 li
314.561 127.037 314.309 127.311 314.055 126.903 cv
313.799 126.5 310.25 119.743 310.25 119.743 cv
310.25 119.743 309.674 117.508 309.426 117.041 cv
309.174 116.574 305.051 106.243 305.051 106.243 cv
305.051 106.243 304.539 104.751 304.289 102.727 cv
304.041 100.702 303.533 99.1509 303.656 98.2705 cv
303.787 97.3906 304.23 96.3057 304.42 95.3647 cv
304.611 94.4204 304.604 93.6797 304.48 93.2778 cv
304.48 93.2778 307.844 96.5107 308.35 96.5786 cv
308.854 96.6519 311.26 98.1367 311.709 98.4717 cv
312.154 98.8076 312.471 99.1367 313.231 99.1367 cv
313.988 99.1367 319.826 99.0806 320.33 98.8755 cv
320.836 98.6777 322.611 98.2017 322.549 96.2437 cv
322.488 94.2896 321.352 93.6797 320.715 93.6797 cv
320.715 93.6797 318.869 93.5166 318.553 93.1748 cv
318.24 92.8315 316.469 92.0464 315.889 92.0605 cv
315.275 92.0728 314.018 89.7095 313.359 89.5596 cv
312.248 89.2998 311.232 87.5576 310.566 86.0146 cv
310.186 85.1367 309.682 83.8179 309.488 82.8057 cv
309.299 81.7896 308.356 79.2349 307.65 78.6885 cv
306.953 78.1445 306.061 76.7905 305.242 76.5234 cv
304.42 76.2578 302.711 75.3726 302.072 75.3105 cv
301.438 75.2456 301.686 74.4355 301.625 73.8276 cv
301.568 73.2197 302.01 72.8774 302.453 72.7437 cv
302.898 72.6118 303.338 71.7324 303.404 70.9248 cv
303.471 70.1128 303.727 67.4717 303.471 66.7983 cv
303.213 66.1284 302.775 65.9185 302.898 65.3828 cv
303.022 64.8438 302.77 63.3574 302.262 62.9497 cv
301.756 62.5454 301.064 60.9897 299.096 61.1284 cv
297.127 61.2705 296.299 60.9507 295.16 61.9624 cv
294.471 62.5757 293.191 63.4946 292.877 65.0474 cv
292.563 66.5986 293.008 68.7578 293.322 69.4346 cv
293.637 70.1128 293.953 70.7886 293.828 71.5996 cv
293.705 72.4087 292.625 73.7578 291.99 73.9585 cv
291.357 74.1616 289.84 74.0947 289.203 74.7017 cv
288.568 75.3105 281.846 80.3115 281.529 81.1206 cv
281.215 81.9307 277.342 86.6538 277.279 87.3315 cv
277.221 88.0078 276.27 91.1797 276.461 92.5986 cv
276.65 94.0146 276.461 101.72 276.773 102.391 cv
277.092 103.063 276.773 103.263 277.348 103.537 cv
277.916 103.81 279.244 105.5 280.893 104.619 cv
282.545 103.74 282.535 101.987 282.535 101.987 cv
282.535 101.987 282.67 99.0864 283.176 98.3408 cv
283.682 97.5938 284.057 93.4526 283.926 92.9849 cv
283.795 92.5146 284.313 92.1226 284.629 91.2485 cv
284.941 90.3755 287.039 87.6714 287.74 87.1997 cv
287.74 87.1997 287.232 89.4194 287.361 90.3008 cv
287.494 91.1797 287.172 96.6519 287.234 97.0557 cv
287.301 97.4595 287.172 99.4785 286.6 100.228 cv
286.029 100.973 284.127 104.013 284.127 104.824 cv
284.127 105.633 282.291 109.548 282.291 109.548 cv
282.291 109.548 280.445 113.876 280.514 114.545 cv
280.58 115.217 279.818 115.559 279.625 116.096 cv
279.436 116.633 278.932 118.395 278.486 119.138 cv
278.043 119.876 276.014 123.258 276.014 123.868 cv
276.014 124.475 275.129 125.953 274.871 126.229 cv
274.615 126.5 273.48 128.114 273.418 128.385 cv
273.352 128.659 272.779 129.67 272.779 130.348 cv
272.779 131.026 272.467 132.368 273.418 132.639 cv
cp
@
256.42 163.678 mo
256.046 163.473 255.73 163.178 255.479 162.8 cv
255.241 162.439 255.058 162.001 254.934 161.496 cv
254.814 161.004 254.753 160.445 254.753 159.834 cv
254.753 158.553 255.005 157.523 255.501 156.769 cv
256.044 155.956 256.808 155.545 257.771 155.545 cv
258.203 155.545 258.627 155.661 259.038 155.891 cv
259.038 153.324 li
258.562 153.189 258.091 153.121 257.632 153.121 cv
255.847 153.121 254.464 153.708 253.407 154.915 cv
252.348 156.132 251.81 157.784 251.81 159.824 cv
251.81 162.003 252.38 163.699 253.503 164.866 cv
254.505 165.906 255.708 166.412 257.178 166.412 cv
257.715 166.412 258.327 166.298 259.003 166.073 cv
259.146 163.588 li
258.201 164.11 257.181 164.093 256.42 163.678 cv
f
270.057 164.357 mo
270.289 163.903 270.405 163.301 270.405 162.555 cv
270.405 153.121 li
267.544 153.121 li
267.544 161.794 li
267.544 162.536 267.457 163.038 267.269 163.374 cv
267.097 163.66 266.757 163.986 266.063 163.986 cv
265.384 163.986 265.039 163.643 264.87 163.355 cv
264.667 163.01 264.574 162.512 264.574 161.785 cv
264.574 153.121 li
261.714 153.121 li
261.714 162.018 li
261.714 163.664 262.203 164.816 263.209 165.542 cv
264.013 166.119 265.033 166.412 266.24 166.412 cv
267.293 166.412 268.197 166.15 268.92 165.632 cv
269.452 165.248 269.833 164.818 270.057 164.357 cv
f
279.622 166.412 mo
282.502 166.412 li
282.502 153.121 li
279.781 153.121 li
279.781 155.832 li
279.781 156.411 279.817 157.144 279.89 158.012 cv
279.964 158.89 280.071 159.947 280.212 161.182 cv
279.239 161.389 li
278.841 160.129 li
278.683 159.636 278.537 159.199 278.405 158.819 cv
278.051 157.803 li
276.245 153.121 li
273.403 153.121 li
273.403 166.412 li
276.125 166.412 li
276.125 163.265 li
276.125 162.728 276.09 162.083 276.02 161.35 cv
275.95 160.611 275.838 159.736 275.686 158.749 cv
276.66 158.533 li
276.788 158.969 276.937 159.428 277.108 159.909 cv
277.28 160.396 277.473 160.918 277.686 161.475 cv
279.622 166.412 li
cp
f
290.474 165.243 mo
291.245 164.452 291.62 163.469 291.62 162.237 cv
291.62 161.526 291.467 160.927 291.154 160.407 cv
290.838 159.874 290.299 159.342 289.548 158.82 cv
288.931 158.379 li
288.272 157.924 287.936 157.416 287.936 156.875 cv
287.936 156.497 288.102 156.162 288.417 155.907 cv
289.009 155.393 290.037 155.428 290.935 156.057 cv
291.033 156.125 291.127 156.2 291.221 156.279 cv
291.221 153.645 li
290.456 153.297 289.691 153.121 288.945 153.121 cv
288.022 153.121 287.265 153.375 286.624 153.901 cv
286.386 154.087 286.179 154.297 286.001 154.533 cv
285.817 154.781 285.655 155.053 285.519 155.342 cv
285.245 155.966 285.104 156.578 285.104 157.147 cv
285.104 157.479 285.142 157.797 285.218 158.097 cv
285.292 158.388 285.412 158.677 285.573 158.954 cv
285.738 159.238 285.954 159.517 286.218 159.782 cv
286.497 160.065 286.835 160.352 287.228 160.635 cv
287.867 161.115 li
288.454 161.568 288.75 162.063 288.75 162.594 cv
288.75 163 288.578 163.356 288.25 163.621 cv
287.951 163.864 287.572 163.987 287.121 163.987 cv
286.429 163.987 285.771 163.727 285.16 163.213 cv
285.16 165.977 li
287.376 166.724 289.224 166.527 290.474 165.243 cv
f
300.514 153.121 mo
293.313 153.121 li
293.313 155.545 li
295.443 155.545 li
295.443 166.412 li
298.302 166.412 li
298.302 155.545 li
300.514 155.545 li
300.514 153.121 li
cp
f
309.654 161.177 mo
310.038 160.95 li
312.005 163.552 li
311.632 163.856 li
311.226 164.189 310.792 164.358 310.342 164.358 cv
309.892 164.358 309.491 164.183 309.188 163.853 cv
308.886 163.525 308.732 163.127 308.732 162.672 cv
308.732 162.238 308.892 161.627 309.654 161.177 cv
310.028 155.548 mo
310.1 155.396 310.196 155.262 310.319 155.15 cv
310.437 155.043 310.569 154.957 310.717 154.894 cv
311.185 154.699 311.753 154.799 312.118 155.155 cv
312.362 155.395 312.491 155.706 312.491 156.055 cv
312.491 156.583 312.161 157.151 311.452 157.84 cv
311.022 158.256 li
310.688 157.76 li
310.155 156.967 309.917 156.438 309.917 156.045 cv
309.917 155.874 309.954 155.707 310.028 155.548 cv
307.243 165.305 mo
308.03 166.051 308.967 166.412 310.103 166.412 cv
311.104 166.412 312.097 166.169 313.052 165.688 cv
313.435 165.496 li
314.092 166.412 li
317.007 166.412 li
315.37 164.23 li
315.708 163.924 li
315.933 163.72 316.165 163.504 316.405 163.271 cv
316.554 163.125 316.708 162.971 316.864 162.806 cv
315.552 161.081 li
315.423 161.245 315.302 161.396 315.187 161.532 cv
314.958 161.808 314.757 162.036 314.585 162.219 cv
314.187 162.642 li
312.083 159.941 li
312.544 159.645 li
314.028 158.698 314.749 157.64 314.749 156.412 cv
314.749 155.507 314.388 154.753 313.644 154.107 cv
312.886 153.444 311.989 153.121 310.907 153.121 cv
309.92 153.121 309.11 153.428 308.435 154.058 cv
307.763 154.682 307.437 155.41 307.437 156.285 cv
307.437 157.064 307.77 157.869 308.427 158.678 cv
308.803 159.142 li
308.28 159.431 li
306.797 160.249 306.076 161.302 306.076 162.649 cv
306.076 163.695 306.458 164.564 307.243 165.305 cv
f
328.671 163.678 mo
328.296 163.472 327.979 163.177 327.729 162.8 cv
327.491 162.436 327.308 161.998 327.185 161.496 cv
327.063 161.009 327.003 160.449 327.003 159.834 cv
327.003 158.555 327.255 157.525 327.751 156.77 cv
328.296 155.956 329.06 155.545 330.021 155.545 cv
330.454 155.545 330.878 155.661 331.288 155.891 cv
331.288 153.324 li
330.812 153.189 330.341 153.121 329.882 153.121 cv
328.097 153.121 326.716 153.708 325.659 154.915 cv
324.599 156.132 324.06 157.783 324.06 159.824 cv
324.06 162.003 324.63 163.699 325.753 164.866 cv
326.757 165.906 327.96 166.412 329.429 166.412 cv
329.966 166.412 330.579 166.298 331.253 166.073 cv
331.396 163.588 li
330.45 164.11 329.431 164.093 328.671 163.678 cv
f
340.038 162.711 mo
339.63 163.764 338.985 163.986 338.518 163.986 cv
338.056 163.986 337.421 163.761 337.009 162.69 cv
336.735 161.977 336.6 161.02 336.6 159.766 cv
336.6 158.487 336.745 157.531 337.04 156.845 cv
337.478 155.772 338.126 155.544 338.591 155.544 cv
340.462 155.544 340.462 158.784 340.462 159.847 cv
340.462 161.045 340.319 162.009 340.038 162.711 cv
342.106 154.869 mo
341.225 153.692 340.069 153.122 338.573 153.122 cv
337.353 153.122 336.325 153.544 335.433 154.417 cv
334.22 155.606 333.603 157.372 333.603 159.665 cv
333.603 162.065 334.192 163.877 335.356 165.048 cv
336.272 165.965 337.341 166.413 338.62 166.413 cv
340.052 166.413 341.184 165.834 342.081 164.645 cv
343.003 163.42 343.47 161.796 343.47 159.815 cv
343.47 157.737 343.011 156.073 342.106 154.869 cv
f
243.185 172.218 mo
352.096 172.218 li
352.096 47.209 li
243.185 47.209 li
243.185 172.218 li
cp
353.096 173.218 mo
242.185 173.218 li
242.185 46.209 li
353.096 46.209 li
353.096 173.218 li
cp
f
538.754 469.055 mo
304.12 469.055 li
304.12 330.118 li
538.754 330.118 li
538.754 469.055 li
cp
0.912 0.788 0.62 0.975 cmyk
@
325.92 441.708 mo
327.142 442.062 336.79 446.764 336.79 446.764 cv
336.79 446.764 339.979 447.034 340.959 444.502 cv
341.941 441.97 341.045 440.063 341.045 440.063 cv
339.41 438.493 li
339.41 438.493 338.422 438.231 338.752 437.448 cv
338.995 436.869 345.13 426.883 346.025 426.446 cv
346.928 426.016 347.229 425.354 347.42 424.905 cv
348.164 423.165 352.491 416.446 352.578 415.84 cv
352.578 415.84 360.018 429.006 360.267 429.87 cv
360.508 430.736 370.477 446.159 371.627 446.331 cv
372.779 446.502 372.772 447.117 373.588 446.502 cv
374.414 445.889 382.591 437.969 382.591 437.969 cv
382.591 437.969 383.894 436.042 382.913 434.656 cv
381.931 433.266 380.383 433.7 380.383 433.7 cv
378.99 434.483 li
378.99 434.483 378.664 434.835 378.337 434.309 cv
378.007 433.79 373.426 425.075 373.426 425.075 cv
373.426 425.075 372.684 422.192 372.364 421.589 cv
372.039 420.986 366.72 407.663 366.72 407.663 cv
366.72 407.663 366.061 405.739 365.738 403.126 cv
365.418 400.515 364.766 398.515 364.922 397.379 cv
365.091 396.244 365.662 394.845 365.906 393.63 cv
366.153 392.414 366.145 391.458 365.985 390.938 cv
365.985 390.938 370.323 395.108 370.976 395.198 cv
371.627 395.291 374.729 397.207 375.31 397.639 cv
375.885 398.072 376.291 398.497 377.273 398.497 cv
378.25 398.497 385.778 398.423 386.428 398.161 cv
387.083 397.904 389.371 397.291 389.29 394.766 cv
389.215 392.245 387.746 391.458 386.927 391.458 cv
386.927 391.458 384.546 391.248 384.139 390.807 cv
383.732 390.364 381.447 389.351 380.699 389.37 cv
379.909 389.385 378.286 386.336 377.439 386.144 cv
376.007 385.809 374.694 383.562 373.834 381.572 cv
373.346 380.438 372.691 378.736 372.447 377.433 cv
372.2 376.123 370.984 372.826 370.076 372.123 cv
369.174 371.42 368.023 369.673 366.968 369.33 cv
365.906 368.986 363.702 367.845 362.879 367.765 cv
362.06 367.682 362.38 366.637 362.302 365.853 cv
362.229 365.067 362.798 364.626 363.369 364.455 cv
363.945 364.284 364.511 363.15 364.598 362.106 cv
364.683 361.06 365.013 357.654 364.683 356.787 cv
364.35 355.921 363.786 355.65 363.945 354.958 cv
364.103 354.264 363.778 352.348 363.124 351.822 cv
362.471 351.299 361.579 349.292 359.04 349.473 cv
356.501 349.656 355.433 349.244 353.964 350.547 cv
353.074 351.339 351.424 352.524 351.019 354.526 cv
350.612 356.529 351.188 359.313 351.596 360.187 cv
351.999 361.06 352.407 361.933 352.246 362.979 cv
352.087 364.021 350.694 365.762 349.875 366.021 cv
349.061 366.284 347.1 366.196 346.28 366.979 cv
345.461 367.765 336.79 374.215 336.385 375.258 cv
335.977 376.304 330.98 382.396 330.9 383.27 cv
330.824 384.142 329.599 388.232 329.844 390.063 cv
330.089 391.891 329.844 401.828 330.247 402.693 cv
330.658 403.562 330.247 403.817 330.989 404.171 cv
331.722 404.522 333.435 406.706 335.561 405.567 cv
337.691 404.434 337.68 402.171 337.68 402.171 cv
337.68 402.171 337.855 398.433 338.506 397.47 cv
339.157 396.505 339.642 391.166 339.474 390.561 cv
339.304 389.955 339.973 389.45 340.379 388.322 cv
340.783 387.197 343.488 383.708 344.393 383.099 cv
344.393 383.099 343.737 385.963 343.904 387.099 cv
344.075 388.232 343.66 395.291 343.744 395.813 cv
343.826 396.333 343.66 398.938 342.925 399.904 cv
342.186 400.865 339.732 404.785 339.732 405.832 cv
339.732 406.875 337.363 411.927 337.363 411.927 cv
337.363 411.927 334.985 417.508 335.071 418.372 cv
335.158 419.236 334.175 419.678 333.926 420.371 cv
333.681 421.063 333.032 423.335 332.457 424.293 cv
331.885 425.247 329.27 429.608 329.27 430.395 cv
329.27 431.178 328.127 433.084 327.795 433.44 cv
327.464 433.79 326.003 435.872 325.92 436.221 cv
325.833 436.575 325.096 437.88 325.096 438.752 cv
325.096 439.627 324.693 441.358 325.92 441.708 cv
cp
@
329.315 441.708 mo
330.54 442.062 340.186 446.764 340.186 446.764 cv
340.186 446.764 343.375 447.034 344.356 444.502 cv
345.34 441.97 344.443 440.063 344.443 440.063 cv
342.807 438.493 li
342.807 438.493 341.817 438.231 342.148 437.448 cv
342.394 436.869 348.526 426.883 349.422 426.446 cv
350.324 426.016 350.625 425.354 350.819 424.905 cv
351.563 423.165 355.891 416.446 355.975 415.84 cv
355.975 415.84 363.415 429.006 363.664 429.87 cv
363.904 430.736 373.875 446.159 375.024 446.331 cv
376.176 446.502 376.167 447.117 376.984 446.502 cv
377.811 445.889 385.987 437.969 385.987 437.969 cv
385.987 437.969 387.29 436.042 386.31 434.656 cv
385.33 433.266 383.78 433.7 383.78 433.7 cv
382.385 434.483 li
382.385 434.483 382.06 434.835 381.733 434.309 cv
381.402 433.79 376.824 425.075 376.824 425.075 cv
376.824 425.075 376.083 422.192 375.763 421.589 cv
375.438 420.986 370.119 407.663 370.119 407.663 cv
370.119 407.663 369.459 405.739 369.137 403.126 cv
368.814 400.515 368.161 398.515 368.32 397.379 cv
368.486 396.244 369.058 394.845 369.303 393.63 cv
369.55 392.414 369.542 391.458 369.379 390.938 cv
369.379 390.938 373.721 395.108 374.374 395.198 cv
375.024 395.291 378.128 397.207 378.707 397.639 cv
379.281 398.072 379.689 398.497 380.669 398.497 cv
381.646 398.497 389.178 398.423 389.826 398.161 cv
390.479 397.904 392.77 397.291 392.688 394.766 cv
392.611 392.245 391.145 391.458 390.323 391.458 cv
390.323 391.458 387.943 391.248 387.534 390.807 cv
387.131 390.364 384.846 389.351 384.098 389.37 cv
383.308 389.385 381.686 386.336 380.836 386.144 cv
379.403 385.809 378.092 383.562 377.233 381.572 cv
376.741 380.438 376.092 378.736 375.843 377.433 cv
375.598 376.123 374.382 372.826 373.472 372.123 cv
372.572 371.42 371.422 369.673 370.363 369.33 cv
369.303 368.986 367.102 367.845 366.277 367.765 cv
365.456 367.682 365.778 366.637 365.7 365.853 cv
365.624 365.067 366.194 364.626 366.769 364.455 cv
367.341 364.284 367.907 363.15 367.996 362.106 cv
368.078 361.06 368.411 357.654 368.078 356.787 cv
367.746 355.921 367.181 355.65 367.341 354.958 cv
367.501 354.264 367.177 352.348 366.521 351.822 cv
365.869 351.299 364.976 349.292 362.436 349.473 cv
359.898 349.656 358.831 349.244 357.358 350.547 cv
356.473 351.339 354.822 352.524 354.414 354.526 cv
354.009 356.529 354.586 359.313 354.991 360.187 cv
355.396 361.06 355.802 361.933 355.642 362.979 cv
355.482 364.021 354.092 365.762 353.273 366.021 cv
352.456 366.284 350.499 366.196 349.675 366.979 cv
348.859 367.765 340.186 374.215 339.78 375.258 cv
339.372 376.304 334.378 382.396 334.298 383.27 cv
334.221 384.142 332.994 388.232 333.243 390.063 cv
333.487 391.891 333.243 401.828 333.646 402.693 cv
334.055 403.562 333.646 403.817 334.385 404.171 cv
335.117 404.522 336.833 406.706 338.959 405.567 cv
341.091 404.434 341.078 402.171 341.078 402.171 cv
341.078 402.171 341.252 398.433 341.902 397.47 cv
342.557 396.505 343.04 391.166 342.869 390.561 cv
342.703 389.955 343.37 389.45 343.775 388.322 cv
344.18 387.197 346.887 383.708 347.792 383.099 cv
347.792 383.099 347.134 385.963 347.3 387.099 cv
347.472 388.232 347.057 395.291 347.139 395.813 cv
347.223 396.333 347.057 398.938 346.32 399.904 cv
345.585 400.865 343.128 404.785 343.128 405.832 cv
343.128 406.875 340.761 411.927 340.761 411.927 cv
340.761 411.927 338.382 417.508 338.471 418.372 cv
338.554 419.236 337.571 419.678 337.324 420.371 cv
337.08 421.063 336.431 423.335 335.855 424.293 cv
335.282 425.247 332.666 429.608 332.666 430.395 cv
332.666 431.178 331.522 433.084 331.188 433.44 cv
330.862 433.79 329.398 435.872 329.315 436.221 cv
329.229 436.575 328.494 437.88 328.494 438.752 cv
328.494 439.627 328.09 441.358 329.315 441.708 cv
cp
@
332.714 441.708 mo
333.936 442.062 343.584 446.764 343.584 446.764 cv
343.584 446.764 346.773 447.034 347.753 444.502 cv
348.736 441.97 347.84 440.063 347.84 440.063 cv
346.204 438.493 li
346.204 438.493 345.217 438.231 345.548 437.448 cv
345.788 436.869 351.926 426.883 352.82 426.446 cv
353.722 426.016 354.023 425.354 354.216 424.905 cv
354.958 423.165 359.287 416.446 359.37 415.84 cv
359.37 415.84 366.812 429.006 367.061 429.87 cv
367.303 430.736 377.271 446.159 378.42 446.331 cv
379.573 446.502 379.563 447.117 380.383 446.502 cv
381.207 445.889 389.386 437.969 389.386 437.969 cv
389.386 437.969 390.688 436.042 389.706 434.656 cv
388.727 433.266 387.177 433.7 387.177 433.7 cv
385.783 434.483 li
385.783 434.483 385.456 434.835 385.131 434.309 cv
384.801 433.79 380.221 425.075 380.221 425.075 cv
380.221 425.075 379.479 422.192 379.158 421.589 cv
378.833 420.986 373.515 407.663 373.515 407.663 cv
373.515 407.663 372.854 405.739 372.532 403.126 cv
372.212 400.515 371.558 398.515 371.717 397.379 cv
371.883 396.244 372.457 394.845 372.701 393.63 cv
372.947 392.414 372.938 391.458 372.779 390.938 cv
372.779 390.938 377.117 395.108 377.77 395.198 cv
378.42 395.291 381.523 397.207 382.103 397.639 cv
382.677 398.072 383.086 398.497 384.068 398.497 cv
385.046 398.497 392.573 398.423 393.223 398.161 cv
393.877 397.904 396.165 397.291 396.084 394.766 cv
396.009 392.245 394.541 391.458 393.721 391.458 cv
393.721 391.458 391.341 391.248 390.932 390.807 cv
390.527 390.364 388.242 389.351 387.494 389.37 cv
386.703 389.385 385.081 386.336 384.235 386.144 cv
382.801 385.809 381.488 383.562 380.629 381.572 cv
380.139 380.438 379.488 378.736 379.241 377.433 cv
378.994 376.123 377.777 372.826 376.87 372.123 cv
375.969 371.42 374.816 369.673 373.761 369.33 cv
372.701 368.986 370.497 367.845 369.673 367.765 cv
368.854 367.682 369.174 366.637 369.097 365.853 cv
369.023 365.067 369.594 364.626 370.165 364.455 cv
370.739 364.284 371.302 363.15 371.391 362.106 cv
371.477 361.06 371.807 357.654 371.477 356.787 cv
371.145 355.921 370.58 355.65 370.739 354.958 cv
370.897 354.264 370.572 352.348 369.918 351.822 cv
369.265 351.299 368.371 349.292 365.834 349.473 cv
363.294 349.656 362.226 349.244 360.757 350.547 cv
359.868 351.339 358.219 352.524 357.813 354.526 cv
357.404 356.529 357.982 359.313 358.387 360.187 cv
358.793 361.06 359.2 361.933 359.04 362.979 cv
358.882 364.021 357.487 365.762 356.669 366.021 cv
355.853 366.284 353.896 366.196 353.074 366.979 cv
352.256 367.765 343.584 374.215 343.177 375.258 cv
342.771 376.304 337.776 382.396 337.694 383.27 cv
337.619 384.142 336.393 388.232 336.64 390.063 cv
336.883 391.891 336.64 401.828 337.041 402.693 cv
337.452 403.562 337.041 403.817 337.783 404.171 cv
338.517 404.522 340.229 406.706 342.355 405.567 cv
344.485 404.434 344.474 402.171 344.474 402.171 cv
344.474 402.171 344.647 398.433 345.301 397.47 cv
345.952 396.505 346.436 391.166 346.268 390.561 cv
346.1 389.955 346.766 389.45 347.174 388.322 cv
347.574 387.197 350.283 383.708 351.188 383.099 cv
351.188 383.099 350.532 385.963 350.698 387.099 cv
350.869 388.232 350.454 395.291 350.535 395.813 cv
350.621 396.333 350.454 398.938 349.717 399.904 cv
348.98 400.865 346.527 404.785 346.527 405.832 cv
346.527 406.875 344.159 411.927 344.159 411.927 cv
344.159 411.927 341.778 417.508 341.867 418.372 cv
341.949 419.236 340.969 419.678 340.72 420.371 cv
340.477 421.063 339.825 423.335 339.252 424.293 cv
338.679 425.247 336.063 429.608 336.063 430.395 cv
336.063 431.178 334.921 433.084 334.585 433.44 cv
334.259 433.79 332.795 435.872 332.714 436.221 cv
332.628 436.575 331.891 437.88 331.891 438.752 cv
331.891 439.627 331.487 441.358 332.714 441.708 cv
cp
@
405.015 421.69 mo
404.531 421.426 404.123 421.045 403.801 420.558 cv
403.493 420.091 403.258 419.526 403.098 418.876 cv
402.941 418.241 402.863 417.521 402.863 416.732 cv
402.863 415.082 403.188 413.751 403.828 412.779 cv
404.528 411.73 405.514 411.199 406.756 411.199 cv
407.315 411.199 407.861 411.35 408.391 411.647 cv
408.391 408.335 li
407.776 408.162 407.169 408.073 406.576 408.073 cv
404.274 408.073 402.49 408.832 401.127 410.388 cv
399.763 411.958 399.066 414.087 399.066 416.719 cv
399.066 419.529 399.802 421.717 401.252 423.223 cv
402.543 424.565 404.096 425.217 405.992 425.217 cv
406.686 425.217 407.474 425.071 408.346 424.779 cv
408.529 421.573 li
407.313 422.249 405.993 422.226 405.015 421.69 cv
f
422.604 422.567 mo
422.904 421.981 423.053 421.204 423.053 420.241 cv
423.053 408.074 li
419.364 408.074 li
419.364 419.26 li
419.364 420.217 419.25 420.864 419.007 421.298 cv
418.785 421.667 418.347 422.088 417.452 422.088 cv
416.575 422.088 416.133 421.644 415.913 421.274 cv
415.65 420.829 415.529 420.187 415.529 419.249 cv
415.529 408.074 li
411.843 408.074 li
411.843 419.549 li
411.843 421.672 412.475 423.159 413.771 424.094 cv
414.808 424.839 416.122 425.217 417.68 425.217 cv
419.04 425.217 420.203 424.879 421.139 424.211 cv
421.823 423.715 422.316 423.161 422.604 422.567 cv
f
434.941 425.217 mo
438.655 425.217 li
438.655 408.073 li
435.147 408.073 li
435.147 411.57 li
435.147 412.316 435.192 413.263 435.286 414.382 cv
435.382 415.514 435.521 416.878 435.701 418.47 cv
434.446 418.738 li
433.934 417.112 li
433.729 416.476 433.543 415.913 433.371 415.423 cv
432.914 414.112 li
430.584 408.073 li
426.92 408.073 li
426.92 425.217 li
430.433 425.217 li
430.433 421.157 li
430.433 420.465 430.387 419.633 430.295 418.687 cv
430.205 417.735 430.061 416.606 429.865 415.333 cv
431.122 415.053 li
431.285 415.616 431.479 416.208 431.698 416.829 cv
431.92 417.457 432.168 418.13 432.444 418.848 cv
434.941 425.217 li
cp
f
448.938 423.708 mo
449.933 422.688 450.416 421.42 450.416 419.831 cv
450.416 418.914 450.22 418.142 449.814 417.471 cv
449.409 416.784 448.713 416.097 447.743 415.424 cv
446.946 414.855 li
446.098 414.268 445.665 413.612 445.665 412.916 cv
445.665 412.429 445.879 411.996 446.284 411.667 cv
447.047 411.003 448.373 411.048 449.531 411.86 cv
449.658 411.949 449.781 412.043 449.901 412.146 cv
449.901 408.75 li
448.914 408.3 447.93 408.074 446.965 408.074 cv
445.775 408.074 444.799 408.401 443.972 409.079 cv
443.663 409.32 443.398 409.591 443.171 409.895 cv
442.931 410.213 442.722 410.564 442.547 410.938 cv
442.193 411.743 442.012 412.533 442.012 413.268 cv
442.012 413.693 442.06 414.105 442.158 414.491 cv
442.254 414.867 442.408 415.24 442.617 415.598 cv
442.828 415.963 443.107 416.323 443.448 416.665 cv
443.809 417.031 444.247 417.4 444.75 417.765 cv
445.574 418.383 li
446.332 418.969 446.715 419.608 446.715 420.292 cv
446.715 420.817 446.491 421.275 446.07 421.617 cv
445.683 421.93 445.193 422.088 444.614 422.088 cv
443.721 422.088 442.875 421.753 442.084 421.09 cv
442.084 424.655 li
444.945 425.62 447.325 425.364 448.938 423.708 cv
f
461.889 408.074 mo
452.602 408.074 li
452.602 411.2 li
455.347 411.2 li
455.347 425.217 li
459.035 425.217 li
459.035 411.2 li
461.889 411.2 li
461.889 408.074 li
cp
f
473.679 418.464 mo
474.172 418.172 li
476.708 421.527 li
476.228 421.92 li
475.703 422.348 475.145 422.567 474.564 422.567 cv
473.983 422.567 473.466 422.342 473.076 421.916 cv
472.686 421.492 472.49 420.98 472.49 420.393 cv
472.49 419.833 472.693 419.044 473.679 418.464 cv
474.159 411.203 mo
474.254 411.007 474.376 410.835 474.534 410.691 cv
474.687 410.552 474.856 410.442 475.049 410.36 cv
475.65 410.109 476.384 410.237 476.855 410.696 cv
477.169 411.006 477.337 411.407 477.337 411.858 cv
477.337 412.54 476.91 413.27 475.996 414.16 cv
475.442 414.696 li
475.011 414.056 li
474.323 413.034 474.016 412.352 474.016 411.845 cv
474.016 411.624 474.064 411.408 474.159 411.203 cv
470.567 423.79 mo
471.582 424.75 472.789 425.217 474.256 425.217 cv
475.547 425.217 476.828 424.903 478.059 424.283 cv
478.554 424.036 li
479.399 425.217 li
483.161 425.217 li
481.05 422.401 li
481.484 422.005 li
481.775 421.745 482.074 421.464 482.385 421.165 cv
482.576 420.979 482.776 420.778 482.977 420.566 cv
481.285 418.34 li
481.117 418.552 480.961 418.746 480.813 418.922 cv
480.518 419.278 480.259 419.573 480.037 419.807 cv
479.522 420.354 li
476.81 416.87 li
477.404 416.488 li
479.318 415.266 480.248 413.902 480.248 412.318 cv
480.248 411.151 479.783 410.178 478.822 409.345 cv
477.846 408.489 476.688 408.074 475.292 408.074 cv
474.021 408.074 472.976 408.469 472.104 409.282 cv
471.237 410.087 470.816 411.026 470.816 412.155 cv
470.816 413.159 471.247 414.197 472.094 415.242 cv
472.581 415.84 li
471.904 416.213 li
469.994 417.267 469.063 418.625 469.063 420.362 cv
469.063 421.712 469.555 422.833 470.567 423.79 cv
f
498.205 421.69 mo
497.723 421.425 497.313 421.044 496.991 420.558 cv
496.685 420.088 496.447 419.523 496.288 418.876 cv
496.132 418.248 496.054 417.526 496.054 416.732 cv
496.054 415.083 496.379 413.753 497.019 412.779 cv
497.723 411.73 498.707 411.199 499.945 411.199 cv
500.505 411.199 501.051 411.35 501.58 411.647 cv
501.58 408.335 li
500.967 408.162 500.358 408.073 499.768 408.073 cv
497.465 408.073 495.685 408.832 494.32 410.387 cv
492.952 411.957 492.258 414.087 492.258 416.719 cv
492.258 419.529 492.993 421.717 494.441 423.223 cv
495.736 424.565 497.289 425.217 499.184 425.217 cv
499.876 425.217 500.666 425.071 501.536 424.78 cv
501.72 421.573 li
500.5 422.247 499.186 422.226 498.205 421.69 cv
f
512.866 420.443 mo
512.34 421.801 511.51 422.088 510.904 422.088 cv
510.31 422.088 509.492 421.798 508.96 420.417 cv
508.606 419.495 508.434 418.261 508.434 416.645 cv
508.434 414.994 508.619 413.762 509 412.877 cv
509.563 411.492 510.401 411.199 511.001 411.199 cv
513.414 411.199 513.414 415.377 513.414 416.75 cv
513.414 418.295 513.229 419.539 512.866 420.443 cv
515.534 410.327 mo
514.398 408.812 512.907 408.073 510.978 408.073 cv
509.403 408.073 508.078 408.62 506.927 409.745 cv
505.362 411.278 504.565 413.556 504.565 416.512 cv
504.565 419.61 505.326 421.947 506.828 423.458 cv
508.011 424.641 509.387 425.217 511.038 425.217 cv
512.884 425.217 514.346 424.471 515.503 422.936 cv
516.691 421.358 517.293 419.263 517.293 416.708 cv
517.293 414.028 516.701 411.882 515.534 410.327 cv
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (ty1) ()%%Title: (cunst_logo2014.eps)%%CreationDate: 2/16/15 8:38 PM%AI9_DataStream%Gb!R&pKlUuei*GsJBu%Ge$7F2$.[&f(.&BS`./L,@"W=aHf*-kn$0X.N22Rea`?)'hTqPd6L]4VA^+uARTZ(G@AEYGG^+!$hIun(%.BgNoe$\b,U#cW8mADW1G0K\m;0,\W.]GkW<E,o"C#4?Pef11?<qF&^DO6hGbuT0??iHtSa</o\_`,"$<W2$Uq0.;JV0;m//$/3,%\(.CCHF;FPX`a2P;8G"f]A<7,H?hLJGeL/eQL]c>@Bk8S/Y9AD.;0HGkMi&PrQE5Kr>=7i5O?&"f5:H&^89^_l^\NE*!V")/0A-a%alA"OnTX-l9E"T`]@3d&SskZ-ZeY9+qWlm/X])-SCT^Smo7j+VFU.+Dr[@'LCoFN%'NILt@IQ_;0_E"lgK4GTeT<?^\:-]LqHm%k%^R'IIpJ6cDZi.tO4astT19J#HVbd<p'5,Gq](:,Q5$mNVZc5oK->?kMb7>[O+6kL5Cqk\h9+;3$csJ[*aVDP@>/0AD=RG7o#L[!/%mjR0G=Gm(25P5dj&N_suX#IaNcY:U]RVV%+a!`u>(*KL>\9V/"o:!YBU?$/ioVPNI.Q<9F?kZl$2QY7[XP$J:l1\+dC!fc-r1[o+%7GZC6?IQ%-dmL@8[Sh2u9?fQHD`"5`,Q2\sIlqhG6Dmb#LoCB`Pn/H^'r?.ob$BFD"9r\lSq)KsQ<0440YS"SP");!W@d3`=*=)g%omc'^rokQO.I]jZnY]sW:Y3RXjg%sflhJ5tj0uU[hs*7P>HQo6r01c$/^)",QA)^t$YrmG[Hb0a\ld!qZ&T3An7gLn>-<dkn2L9%%[E<'^<A*<qjYD9`/n:Ge'u-kO/IS2R<q6'%Q(R"Io6>OCg`q<,:O:paYV,\aCZ1fQ-e?-pGr+RNE(9U9lem`k-dLJA"@%fc_OpT0%B7rLS-)M?bN&/>C3,e^:96!_Z-W?6+a'(GUr/#Qr<@mam#=m&rAh#R$n0^HB1[!0WfQh;g4-&*#,Hh=O_-/f_r/!#q$M(:o4'jZ>%+)Bj5]G5%Yn?Y)=r/%%bG.dhLP=LWZp_.H%r9u);,'+(>Q2ATC4W_D$Hi2p+)39iXNjY6l*aO$Q4F.u-O,NnsQG)tN)VuR;K<t//%'5*(ro;qalS0.aK>0Pk`5Ge`OMa+HVc7W2f389W;VB#?Gh!OX9a"&4?iQ.EcQkqlqnCEigcD+mLF2(C-*4`O&hV<AB=Ng$$>Nb2F%HiCo-B?=\%ju$f*E!o\B_u(HE4$SoZGg[L$Q:Ij'pR/WV^(9uLT+6+ePOr7J4Xp^&J0XV5M,+B+nAaaQfB\dXjX4&.Tg/<:CIM8$%d5:hLpn.R'#(I-^k<HM/BlZf75QA!*rZ(j^IiO5.4-%q%,Q=dJo/FMcr+BMl56q5[T3S'fiKE,Krj0/WT7d1>O5g1JI?&)u5C$Q1%ZhK=VL\YXRfe>:qlJUS!reHd'o*P5BI!W"Ejh<SWVGT)"l'(jG\1FM:>[d,AF5MVr4F>t_(7q#T57QrAV#4Rs.e2DMSur&,3/X+f%#,kbB3]I2.G=Ab?h,F>NlfE(7pDrk/U?\Hp>PuhG=(>r>UJ@MQ2aV6_,i%h(CI*A1r&o+`if.2jYLta!.i>gob,qU5X,=&o'orEp%^V%)\cYD75BLg_]O!4:hBO28sZjp9YZpW0.nlWSDE9?r&>Z91c)2:bGqPI;J<oK[cDH1&`.Z,D#e:0OW5BB[U6CH/pV89LOUr7UP%E"pS9roq!CYE9iE0M@<l2,bQEn6&bCB=T$d'dK@UBLSSJY4Fk]acHqRF0R7n^Lis=82CEbC3ZckE)n)ee9<342:L]qcmnZhk#KkP%LI>@Y@[*8^W:bd,]t&mK/"hO_EN6M9@cZ)#[Ga,\1B/Y97Ht1[-2;;1q+1KlP#/D!]\[6er@lPjl]("7r`6)6rek^s:]Mrhl](l=%X!UK@^Xh9>@86iID9,VlqM+/QVRF.W89O!&r1EhGEbSXE%;?:1P?^1NOL\Lt)ipIci_a``5A[$["?/t7eX(7;,Q,`kn[Q/7_L2e3%*M`X=RZ)=FZA^<2')3W8F;agemYtsebh!2gCIU^0aa+5p\.RqWYT+"0@*1;8FI=L&ZF4@+H2kP2W9$0hKn#)fL4'G%S!s(^0J\%0%Y*dp(aL#6HH<$9CFg9eTX(,ZSf*n:O<j;hs=Y*iSP#21.mMDKQFg#.iESXuSAA8:Zc'p_,,<I_88\RQ>/Q(')dR8:LU:'GU5i8Tc%<?CP?RU,5!qWD"UTH@nHHi6=#=0pEcA2j!@ru6@H6!?NX''!,mr.a!.X],n!_,#O6q\8s5LYBP)4oXEh]k^Uu3[2:qVPCf>-W(6:%Xl41t"**A@\kAOo^Oa&0>`7l`3r1mA!\.+s,.%id[r)&E3aOn:$GV-L2Cmb?Fp7aQlCoTAQA)4Le2=K`rae+o/ZX\1X(:HEBFPr@%oJSpFn5DGVd>om!Y@'#"^%'u@=[?&!lJNcS"T9M.(=.<?R[(\;5b.6*UkQ;_s+(cT<o=bW3D8c\T18^0IG<k+etuHX:X/%,UF*gF%;]A2JmUQKp*FKJJ!Nh`&6YJ/g6YJIOZMdY%gO[*dd8##AUP2C0i-/FET!@o>;*Ghl"*W/0r<?S,Bm!h?K#Ri!f:B-/0Ju,mUgrq!%e?k+MUVaaULNQcjHld.3Bud>$c:4l;[=dZ`gEm<-#e`]n!UKS#\a%LO'<-\d-MiHs-]1?=JsGG_Wd8Ha;0tu2r/S/ebt[@=OXFBC%<eXT&Q<(lb3Ufh?)Qfb\bGiO+:da8_n8*Z!3fW%hjBF3_C[9_[W+D3u0&%t`k#H=_KLb(A4ERrNEpr8tc'@W4[Xp\#e=sCn%XC+R%&=SI:=dDMs&aKR<Q>DE:n"r=8Y\(1P:(-hPq0u0j7_bYJaR3^Grnac"X(=chEg]ed3NELh?,]nnhB@@SB8rNtp>i3iaNH8MnuBBA%,u53RTknuQ+57@1<T4c9]qWLj02ui2nQMYf.cdT*#QgXl8)n"[+.prZN1_cB6KC^;YVd9.^lFAMW(fG1U11>R'>7!_'>C4*q9]6i%=QJWJD4$8-HjhT1a;&5HR4?YkD$.1Tats`ecpV\8'X^c@M%LVF[.:FEdaUckrg4NAKW,UEdJEkgRLm`+pXrkmM'e;b,$p*.KY2k(%$%7F`d.7h&_/Irc/K@"JUGJ>>YLplrlm60!pig":ioR\BRZNZKB&`pda8!,ao+h!YgYU6/ENAo`r6=-p^XG->p!1SsmgIS,gVYAf%IVRf\>jd]fEGghE52`KD<qG?gVt$gURot5ShUV5<[E`92j/(UWB[>g0)1Tm%'2Z:?oN.U,MRB@kg!o`0[W!2ZGQ-go:]8!0%uZ%t%\'pD9:;(j=Vt[^QfZJ->52)(nYKc3f5JHVgr\-bqQ"'^lN]rKfJ]:Q>.G`gDW"A?1^")q^lNM#NpAeS"2n*+r]t?K+DUmSbTC1`#%M##orM8/AOZg(2c<=b\!O5BmSf^bZd]B7:8q_d;$WT:S?l9*n;e5-*YGNuBF>H?8'2-[6sfr0#!nQ5[cq'HR!0<$fMne\^b>?]Lc%9Y[/;%j3#@cN+oQYA\[H-%GbnH`PV74-*CAH(';D?YYR(.o58UPGiq\ImK]\<>(YoNLI>L(hM7,\<sE4?2b&SLNNN@WOHrF]ghV^%#(=QGj^tZHEj^spcM-">l*0kbcS+?OVbaL75^H9raWKUYE@BlcIf#<"%Z'K5]ON-Xrph0+YRA5DJYKpN7fFN[rE[N05j@Bs*$4FU%I)qRtJtI)Z&p+N]df<fG_=2crn[S9j#:ZQ:*8fk@cKF,Ig:=@b43.*+isia:YH<7%\.?j+AF#Zd<>]8G</&(r3P]8+5>_gu71'\H%(M!,u%C)J;/U<ss2=]/E4]8'+qM.:B*pat,+6p+<I`g"7lh.(T?S@"KD*?^'FR!7$(U31NX&]%He&2OGQYP>@5.s(cl4'nkj\%[#%)?3q=dJ4$D)S_i2C:%pZWjUQQ5X%r:Fg1_9WdiQ*5.nI/hG1$$!86@H@O1?fVuNUC\U1&lIqf2I!"m&$4!ZTRVN>&0iBKEE7^J46%A9iVWc26]#6^G9.2+P%O6dB"4SUIAXIB),:e?^iXc^"Fc,j7mNAJTEiqB+j/SDO37]@20+cYBb8+!3,CCZr4"blcLYPo]nlEWK\G%0,i"5+/H:BlgOj_C]#7iKD*L;rVq%Hlm3,%94-tlQfP\@et7CUAs"^\k'pD<qcOLok4SJt6g$2IZp_n5m&ZFXe+kB7<;u]sT>nW$%l&u)=1dG_4Ra%(2gbh1O"RO`iFZ>@)bH/:Iq(FGsV!1XD+0GE$jWFHA/O%g`s7?k/l^c`33'bBA_]<b;'+Z;HOG1<Bb4P2r62fd,%j#%pS)I[UMXRUBC:O9.Fn#1!XO)*,)5[J!he6Db/<kVf-j9,=Y.Z0T+##t0.r0j`k]2NW"r`-`%1gBdfg.SPf+(tcm-0iYmAGum)%<U80+GIUd@63!1lcOBl$c&YX!2b3aY/>fUdep#pI6,!5as$FVJqB(Sn8MfNWF=$Rtd7<@/RS84Ne-sUlkNq>HXj14Yep>EpA+!E)%bI9SBC71r:-J)4*lue@DHIfe$R@n1mIfPp:X4+(+g2Ak,`;>%Wj/7Z[qrrUq)5e0jhQs4=-T/8Q`&b$8lM7XVIs(=O%o8bMh:'PG%k9#2E4Z;Tb^\q?rpIFUp4b)77o+kQm$^pI6-XNA_om@!ja]>b(Bf2MG"fitL^41ESK/k+eqA0_<2m>Z1-f2N32ZKedhCtD^l0sM^%dOgLbheEZ4OYOW%g<Yn1g2G7"b\Ae,U2eplo7sfQU0'0J!\;dkFi4&NIf6%joQe,S1u8(6m1&4*IX:s;W<N4'-Eb)736^O!fm9S]%FAFi&3c&t+?`S4.NFkGXr)84RhJCXN6'Tl&*i;cR<@Ni+q'*"7K!LTI*&WhPg$CuD\1WuFFNteA6e5ooc,6ru>.',5A7=7)@9&Ph%I/'C`j@A",_M:ZWU(;rhC@h3WKa-@UNs*Xuat2G><;^])>&iZJ`8^(\;N%149s,P]k:)s"i+J>3g-oO6Qt"fg-FVc8X2ojaYZsT^%4Re)[O&Wbp7-dF3__JNo=u,$)WRQCu"Wm5Ys5Y]4-P2ecEuo`nE"J8D0('r/8Zj<L,`XudM2[H3D#2f`2"/:klYc3g<IBLudg"BL%-oP;EMlD=FFoIR%QhXbOqq=^!CTD*]^J[NrQ/5j8s%2>eY&iK6Vi_\YFMMEZY#.-urI0/I[W/p\7ih*)l46&Cgp`_ja[?'XkS,+F%6;%qqVu:Vubt<n\\!Qquop:oJ[#9-(.)Mr`)YMuqV>a)V2bJ7g6e`)"F^A%3s&u<nmmQHK+);D[QK1$Dej>.b!P0PN.-4Y4H7OaJ%j#CL8*HXT1#7_K;DthKt("t*8V[<qVrIBUCj66X#H>!=>4rX0`'EZgf2&`'i',[OJ>-\o==ApnTiJ#XD";8(F;2]3:eGL>hR8=E=%%TIKsE(H2DQg:n<g4P=aoK[pK;HT!Z/PL?"SYCC9Mk6tqs8(&_MY[W/2EQumQH(E%6&1]t":t%!::=7+O"n>T4"m2I,WF*=-bXeQ%9[jT_0Zu7j&#d<N)OUj'p5lh)Ak`42eOd(3:\_pD:kQMDfkP[m]klDGHHfJuV&^jg8,79f)V*:uB`@kYY'51lH]1qiU+':DLO/j^%GGCHV6<KA9p.e#NH<+k]H:kMnI_Aq^m]#e]9@9bAQ0VrmG'$SD.0bm"1/t@>,FpoD.o3b0Dmn"SmQi8&p^<&!A$bhm@H\N07A*7j%/&>#5&\ccOHM^X8?A]7]r^9:mooL8=5Y-EWe]dRm/6V/8j0*r0Mta`d.YopuTs29N5P-lGOJg+%'`1MQ>10CK?Hs9Pk.=ftSO2,I%;Zg`soL"AU^5C!.[hWrFHe"G4KU#[<[FTYALI[o/Z9RU_FeqrJW#\`Q$/Y#QlW;OGe0J/>^uLtG/"ROJ(\Kl*hmEpoZ(%01Mkf=%%g&,2\%r7!0<)QY7N\T$LHhQO>Da4&K1lRHrHPQ,XEP!H$@DMoNbP;FD7)Dl.6'g/rJW`t_kc"g\Nd'\X2hS14E;Z89OKi!dq<8>f%B-Tif@^Qu%McRHM*OjI4U5Mq8eDmL@gUtFfV@p!W3qE1nAGjq?j5=$Op`(IN_rhDiGi!YT&sg]e8B(8No$38*<pIb/f]rBlq9tpB%4hiKrV>5bSq:3NGNk];JkE@4Js5LusNP>1`YC>kT<.;A^ceB+?Q>;amb12CLXZ!rl`HiMne[Lmc(/*+`EeUdoQ06J'Z\RGnZ%^4G%q!.%Gin41LdcoE$_.@1o;*!!fddkosF`3;*B2=JpeinW#<M#3#URs(5L8-i]2s^.kkJa(DVL>-g&&G`tp2.L5/$rJ1bBN7[Dhkr?%HZ"2Lg&?@rX>[g2kF8TCDbB+qp$-=8H%#KpSQiQBU)/7KAA5]9pBCEJ\!!W3'.W;EmNbW1X3uI/eb[ep$Cra7-mdo<V\+lhm8Q11%g5kCfPk$N);U7j!Z`W[gq_PVHI*Ad1ND7g=BjE47`DYID17\)7J)KA<$Tri;$$U^EqL3C)'&Vr>rPMmoq,*+<oZ-%OI]a7H2X&Y:%g=n*qGPZT$VU\]TXnYYPeJi"'>FGp\bnYhJgX?N8M[>rCO#+3.X3LE7NN5^KWluL%FuirXY]>Fhqoe>7gg$-0f8E6fVq+8ppiLpI%WRIK^f#5&(TMq59eEtiHg@WZrnM6EG2h,S.kk'+G3^R0O;s37n3X&j&gC1:M'l`_fD>+URSaBb6ijH%=:nEG;NFitWrV0Vlm*pDC%)Xdg"#+Wonelk;8$Kh_d<q!01[&(fdg0Xf^-[!!0'Ph#^2<3lrH$lJPD,7S!3c0<C<"$#gX4Q7h3`W3Jk"<uLoFbK\aj]k4Vta#H%X7&[Rqt?B/R>tA'T*io@o@(3EEs6,jiSuV#Y1CO5rV,#C_G&!BXnLN>,^)6#7Ga6ngoA%GFo\)eDn/2VY5@q4Q0@jTE@0,5Fh7U#%cCJk04BFm+rO/Ti?Z2BQS`U:Hna6(ZrB,(/;7FqJ&*@%kM4Le4hj2k-3k_+b:7(6_l4eLp6K#PrS%XUR6794je(`DKM4G^ED!u8[%Fc)XF\1T;pe!Ef\J]IL45#-Ub4ZK^;T'r`)`(nXe8m<suBs&"'f0/6n9j^QWFER<Ta2QBtfM4)#n)iUj"eCV.hVPDZ/eSG;@jp5q%^<X`BH?f)ZcXl50>\p=q42hlu'^\Qf>[NQTV_4/oXX^e-n"8W%4^+=l?*C`\O\VSdl?;dFU6RuOB7'"):tb#,CZCtfYgBJ[4t`uI%lu]s7BT=E'c2RK_]`kB_Qs+ArkPB8fbG=@ofq"%'ROR@Vd%jFEl'7\(E2UZUqtKL]G.JN4$G?]KZ!SK_RBW^<kut\l(#CcQmW<S`%F!3m,Z1[D01jAf0Za:Yqn*Ja*VsWSOkQSOLFfWA8Fj]'<q?*9h5GF^WSlTJmVb8DVn4^=;2@<BTWDe6<Ck&'<`Emel'A%*mmeRb^%<OrH`kY@+EG#!4R;lr\S\(:!dBCc<*F8WKd%d;uSZi-BLf^D%>A"T$WS,#gr\'ljBXaN;DpFWI3F^_AU0j2>2j##!R?,NtKP:D%=%`AZc2O)LU=Mu0s1ZB)_<RuqXfe_fe:*-LA4*WPcWeC`L&`TBb/\"-<A41c0npi#nkn%$=7r4Mifn@`sk\@1r_Sac%'YN$r+Hnk>!%kO=u+=]0)[L1:&&Uq`4Rh;;C7B=7'MQ%X'?c^^=d?`Z]1odR>a0m>A*HJ1o7H@+VZCjj!Rs7Tj6qIb(ST8imEn-`@Z5OI4Mq1S2i%s1IXaP*YV)l[*^C\aICcHhI?iqGLPYB4E@`II>hPmd?ukhp4H6)"VV3;Hk2LYcC>0X'ZoK46&j(pnrTjh]Jcrm#8u6>IZY<31h'M%>`JWheQT[MaVFHUPF3<d^=`Ct[]smqZLNh0Ft'-9qX&'Fm/(lNp=kY#9/CXCcXT3(gFeB"pWKmaCDV'"i9?N9g!=S#id2mr[Gl("%rZU[*D#ZUMqp<QIK4ZmE(n9:WUlI$+^0HUKSGrRoH2I)RD!$';"+NC%r)k(Fgq*_skjmEha&\LqcS1g:2<ljY\THadV?)]`ILt-T%Pk=:JhsEhrC&)W^4M:2YJ30U3hJA0ee'#di!piT=AJ;^3TqhJAI:]X(2u2Q<[ek*S`p?E?VrQ;LMi!uSeICgmTi5_.:f9[\F;o<@%lLa@38uGm'AoaeR>HKEj;]WOZWEX"^inaI@nN,KP#o!*Ggo59S.?jL:m>KKY_pm1(cmeVXl/h7ckVbb8jL2Pm:5u<TjA*ar^Qjm[%L:\buOO,GL8\bg[8Y+EF4%4(893FlW.sWCsSYA>hQ:0S`TMtP:_K4P$MQEhh!58Y[:VVa?3;e$B<:=Lp*g-DSRc?o]@i=R>5&Qu#%P.&.dqqCW(mV5.3iTZ&aq2K"`OLZH^/#3-R6\OtXlV%0,d2/JG_1MHeW^u(fM@Ul51`!gHnoQttl>c[3/B1umZ2k&5C9G4o4FE,X%NM-0.dUTsg^`O5=#BQ"]Q\b@NGciR^gr>s9<mnO85jb\TC_ifgTG[i]>6M7-b/[HL?552#5B[&p<d)_SJUS^tKRedofo\LOb5BDQ%^+BpnUANNp0moKXbOmS[rK4`<&#pWf<+JOrVhq5RqSDgbGR_%nYR4>6/2juOs3[>"o](jga^aJBWp]8pbqE.[B1P7%Q^,&q%+\3]%4o]iTC],"Y"MZ'#66>Ha+cQ-D>WT-qYM[oF"6S#JYu2K%:M0<*+To=]`);%Y^L(U7XFRL%MTMC=<,7]HgO2p_M=.3jPD?%5>s"VF%\MRba<6s)],H?&JDp!!=#QF)-W[Cm3\Jd[je]mRM/\_TTSq($l;o0uAQ-.@@UJC*!8@L81O)$c>g-rVJ7*p:#C-,QJB+q2?:O_$P%mqZZH/&nC!RHRB1.@-['JLL3Fm9)+nRE%Y#R[p0U`N.CeKt":SkV8b6%C:=Y.>B[<08:W6=6diFWN`QY0@S(pbr_',O!bH-QsWKB%hib)5M9e!d&gu#'1fc58B4rj1.?M,;%!L`-CI[Eg2ST3_6130tN]=RMod_>ijhg-]rt&tB2WEEL:*5O$:@sdf$]70%(8N'r$uaY8%&(F#(-p9KOQQtN7:0r6B(n(*#D1$DKj!VCA0b`T$7@,:,QaH>M]LA+hSj$qdlIr>>B++[Cj6:<1@Hur1L3W5s/$)_sZ]m!4\\?D8%8,qFE]^3Pon&Ee4L%?hf*0NCT@Om*$A8pe+^W22,+fu((can^b/tGhE[ia(u5(@5LHb"7Of<=;*.c'.G@2aK[Y&1%s.p'gG=>/Hl%2QkDu3&R#?oDMH?nENJ.Z*:)GP%%jZei1Q9A4nVF[W-T#(^@.t-n:_bHcNs).F+"7l)aO(*0NZ.YK)*1-b@p?6C3<Fmji3EOn]Jc%q0Q?Crir`[#>jR=h!UHoX;1lk#UJ7kFgAnKTT/Fm];W&Yr0fL%O>*#dG+]P4j<_]!V*Vc85hK"m*D.t:OC]P3hf9j.oFcLh+<EuV%:MMf=6u?2c)Z=)bhU;$`gn?ML5F6&Ir/2QKSuHi.lQ@@LZ,8Z9>CEH2"9AN?2P)n(>bS>e%B'8S*g9"[cd%=\!6fA]?bE!j^X]0E%K63:>1(q:K$%.G#nViPW0?<prn*NVf1e\&SGpS.`fY40%3g28nT,m$[3e!?F5BFM>YgUWCieam0THkeK3<ZVDA<l\+\J#Qoe77e3%7g@K!41_d<(%A")8QmYGr8buld3SSW>nI]tEX;gO]g-RlOR-lC^O)L+J!^A-R)p9'5g:BhKQauOnc7X.f3P60I_Nl<&n2JV-a`c5%+\%ga&Z*r(h01(o@1p[K^"g'mM1HqkCOeH;nX;-Z96rB.BaD?!GViP0]@)%'=#s%Q>Tn_U/_4=oA7@gXH2\YA-[ALfQR<cIh:l8g%%-h7Pes@Ob3Z3L]lpYdL!.;M&1.L0lIc[6MBRTQTTP'Wg/tLJc,"?Jn"n8r*]gV5C@"_)^(?W2&?%O_fe?SnW6bY4sr`Ih&c-FOg%cYpV#/l0sX/m[bZS.&#7kkter^+Vt<gpJZ$2-turQ*SI=o2p=O'cU)+e]DCN@r!/Rng^bFMTM(Upj0C_#*OCn-J0!0G(u;JC?6c\%Z^5cS5OJ)WpE[Bndo^jMYV.4>g)hSuI+jBC8h:q3%Kl)C7h!\YJJT;Ad\]h2*ab'DEVVI:.4+^E=,=cW^.+TMd:d1kCUBlC$-:*l%1g9c:\m(`]K9'^tH.0g?Po4e-YVC!>:T4a6iH0HLfftDDBEQ?T=oTBl/p9PJ%'S((7^Mh]mG'%+SZO@6c<6"V-^P\'3XRIk-RB?j%LUI]QI2(SJ'LS8m!5(''3Rj>ei'W5T=-r*,5W\e.4=k-8P4^'hrM`q5X</`]ZCe(-YMT+?r=B_+?dnI5Xt[58Jk$=5ZY>eum6hu*%^.&3Gn_+lW#R%OJlNqb']_?4i=`P-\o%;b$C95a[?^`QO&@%.t27sdG^CN'`braUqi=I(TX<%Sif42Lr+Z,Jg4so"#&@-i+L5rg/%@>4!1_csC(r^0ko<pX94s$"qiY_>GIZ&:UA5-C/UTk?HTXC8[loJB6Yr'24@)FeNd*XQ0ZCn^'hlg2e[a,t?7QZ9GfYa+e<WSeU_%U+ZN,qN2%R6_l!,9TN9u=Qn^@B(0n*SICKh'$(KQ/i7/5MCPFeg+^JaKrcfHg+j6P?"T>m[,"Xl"cSMMT.^haI.-*;d36I:.<BM6%nVS0\@Z4I$8i01tn`3*UFOs7gBaH0=P4ANOoIPD'.5M5G+RtH7kB(O)ouL>TRX1$`(27(Ng:b>B3glDG-cNC0PEU.o_CLJ5*'/P<%g/rrb;(e/4%c7=Xi!EE"';Z+i8dc$)#a]Il71:S`)#-pP9RlWF=_>BAg1(MOInh^SDLZKM=hKa;TZ\'>P=(\.6._AV1ggf!H3PCb%fAUf7dPL+8Z3C-IThE_)$YKhWSjSj96'j*\-AO3:K.`<=3,f@5H3RZX0U`umoF*cAh(aL$](C<5rA9*G](?Cl3=7]=%UFAbSaa[G%kKnnn,U[5l]u>9OWFt.Q1P+-6q\i@1V"],6ea)/eo%cuoHn!2')tIP,nPkP_U"L[(5c<XkcB9RDnJtCQT/>kl:>K&2h'^J01+%Xu%B*b5bp\7W)>8V[8jMCQ8SBF+2@P<#K9_?D<:@B>PB0Q"pK;B!U4(SnsUO=K6A^`M<$^+VIcM$ms5h3nP&=39j_]V0%8$b.pB1HHq%M>E]FWpB)F]'5XL(-W&X?XV6e0>g8<]k"VID4;qGlC$uscr#n/[KOICm-Dg@ZmQ9uVYk67[ekJ2(-[<RR!!1.]OOm"@.K]/a,E'[%2L_'C`'FI<\^3DH],%cBQt4oPMQ+\WbF6<#)r"HSp9Guo//gS8*B9SX%[0"k`?c')[U]!s,U`<+AV&63Ku?*XlV>#Qd8(fjqPsuZ%T<ims8j$N5T=G;\<lq=T/"P5HKH[2%dW#kD(f^&DG^ns5Xe.].lO8._H$kVDG7@7<OiQ'0-RP6!692]QZ.$^+3%NYW8BsonVm3I+%)3SGf4]"dY'MI9il$JR[UCBi#E8]>cFWGShXL'5OfRNt]pNFjc7Nq&REQaSo\Yur-C*6>4M4'E3<W:B5\iZsV)*gkJ$eXbPmA>EI%KQfgt)cu&u__cpY=L"en7^'X#-dY7VPoF[r\p$W,0i)hI>Ar3`9oe9d`X(<H&jpuK68*ATGqRk9Y<;@4G*:+2e@rE\MIA_iVcQnM%B+1X!qKSDlNIJ_[>u8Z7PYr1U@^JmN7TA.M%-3JcO:#..(;<#!8>ja,<cLi0Z^]85(fXNs7<`ag/Dt*lAR^3sR;n'NMW?!l3a5r'%R?SlZrE6D4%(g<fR9lf?1F0r9$n;&@N`C52*Jql$PO;Wc9U@%LZ`<GQ%t@2g2a^!QhrF#')d[`DM9(A=)Gp1*LS%aD6manLOZa/U%s+j?B[\3L]kQ,+;Xh$8c#KtHZ-R+`ck=<D]3bb3@3<s5-A`DceV^0hW\e<8S:<%UP)pdLp^[7")-ZSfQ9g:@o"__ihDJq?t*L^0e%ak<mecB<pj4PTlZ\VPZZgWO\\TkF4(jQJp.[U?;O])Ku1`h$#_bBdJJ4g-KBEN,AC]aooqEaA6/WanlMG#SuuSsYNX>DKMPoFkAD%k]/iDml?8Q3'Il%,:l$#527:L+6u-50)cRWW:Su&3h`!&+0NWjeIgo\O\Qs$!dj%H`P)p@nU08fq/Fa1:u:p'B_11lhE-USNAr"4%_cm13O:N_@MgV==`;+@,==dlb#9t[MDU:iC`N&/2Pke!`j;#SS^1ETdO^4k1#*]"liR@*i$"Z4*fs@6VPJNZ2Gd3eFGj]3$^->*S%%%CbQX`WUcpbVEQ2;22J5V.6<=ic&l(rgCR@1$4b,#1Z7rS)h]1VH8@&TuUF%I_YjNL_Fi:4aN['Z81bWr^X?,MkE,HN[f&oequB%!E2'o@[IV<;EI7%U"ft\iK3N>iHCCYe)T>_Q$CLk)[jDiVUsSLjJKNFeqc,PO2S9,XJ[S>#,nAWe;I17Uu&bF0I%;N)dPquc2.c%%;Uoc.'H*mXnUlPf<jH;469@R!9dsF#dp#7eN[>N*op_)4rADqW,`Y+@7fnkEdaW^V);uNWQ=^oD`,KFfa$O<pCPc$#6p3HV<&jNj%HCj=,:NCtb\>46bD(==;EQcS*E;eb<5uZ_dmi]2YrEE1Y@\X8T:PDH!O(H7B?pCurK#mhQ;\G_>#:0.m,CIu_],K?1eM,t+$Ql:]%HS@ee)&isuLjTIMk,o_Ra`)a!$fPpoEj:jC$Rb'"!bV7N`TZAh1*eeKL6RfFV!)KNGn:R\'>?=VQCU1jO"SM\IpN)[/)RAiVe`-S%`r9T9a7AWgf?1Fg/!Mtb],-`hqX/'/FoM%!EqAJ,"i"mp6d=k9p%#!VTM;VK=4emrE3BsO5*&9Y4'\%lYqTUAFqVK![u'^W@l\oO%8c`.!.UQO/-+dG0At@o*Htl9.*F5_:d&AmRQYM"G8p9N_@J?WHGDb!e-[(B6CB%&O`L76KfL:tZN_N751n4V:=&&R_7[)ZtK$9RW%$p.rW-,XW5=t:qCW`8^V+")/fp[JuW_og<$A@L=#A@G,\\^R[EM/P\X?2*k(Nh-_q8Y(<%+n+CHH"*\Ea#5m&Wo6sKj;/SV^PU_3%53A/(RHj$J,uTfc-!F7C3OcAeTuHi(AnNnRSM94W,O1'h-tt`^TU+'Ph"NpO)tdTiXQF>DO/S6#J5`o+T&n$t228[6/,`K-?"^='%#?C23Si$D9LQ>b3G*?1d4`[gr<#OsJ\NZd->q\>[3#f/k.k!R;,9B&#Q[4KnO)o^o\jS/jIL5b_AN[$JF%AI_)TYVE$qDa6mnt,&%rj_=cdd6Y@r4(dife/r`($Y*MRr6S49Rk`;EB#(s_Mp%7/hWJCrr"OgACJN:"CpM(aDAGt>e2(6+8a^1:-<5TE&M!T/CE8<&S9G1%2:_:-+an"P`I[l%(:g&R]"!/,a]=EMRk?=[0![8gJo&$.3(s%[E21LOMi4tJk]KkXF=H[h)IYO0>V9=Wm-#k'l/IX[Xo:ktl/IF3%IC&J5flV6"QRh^iSn?'@Md*sKdniDCdrdV"o1n6FZK[O#b>Dm#ogQ-:Zg#&j_KVu=3h("`MY3<1(Pf58,L<6FCOgH+8"*-gf0F67%flV5G-!b0ALX)cTbGC,kfAX(#imPla4!UNAVMiWoMqXNVZg$J*&\9Q0,h[8W1:]l99c'-hQZ=2*n,REMVU?Xg(qF#?G7PK7@tN?8%K^LR=F(@pkb,d2I],:3hF`Bc@oe$H[Y:eA;a@<)!2qs(Se>H2$:OFOBA!)`S.\.\J+Yi:CISeifb+oA"h(I:q5K+(g:Nu/9aJ[?V%Vmq?nBc8=P:A(^:)p74K,GLR=kL\Oo8VfB=SJ%?SXB>$^GCAPR`F![&Ia;"PQb<?6mZKHODMJ,KXOl7(A9)6SUs&C*nFZ=oihF%.%-a`aO'H8s@-,VTa=X&a8rEo;_(f<u;kUoN2;E=-54"p?1T6%f);'CA\CjmRGc@*Chl>:HMGo!GR-^g-)HQQ+:W@c@'S]gW5Qg$%*%n>CbZ1d7&)a)qR!q/]?%k8uu6?-fjl\P*lqabMj]Au-YZXH=JHgIhtR76*BO%9oVQ]CUl>?P<lSr4AYcp3SK!XZ4+M$IR=!VkZ<_%FZR[o:o>1,6hNFkI/KF5pj-I7c47N&6EMNI%QmhVYFWL'?3hiS42XZ5[1^mC8X[H/:NfTF]b>0[DIAMPf(uQuQ6bX%C,t*BB7DES%2HK8<jl%N_r7IC&l"%;7]+R^2V`kn?AVU(g;k+-cen1[)W1bbg8Q--FSp6"dX=r0gjef\Qh-c&IEb$&WkKUq5L43[JrLE,HU#)2u%TB:lN-d(7`.3<03RbI!ZT/5FIX0,M<%m$cT4c+Sn`"N`EoL+EtGBhO0Rd3RVR""LlR?CDULUuFsaKLQ;j),tom(2.nn9_55\`#0[%)lGdc7ZmLKR30gNGs0(no1aKTa\,7;j0%iR`P1'<.k`?p7?`/WE7a-af7iW0<pq!qZG+j/&#kL5YtH(g84Kf9'5MCD[lnb?F4h4B%CZBWD+bL1G1mIeqK#HB4pUKS`Ic#4cmIV@BML.hrZnm<P>&;/>k`h+HHFK+9?9%aoNV#ue`&+?L^@L#g,l0+*/,F=10h)R)LQ6.A%pV%rg==3)5A4U1@D+1[0fS]>qA*V2Bb6H^tF\)`(QU;k7P,.Y(;j]U='%:\JK&$[PQ'gd'22TGi;n-%O!Cb=u'm!`B+_RSdZ_fHg%EX^.1`JA#[]p+F<Ce7+:n1)g?UiR@Nk.#;64sn"C+nhK"r.ap`N3FA-.-lm&;_35bj+%/@Caq>&3J\3pFag+Kk!J@hK#:siGh4:+%QRV72[mmu%ID]#0lT$Q;23;.@<4uRrld&3[X-[%m<OKUkH='b@X'D@hXa9ZJnnk_@[_?U,h(<OZn&sgPdN0Ii4FQf0:Z3T^4:tkV%gr"=/p2V1?&!neSEnYZY7<^+Pa"f0!o&8^qh&dphiL,aJL!O7'=XSt<[ZY_3g>g_=;IZOrp$9Uh>c5+6hnpdRM+'N)R<Hj2U+:@)%c4Xp#Qfd%#llpc'ST4J8s!],cDgWld26HQA;iOMg",[\A5C\!Em[T32iC.Y9$d\H+/bAF2$cQMK\UVl-?P>Mlg93_),^!:OldWQ@%brIns9I-jJH$I#fd&F>l]"B`Nkm;J^=l]l%9ecYE9dF."Ffg+?]haLX`*$lZn!j8L/K1t9>Yga/I4N>%oE;Z"n^;RS;ehhI/^E(H%*LiS^\'%3X0q2oi4[56ES$+@$I0D2iKHrQ(krn?o3!1@9:jj@<8P3ec4Z9%0<S*MSK2pkICkbL/nT=C/>)&l3]:%cldbiHPPQ\5S%RjSHe9'^Ud;k/Kb`)"V`Et3N)Vp`nRc!EaEZY#0/A0uWr;d'l2:.kaaNYD.90.H(kep'=5B4JjEWn?[l]Y7R2m`UR8jN=@&IV`WP%^.aC"dX1"Do%(<F>l>7G,Q677_(H6lm:Q.gfT48h]XJL(4Dr?RchCTR(g2lj*Sh^S95$$b0PeC):XjuU-(iW.&g*#O)S+=cdB)$T%pjW(0ZYGjhm:0*43C>bc@kbE]G\2t['=(kM(F%Ero#n2q6?Yc%Ztj7:bn-QN"C&Rs\e+O)&s;t,<f1n`09OKCoY*+-F!B:uk^*ek%ea5H=WgE;mMT0s0lHXmI?EPZik9,C9/e=rISC.tJJ73jJS&uUocW,!8i)&_Ub-RIA5$o9I1Ro7+G(6I18f>V`cE9lUXQS][rD9TY%rBAm^WK!'MqC!e),W=5=0&5h7#4aN?(1>]5_!$XC!><=+5YpjN)G*Zq9KUOa",O!BGSX\/rK;1$V%]j2A-&RjE-1K*%@@;9@?j66%fmO>gBn_;P;3*.aBGOuh8Q'R/]5jtcaYD#!H4i[g+:BlK8E!ZBAA=;Jdl"1^pXJr6I!shl2XmPjiS1[;?'k-$728:A.:;N_fg]s1%+(OBrdEj?4;Eif+m-b.k!A<JlMo(JQ;SLZXO[jRD?e5*)LU`R%'NMq7m2ItjK/u':PT$'2X5>>^%>FQQN?j^'AFG6kmU!Zte=qdo%".ZfZ^"4o#.MS(V2:0$c&[%)Jl8Rq=Tq_;XV+64POa*MmqB`5)\CE7sh,+(,l^*HlLVD@nrFC]u\Jja>^C6N8,Il?d1V&[c\\<J0%nm9*'WHI**3S;#ol*pKuF9>(X]mf2ZMEdfgs1NldbEW!,o)\:P90[E^n1NoYFg@kd,pj^*?JeTRqP>,lg>s3g]mf4TqXsXgWl08_%d\1Qq.HnM7ontmh(#8(5oR2*3aEc*\Y?uT+[/)#Wf.VP>768gZe@g=qM6eoSW<:uB(Vc['h<GfeSRLH'rOS'+ag_+lkEH0G:D*?t%V(8lW`-)T9Y@$W[NUK1f8fI\8^[qW[iJc:&n+@(MDfsn$fCb`9!Uo\S-_PZ.gT^GKV97L0Eq1XHoh40_mc-LF+l;2j^5m4-]SH8d%rVFk&LqhOpI>^)\Zu(<eqPAQ0SF\rB]mf4TqMcgPXk3B->[]J`qPEX>7o'^*HEU]PXaWXma4J?TNO8TXL45PNJ#hHtmc3ViV),ct%U&/02I]h[gBUIcHp$55Y#i4e/B+,5pYFj-IZ+'Q=P*OV5S!1p'IGX:Vk2tI3"5Y-A]mc`tHgQ6b?adW!@INm\>KM+KqI''ooloOJ%k$Gg=PMuIErBg6'bI^Apk<,TslBh(-ZbGl#9@.1c%Ht*,"5`@1IaG&EVDR5EIS&dD7PBX1cZr]_aX39?hs8l9XrR(?^Q@I?]%(_d%dt@5)Id%i7b8B=-Fg#/`A*EA,%XG6bH9uFUOb^R#0E"qd(k6@pHi;B_+SK55EN`_M+(i$0rPC'&^""bn]=*cIrR-ZmO"AT#p\L^*%#N7,j<b8PZ4R="96Y<sWIGuLB?7C<NI4he\QU8<kMjZ!=km-[pBo<QdAh8<9n(p`l`.$iK%XF1Gp+HQB1]]65b)q>4d1\p8&N2Og%4o6tB=IME%lML"F=)#G*C2*).Z+8boPL<oKBhH-"0\9$7^AYQ?C4=[0\*K&9[sC45D1$/t1HW$OrDFQKqI(sMSmG)i$I=^\rTX1=%gL@<nSaO8Mg<U<,^Xo',*^9#B:L3_aB)DQ)<.3NuFo$@RoQ%B?3qt\Lh3snF]e.RVrjafa*5*E>J,8grs)"me.\+dX[p&XhfQaaZ%//=Dka%s&!p@$>jh>)\kQ1rDPI?a[sUXEnZ/fg"tIG[(&dl*4mk!.Z@CJ%T0>u@V/0<31G7.X7.3]_Y)[@UD8>9AnVe*ZCR_`OC`%R)lX>H/G-!Fq1]q8]E1G:"_Y<Dd2Vd]+ZTX8+fu<,h@\?939i<b.$[4IW]paq*):iP4'!QhK]&5:TPA_3.3oY"@'H)f!#Y)/e7X<%j6"K?rV0NcS=;!5*`"hh?8`/2Vd$d^5>QKh%<q*QReN"5@@;!k([_1#5JS'+eb461B5t$GoGon/'0*aWBfTp^jf'ehcd0I$.(5$$%KS[*T"B,]0O%b=/HTDCje's?$MiIK&[8LY?1@H-*V2\2dHO\+-G1V26I6Cim[XK:C]B8[!eXcX/;#\0jYt[%)2Ql1$=fc==AS(1:%#(N,1Y:LAOW\`Bk46kshV9c\=q5ICmEH)ndpWr<2;S%6^e8D`;(6h_aI1^>o,bBfo`2CFZ/iTEqe[+ci2='N#M.m#Y9$&o%kp'#@%XU-)9k34,([HYjr'Wb.ne'MQPJUZ&q5C`Z8]q)jn;h"[Iqn;];J#ih6hNJ2UTJV,o?d-W!PRD^7(O0t&qW^b&n@pHq?i470jaWsp%?S"t?4F1?ScI,D:Xo7dY?T(]FEs8_\oqQd#J$g]4Zh:c&?s-'g"S5I+KV_amgY,0k3n1\,],q3km?;guEqcHj><5Lp-2TG(bVFhF%_jhFOd_/Z3n=r=RNE>SXO6E?PpAWgS8h`[_>ug&\#H,m/I/A&;^=?ht-(c_qMdA'Zm%gCi0;jNK"aB[\g*c!0;J&KR*Kq(I"MI9$%-T#%b1n#@XZ\m86>+0,SSj3,%Z<#80_fbkR_[L%[%;kgnl'UDiX(uSN[CP1$hn-Dn)).L;qsj1B&`I1B=?<Ri]o5/6"nT9*q6m'(%!*&BI9_o2X\ajd<M:.IN+!gR6k%sFnb6F\PPHneeh[5MJnDuH$!FX27W.6K(?lGZr\'M[%V=rXnBn=DsmJ&)1!CZA%'th'Rb0U8j%oITH59nFG@-)mI0.\4>,3%ktc%;+PY9cLi!c#91\DBgTK`//))SY9gWkseAAB[<sMf>^SqC)PD.k[^q:+T%C>NBY<?YjCO)B%-U]%rL&r6YHt(kf\d$KL)[rTrX\on?'p'lTcDC5A`)l_b]e!^+7aUme..FWV+g_u#&s7gWmH,D4!hkYgKS6;Y[X5CQ[_3&5Ci4t[NVYe%/^<;7*"Y`r[t-RM1PWJ`2WMULr]Z5+Wl6t@ZI@6Uk=(3=41C[F_/ecNq-J0JZ;Mc'97d&;1;*#J6l>LVf"CA=:]m=k:Se8=DAJ*b%iZifZEcsO"B8jTId![n^V2_fS1BD(4#J3/uhm?\2]Q&Q$kG+]$B[/[snI]MFHYPW]l&[6^:QI"/qKLmp"#I4aqJ]ki*e,^:AL5)"%(2Vt%*PIBV9T'c_R43TK..>EL?M<m;H`+\8Wm$)"I5,e%q;het`7Ts]li<SF0d1'#45GtaGrtfT"4,A_]tuELKH'Q(Fr56RVd@?R%Cs;>ChSo3_iqT-%E\,QZ6)B(dUs\61TaR(+.:&?OMWsi^ZUia#5#glj4F#$Qg@0*#1fD?nS4%tpQ@;=L!"FS4<sM-\/Ur-Bi=Vcn%(a=S%mM"Q79EOVUM,/_A1'tU;DKn7"/"Mt"?::`?4q*7??b`O7oOP>YWH<?k479e=,)llIJGV"?R\`a@K@\&mFZ)Ecqk,>WZ1c4?%5_LkeI6H[*iA-)tp^PhK`LA,B\mujTC4`nWHSpr:^j2+^5l3<M'3B+'7&8"Y^Fmn\DVg/=`bd5>+B^0mS%*6HSVFY,]=WoGB?4dL%IRI;\_j/oCl=I&HXpdb$=,tTG"%p&S^f<1n!LQOR->q[peM,%Q#tc]5C)l-='$$(aA=H'%h/bI9-D^oIbO<^&cH+/uj,crWr;;]6%!6]h+'@!f=UeEXkX`7]P)HX+.'?^$be\,5ZlGi"X.qu@_p%rq-IcT6BT<bK@A&9L'+O!hKH$qL>f[XJY\Ac"):0q4_a&8C?Hjh7&%F>nM]!2U8G_oI#u(mr@l7-3iS:l4obG\dOG2II3E=dCko,2Y7=_almHnGY/@7=G?bAU=Up-Ki9"Cgs#<WHZo5Ej^9'r$-lXC6Ph[%N/+<tY8H))KUTb5MZRSffM<X-D');Xc[]#7K*NF@m5]dB\7nMPgue<^-n#nZpY%7r%n])b``Ob2N'G\Xb/;HIP4urD>jqn#Xlp-t%rKXdEi%&YjFaqAWVHT4uq#9enc21sW$,23\4Mi+ZcWb2V\O&QpTPsV*\eoeq"?ZeJZF+$Pi-O][6"E*]:G*A/i8^5[D$)o'F^3>0%EHrV+/AMe.JTEj.=nD^Ka.,C_a88<*"<C_KY9&0jckBI=`rge'jC\)8YMd4EqTVbNB>*6L%]q#K;H?$X'Y?CU;D7m$UH>+55A#D1%+0FhU`euY3a=n<p%RI#udH+YPB]Vl9Ync,Fak4n,'!u/>/MEC@c_`o)/3hj8DsLc^)]-TJY-r=5pHq>dmOt1\E^Mt_<VKY\VnA=>%qZ0pN!3@!Qo=k)g+j1%:]?2])<Z=9$BE44iFH1k*pnht>jQ6f:k4=W-G#O&"5ua24.`;:sF_=mn<T``0VI4tukBTk!I_],MNu(Gb%j2Y*pV#/k3Lt_Qs,"7HNDHpL"dLd#tTlO,O&#$#XPCHV8UjU:8-dEHm/)2_mr0JTJE5B'F2\rahBs4%VhJ8Tu[jq9q[\g\j0\QV"%/K/Q(Yi8![n0Wku;TD';Np2:/%I\g\h`YnjN&Rd%_HU0Bm!`h%;!CL[jFtnm0aheLc[#+DS0o$eK[g%J9$VTb4muLQ>'(b9b*Thi%][U.UXf(&PNVl-2;m*LAUT.sdLM!qoYCE\SX&E`hJ%X>OSbuC"[!l38fl>5.rP&)(ca-sSBhQ7/LEO*,:YP74KK"L"<.;A^ceB+?%Q>;amb12BfjJ;<Yp$H>G$3E:Q2S\h\H#33DRle(Jp]Ot&r)F`+s&_<&><'-oN%HLa)Bd\5fF:hP*55RZh``^mX>]GR?$V6_&?[SA%XY7=-m]Prfm1j:2o0oq<r+;I;[Vif.oO^kP73Mi`^$W;t-LPdAK]^!M!V=/:r`kI8SH%5p_-^H-bq.GcEIPOpj3uZ?\pb'oT)(0"%qt.0L[b*RM)4SAo\nJ5R)%9CkUAf'e80g:,qYsTK7"QT8MgpdRU<:j+TEY_Q:N(kRk/]c(rpMU5A<'&2]aPN+D.#o/B5Dm_VHdR!%(:+r/i8h,1qR7:jZkjlA(#:#DT5&pi?u8'3?cjMb,kNM^^=\&nRmHGMMgF_,AUf&C@<V<ZN7^oq`L]($oGsFFc'rk0M4F1pMeJ]r%M+Y1"%"qsG`dfdr+^L>^gJ2li4)fkW@jJ>YViL<Gm9,IPrgJ;6O7;20aW$Gto\.rAZ)^tZdegtKNu*USV5ML3Oj2b3_U:P`e**!f%2L"0kDS^oFmKL=_E+!9!cGUL>MENKE4s<!<bOaSPpD/GX4B%.m4-:i84ROa!*eZ$3-#UA"]Y+=-EK90O-\3Yl8%;]g/P+#"FMJh7%?,mSk;nYfumOp4+27`P#N.gi@HNK+G5l]]oMsLb/NHJk2TLer>dK#u4\ZMU2^$Z'GQ^`'PRhptf624KMENf#]eqGt9<nNe@GR`G(%72isJ2G-j\C@uU?%JJe7n=`9?8$DQlEjeQB*&>SBnY]H3rpH%W[7X4bNVQs`&T_uD=[I#c&>90R:4-5rp+""SKNqr'm:*6\D&a*c%M3rR1gAmec!OiNjLS#SBB!1iXpq<F*cd&"MKJe0Ao\/`**XRd'5QVqMZa=S"DRIO,M*tHOH>[sqQn*j!%2Q9f+44<lieXho4$\nI%#HLM<SRCV+=3.Us']B-fR@*]H839!V'kKj,h17nH44@7E>n,.tGbG?*?0H\n_)HX^916?RaLdrd%:P',n,_hB"sQs5g'$4ndI/o$%cKPcoNO,HZicZ<U:FnjH5Lu(5[P]9=i&U;ka-gA3)e&#JH3:OtRG*>KR2^#PjheZSJhGJ>`mmm%p?*5IN$27n)9&#T36_B%](!UL%Q4!>>qjn":1Kh7daF72(De5am.FUuIioH+l%CF0b[Pn8)BhdO2pUaB<*334>Zhd0$lJXa\T5qXDnMuZ9AG64<fc^,RQ:@7D+2oes%S%Q=:^Q$3_`s,_;Xgb,X.RW@'BG9-aCSd`%Z+X7>4<>G8C#B:Y2<u(^O$uQYpS0F4`8A8-dW.qq3I;G6PP4!T(0S=X>V6L4nb6'E%.]sX@17`;<eJW5a9&60G_kGHqFoL(6].^=9GSp4KiM32QTU:dq!Pc<%iq:/M=5m&DO8T2:1lKi>Ds@a>'nNcg;eL?jb?SBC:7Q3,%?K33:Em]6<>4R6?I-q[7d&eDWS.-Pbo+,O&c-'J\ceet)kWSb2-RdESs%H#`iiO1?DN-nDN)q%Bk?>@?B)H_PLZ*<VTFC`#S;0PM%#q25LK56Q'jQT$s;<RZ<(]8M%[se!t*[uF[J1:!IP.rf_E'Tmk)ou@,'.5)GicK;Ja`\ks]g"NPB(6@qcP%#B_&I>#,36(D+Ob_'%aJ-q^Y'm$@.\``BSM(p8`SYb&a7m@B.sj?fV_Km4*6qKC]I7;XS)(5rp4K^!p';o;h;ZQUEY.Xr43*QXXmb/;hs70^P>@\**f_u3%r`'E;QgQs/"*ms4FH=,L)Y0<E<SK_cI'G(0QCa=<4^=46[_I@$n%L%)\kp)Mj96hr1l97*FSah>GVJ7HQ)W1G+70gS*]+#?+4]P!%8c6pInI$B#7X1kfj4kH?2%dAcYX$U`)%Nd!hbMSJ+IH?\.Z;pM,\XnK/J@6.XC5/]V12+d]6PDb0Ck\;s+MHTNe2O@-R(Y(9@9U*%/)n$I,k=P`<B#Ci>gn4#()L*Z3R.]sQRbT>(nBcZFIuob?QsO=gY6i&5\j^@o@mH<V^%hjJ_p,#=ig^=ic`6,B&c26C<.+s:i]b.%I(Wkko6-o.ql-i-qkr;nWHnKD^gI"R]6RCtnsX:0#89c)mrC3`2m:NhpD^Z[D/$]6WBB!\SskXBl_"(f(0r!JTC#VK96m[e$["\q%B4*R=/_#NYAoW=\(.NP<;tB8Dn+(DlEKjCZY,^TKU?sr0e&#HtgWVnF'JV)9q%%l*KjXgEdGK3oIuqGEY2g\/OY?4Ad^5`Wl#-JX%B=_\PF&Y:NgCMFHK6Crc-rY^.06.Ht\R4h<)s+h]3E=0Cj@n#TC6i_u/^#TsnBbsr0^PNOg4itA*u*D2;03Mk_9T_ArN_dXf(O1P%gj9Onjc.G`<.?Z\*gH$sAI?[KU#AZ%5NXS=NQ;fa\0fR^An&A@b;Pp(XhYcIeV%f[,eF7*<%K0*A*+f0W%'J/75*pe<;@p).RhfE%D(8GgY,fE@V@*Q>;/o8Ss&[LrMMc3(e?WOC3n?#"%D-Y<VIg_A.r7`+%4lOX[\;G0HH.W&Q=EjUCY1=D(nkR(D&)n(%3&K*&mRV)%<Jua/)gS*P$&q7POO#Uh1dD]^>-h3F7\cIKq]$<\QKD)-Tu-_5X/NUq6NsWq>$.F:3%%ELC,V"e*WcCV.QjN+0F#PtP2UUC4Jc1L%8%6#s2fpU%`E"Mt*`IW/WiBO_0Ql!TnlVV:#*-bS)OcSj^bWf-Z-7k)!HqOEUSql6PEgA[Ks/!4.'[0RY]XVG;2EeLdF;Tn:dQ6<%e$8C0dF'm"p_k6*`O0i9"H^,#4fB:+VrFq3XK(4tYc+R6LkQ)N=p@M[eoE=AV%nPX1i+R=($nfJJQZD!<M5AQ-n^c%Q@]LF!YHGI%i?oWZQJdJ>9ZuBMdmgW.M%73tM<hrds$a>/,1r@P.QeqS+en"!D.GmW%'>s-P,^U4:8G08SP'q)>5sLq)-dR';K8cl2-n&LFWc4d%Q@]d$;<U8^h*HY08.@&RMlNUp>Hm`PNa?pfWWQ_(,1F-=LB]lE__5-MW]1-C57=uZ8.X0(E/Fju'\>4AEPoWW(pH8c_'PD,U1+*M%CEPe<S3q=)^`4nl#N](/$\h[2:`sK1]$2N:/.=[SLuj3=F\jj3<L.++>QQ/_KOMTH1/2tSI!3n:D'$<+l3<N`(.njs(okKdkJ491%L5MbbfKnXrY)iqe(^QMhg-NhDXf5o/j'F=!*sDcS$QOk&!>a@^;*rI+6+#*;Hr))^9EXuV;rgdZ-qoPL,q*pr'?dUnPT&ffLIc&,%a?e17"bJ.b:.*iL=@!6W#"6iYY,)4VjA@*ldm*q).C5oQb=GR:Ktm`(JND^%#?:ejW$q"7TJ7C9N0q1'b#D=[Uh3G^:#KakAJ-Br%lYBFU%_>%>S9Z4!9NU2,@euP/q)U).kTUJdSI+:jS">cs%+OU?iN3J[%+;oodb@)tCg%RX5701*4Y_\*iab_^qBUKDckI77WG1@5%3ljCC^k-,p<7W`aP0p*]d_RDh['$.9=Lq=\+F>G`e3T?+*bW3B1=0/P5n<B(4_-6.@Yp+%U_9/R#o:L#9s/%F-p^\hOqtJk>!R2/%`,ST_=tj5=+T*5KXA*8lNGJTsZSf1A"Mc?`@e2uQoE@I1>cT4EB<u<f&sG9g/@K<I2O.A[b+45b0Qln*abC!!gU9oi%OqQbA!->_%fLR8!8:J^cd0`,VOH\F"Lj>Z3[7(C_a>T,E]\YL"`A4[6"tD]^:.+0K/`o6^9J:g;%;'o7;,h'I)seAc/4;L(6eu-3W7S9p'Dr]"%$>;^"(p'HAE$\D)WhKgF_8gXsF:.7AC=rck8WP<0\i)$eYei(q"'H[7"OBmFHNZ#Wa3]njXs6UHb[,?jWhW]Dp7t#d?lLLJ*LmmY%<Ytp&""o1@b*5sircD:-@L79//hNIQ.OIC!:4e0TVLiI>"AH`s3C8j2_Z%><^l5:);j"1BjB8_IK*<mSbs`(:I@G%5i$$"u7)@EF%O(H1-CsXYlN?0ds+cI;2JKi!$/c]m6Jc#!JfFJZIP^?-6F=PX/G]>;T*$#_2W)ZRaDIESVHp]Gn&>'nD@$?t0@Nt*S1LQ.VRnXFX%'>KP;UI;YD<YZXA"RI?N2<m_&X)%%"NIW'9*=t-RVM?^V/*J<?AId?B>N[ICB^r_;g.-^Je.(=gQ`-RG$<q,ek/!b*7k2;1n=>,p%,:a0i!WAsL6&-(S',CjY@iJ]E6PieH1gHT"8CiN'Q8S;D>gF,c>n<O*M$5C)'2S\q62i"<-:3RT8/UoM'dfN3H3=R_eSHG5AMAT6%PIb;1?tn#m\]DeS>ehh'86.-XaeV1QjcW_4O\kTU.g&ih[K0TP>]R&74eOKU.uDUA["V5p!Z+9Ek32$)hk>iCK=heegGM)s)<aW&%kcZ.<FAuolblGcJ+Bu\Q].0#!KjR=SZ&MQ\(h824-&TL;2:7HieRK.(TuRRf!>Z$dWe*\W]`D)!=CB%2^_2h`q?s?ST8bH_W-WF:%Y_kco!t#<n!7.m.C?U]sfJaLIY0KJk2[Z/"NkF>&L&fLD]R_[]&CFlteC!I!+s)[iS7_Jnoh^46BgPce&]hJ>U&t<?0`W+`A0WL1%VaAqe5hmU"EbnJ@DukVX,;qR=TEu2a$<2a,;^$o-Mo^U'+q6LHlR4%Fka8)_mMDO912(nu&c,3+8-sTX89%Js-;L6Bs-3V3CAGVa%B'^p=^lYMZ"MiAQs3l!Ta:RWe>*Y0mROl<4!AXf;l^At?6U2s/D2"(F`W@G06NiX2C'M`jq3&`25XQq$^2YE7#btHtMLB:H4oj6u%&2nW`1&%rH_gYg?%>"$i0G-&uFG775Yb?fF$VSKo:h!?D#oebA8D$bkb7HQ7/#=,\N")IXdkkWP#Wg#1X=uO8[A,glN")<X%LRaM%R84\C_F,,LgAi@J?Yg#Anc9r?!]gA`5XZ#R[3U99$EaX7+rE>r[))eTIPl6u$kRRT-RF;AiDMaGJ;@AA"X!f$5V7U:0*+IC<7F;K%5]k?r28T@@@=9F&6leE^,7G-+!@%\s#i+fDM$+AI!D.]i#ULUKNe@s`@\a-<KW'1[cUWd>4,P=/6l[7'TSsH@99P&1+mQ/b,_Usr%:pIkCd1YaY+@K=56aOZ9dGli$+X1o#c&iP]PZWl%",$s>5gF"m&>;Li+@6)-1tE*ZL^8pu.#)!MnN7I,,6I%CRN9D(/pgk)7at:J%l@ss(Tu8XH@jI#3US=Xb4HQKd8<k>A[LL=2#_PO7I:*@,g&c$2.+(M6d?.9MQo%;$5"Yr8kbo)\#TaS8Z31h<X5F?]0N$;$+j2PO%BWN,H(;iOF/^baB9Ea`p,,Jh;#YNGj2q*P=+?)31f)R-YJl4?t"@nPa0S#"gk8F.Nd:+mGJr*m:.EE:?6j&r^e,o_F1^*2VV!.?`%NtbFp.CprO78QsVD4D/8KJI5`P)pmA$C\5\'X<<8*thJi(_+m87uGq[JtW/n@OR)r&g0V"i8h?D8.hY%,Q@=tU+/9#)(?b3-LU@(%$YfiE&-5c&lUY+ib#G*eNtmd0Q>&rnd3"R*'qpR2<BaHZk>3LRX9^,PBfI9CLkskP*?(S>YT-2'#q^`RmT<4$/u!uR2D0N<VVn*I%/qW=BPmC^GL$nF1,MH*PgHK(7R)uKt!#Z)h&m'@G&PIBI4OAm9Be%BRLQ)FG2-4)h7:U>&J>7mS!oQVq\UkV'3F[J%=,Hnj%nuiP%O^P.S5h,stNpr$Un-BfP'p/q94PFU?I7Eu00Fp<5JY<D?'^-.fN.QH9UIW[FY_3X8KRqkL:k0V#5dh1F@1WS$I/%A1R$6L(.HK?@%O'WhK5+7'n-27a&EH'buI.Z`Ln.E_,3$J35M:eG]+/&cWh&%5!_D40L,m-]nL-Wf7#EW&<lm<lH-o,Mc_*a=JHWn:d#mBL-6;dRb%&q(MHQ4P=GNbTFT":7un#lW$S&mZQrOq8m@FcmFF6%Zi%aj>A?dL1O$#h"Y,9*irY2V(B[Q7s6jK!YYMo-'pVJ,t>A<mY':+J^:d%f8#Ie6QUm`c0>p0%j7[!4"5me+[LmGGk_hJ.e"RV?R-a>6>?/)!XS%BF[Hi06V+G%jN1"2dL3#L(_W]=+N;B_NY#4t6TW))p_XXG%1p4<K+`Rh1T+!D!/@9;`&r&5r?gV>oWPHE5IZ]C/%A>>$$n7FQN$3<U(\XA,`+ug6]HI^J"1S=u,$H9WcbkhE:+[*(%n$0s!JV#?%"GT=#9=pW6L?sMLL`q&-OX<TdZihUJgmjW&(L?Z#`?(<M,LK;;PmUop--X%*,D#h0#!dPQ.;ZC#,>Hs7e3bo&QpA,;#tBO"E&B-K%,>H`:!K;,OrGer&(l=^9e7f`Ia-!=l2-hp=+A$at67(q@8M%,GS65h<d<_`*XphN[l;5rkYp?o[XqAO6k^fB/+(.ZFCNS9@/;XdD%@Y?;JP.3s@kRs3"NAtZE_NHSic.3=194Ea5*/.J[=]Gc$Jq%P#kd^gu'#UY9.g\k[JdVW2M3sWA,@O0*6H]gT2Bq("bV5>Np$W`+%/8;E,P-Ca=;.;>?,sb+9a:(7ue51Nd,D7Aj]67IS_NODbCT:PD9-P;6>!A5T=3AP6ALr\l'#t_p8JnFAQshO[$M56E8Q0G`#$B:f%g/,ePVM>h5/;]:&)D[T]lN,:.(e^TeJg1`/Ua9%d^ll(nCkT'h/(Q)`OtI]%),'h]'jsTBmBS'K8R8hN16r'KiHY\894FjL$>h%4%E3]'iQ3?KPVHaMVSuGm+Q@om2Vasof7h6PM1Vf0.7i*7?!`K2D_cRNhSbhr_UrHFeTUnoi<srG.1h.5Xo!,!n#fS#u8Pi\<FTId2%8&[>P4-&5iWEtF:-.+ePF;[`G<maVZ9,\YNf"tNe(D79e8PRRaa-%>^mQcVpYTui$9)bT@,uJ"tkjA.I&u,Os.1&Yq;$!J+J0eKp%0*3[2@R-&a),!"uef@]/P$j@k6<6:9Zii:KZ)#G?!L>Rp".$/:DQQ`b&s`[.@HiN*-#qC42.S8;ZVMIUOuO<>WW5\dZ:+*kYb]RA%0SC_]:uV&:O!P5t!MIV<')a;E&/e+Z6:M#-$-k1b-k_j<lH!'?_m3qj!\?ndEF$SIhO%h)$,7D"lN*:SHFgIlk[R1td]oo.QIP^I%<e)Jn<KeKuYpA='9sqi?&fbBpD-VT;D8AL=Q3:)IKRtL$BmOjoYp@Oq`H;]qU`oX>),#R''3>?>''#Ck-=]WKDJNZ3M-*?5f)\JH%a8/odK17V^1kc_X?qDU$.aak@1n9LN29';nQ:,)44X:P3o)>\"b%Qqr6CC&$39g6K5+G#^0-o&"PFrNsgoBu),^P5:!?Y(r7NFW+%^e%&7'R_rTo=+i]8[/@\"=Fd<P.C/AUfYTlP=Rc*&&ChJ%31?<-iH(IS:okS\f$*`Xp>\eE"[.J:=k8bY)j_C:80mJF9t]/JYe_W%3!np6R^rVLJajFS$c,D5kXlplHL?Y$-W/!a=pRltq]]!%_b!f%WBQij;;oNU"=Ge[PPT526ffLkaDfS^+ctWXj-]lX:--7488uul%\Aa5ed&0OFfn5KKE()'4M0gi(NX$s1LHIO&bH+Pd+FoY6HKpq%-V^9JHoNPiG];(ao&-;rn9G!]!F`PtZF'ob&bqPG)o,%sMn++P%&e@2>=Rk;pi`))m!)C*BS5bIJ:1B%![*8SGio[O=/nG#1>s'fR88uumY-ecfV#h0&qF)HqKY#)'5+G#XB:'i%Bo2Vi%jt*1m.kVK%"*,$E1k_(Q_b%3O\1Bh6oElj'kneVa&m[OmPMfsc1(p+qUVYpmlZ5f@qor:-m_U1a."8D=GiBO((ekX$!/'C\=JH&9cSegT!n(s%%DN6b1Wd)]p[>IBu@[><5*%Z%KE71G1e;34ZbD)49'#:4WQ%1'T.c_=H%dl4lN`6!@A=>D@,`3/t=t[4@*h\3t61p)06SN7`U^a3>%USFI`(:h5YGmh*jEHJ^PaHPgi=S.\'J;;(j\Y+u-E@!0_1`&C*+UMo6Fb.V"$0hWA"VcY+#fESV78/ds(5M.Q!65TS*o(r=1Q@^5%#epSfe>1JR$s,!>2),TZ"\XBl!<3lCO2]*Z?1@`-o^\(p\G6_a`]0J[rHLc<7(>''X(5IKeQ#l@LtLJaHOi$jAbqV.%1!d4TbB6/%&K349I7A>5:n)g(i=V"BJG^<Dl:A'dU??(GL9eX4_Yf4Q%e"&j:io-KR$(ujEA0;Bd^"O!9EfY\Ul1S_\S;Tp)?]n!X@4b^/+2X(%*P$u6//5n*)>#%cih-:(@jjQjM--#@S4uI!XoQ-9$]i,N-.iQ>!b<QXV/?:EWE>fsMT5Up(+pkpQ&+H++3*C?!ZJ.,FpQk,;[j)l%+Ti6Ab&pNVWSF^ifP6ut;GHe:N\`dc#?euYBQjg$!@H!oDW?QcYJ:a4mrC$/nn3qDQtB"mEYYNb,_K/"K@+(mi:DM11&VsrU-2=m%-qGM:kb.H>O=+k9J?'Og>M4i2<LM*nQk%M4e?Cs/5qS1nKcj-c:,J0O7`\hh_*sZ@$\F-q/6.X&UXL8mmQm/5==:4$p[j>4:\Qgc%9D3uNT.]>(iDH_e&dr+sOt%k8l-u+;B=6s5%?(]'*0OfbNOI$%R`"uQ>Xgc(LFUe2i"sFF;i>FIkH)he%I,@s:h!=W"8\+jGR,Dn%E\<eG%*bQYd(gKmR5A$RO[DJ>F9W*XU4CY/Q7Y9eMLu(^T;H;mG(MPb<*k:u=5jl(9rD`1YpBnA1;$.(/qO4kN1NCO)&NlR6j;fQ%cpU$4MbXW);o98e85rl'qa*K<KDmqj$BnB(Fi$`/EF+V2Y+(a#>sfu5$Wf]!QlIls!a$]tE*\e^R7mJ%>=2(o_Z^^,<lHgs>l[XN%YX%i??CPoM6[XWf1p5#PKNZmGBJ@:6$F(_;!rYh'Xf=_eBcB\p!>c;,=hke*6^*Ih"JoRpY/,`WUe]8@_l,D0LOqlGT!`#pU&l%F%o;9$eJH_pe/ukUlN1hA(i/&Td2)WD/0qS2m7Gp/*<!8;G6I1[Hl3PtV^iSU'J]SK7o"4iEh:8KblPa$DRsu:/'fB5N>apj08f=0]%a.l1oUN(j]EG-72BRInKFmg;#W>f[+1;mU&>!J2kHD3HTTrCF+!KbH#n%tH!BYb83P"u)V&lrt!6UF.`JGMP4B?dA3/[#Xn&<#<9%p9298_]!4*>_-EBRhj$+o:6_M-VKE89KcmQhOr3%rBS`Q-<1&HJY@'b"<oBe"O3XU:_fiB/M93(gkI(D)U[M:9<8KShk0t7Q=f_X%P[D@j":qTu)X@_b3#ViR"N[G?L>XF5O-keoUX9g&#fB-%[j900SfG&S6^Hji3tbZ3=W8bD[(i@LdLeX9fl7/!d2c[&Q+*\si[=S=%l4/G3'hpWe%L`Q.EKP(d@I$J35%88t]>?oKfXK+KKldrR^N'?`<'L9)71R*&O>a"BcW9B(OQtBCHk(-)NSO^@2eiV]lCJBVP<8m(%d=QrMlNVK^<[<@^n6t)l=2e.L=jSj9/qP:2%m7L4kF0Bd)AE2=\>q+D,a5"<>tPI+-Cr:\XMB%)V1=K$Qp.9tL6ILJgV$DQ,@*7P%pbH2:@Lu1TFX+=cIaT<n.!t2")lhW&%mW]$&_TZ2K!@;j3.%JWb%i5g<>R$u!5nS4N:V?t3I)q1PT\)!?OQTo*:euLjZjd6NfZP]%%-Xd+BS8'CXQ+#=nrV5%fV^K5n3gLX]Oq?C+C#--TgaDoE#Q<W>\5FBE$A0X^/,[n_%8P%PZ>UA':\eba%ur*YgqpXTdoaC(p-Yg%dGTEsd5hIJ>].YA9ijSL_k];DnBsE>Z(o*ETJPY2-MFf#nfqn3iPZAJ-68/uatZ<&h*G\.S8W><"8lci%[[He(q.\p8,KQ&HB-`H%Gr,Z;'Ll*h6b,lD4S$8l*q[$96cEPH0&&B'Tcq!H=ikB.nE#g`"bJKl4.toPEJ)BEUkX"rbOYo\\R1`BTPNEH!5Us/;$1@"=9fgi%hj*1'C:<FfH-)?p)cHNM:^L*U_?Pk@+0mLT(Kq;So<OuRZ1=:G3&6f`Cj\P!i)*g["P;DSRaO>T:.CLP6N<!$]nX@1lqb#pTuJrn%#Se#9OGPYi67`8($(hOZ.ZBJ'j>]ZWANu'HE>45<B[-t*^4R&%<)rNVqHW0%,`t"]9HaJK2q"q'UY8U:"ZY@BUWNSMqoWKQC(%cX%)3ad!D6CjId!/Ah<Od]9LtM4gkXZ;(g.\qC/Jk`E.$%)B7#B)keJQ-.`@@"f7GFZ7'lDf"U:h_hAO'\i]J#+'8>bg4@@A[<-?V/J%V)j>WQ_68.TC^6>\"$W7:Y66UVjb]^V56&keKYO$$HEVbP"lCA!D\>O!3h5E$gHYOLJ)22DMSk!.]s<uKZBc!ZJgD+\]eO_P=c5q%W1eU&mc>YiKBG##7kiTZ4buO;=JPAg$Hp3EZ5V4I'$Nck`]qQ"6Am$(=2h6e$9qp/LK;YS;umal/qL"45m^?&Fu3F+jTna_9=>C/%7jq2&[n4j(EFN.N?F$^Z1EtU_>In(tEeK.=nqtL-U1U?NR'FY,7HoERRQJ]D.cN6h;JZof<6#LZ3dDIL#AcUc#`;f^rIJp4&BebA%TAtPP//[_t]`=b,EJ\.[,(ut6@][HT&LuGC.:P^[,7Kq65shPEVt^_oB)#4igaU\Ynp=e3Kh1Q+cAN?F$-8&>"B6gV*f^r7]$'8=%V-5K%>;'$U)SdqJ-s.l4q9_NT:6EGJ=JG%X]FY<UgS'-@c@pm?IN;@?gq8^lDQoV-&rIP.:]ZOu#7Y[2>tgTZL9=e@`smYV05u_!%R@5*U`;V_k)h\]8</-4M;!a:2a&E/6O-:50WYa7&,0,qbLI`$25Omch6qJUC5f>G&#tGPPSQ%%kaSj48`,;G"Bb7G?WGnFHWEbG.%@UU/?!Mm,]"#M\;j4e--DIB,1D`C#hbR73$"9Coj"jWBJE@p/tQkTs)p]6ViLsP=5U6Jd'_*^Y5;FTbK1KA230>Y!D]UA&O&JdYZ%KpLrX'knQ>7#1d*#Wc-S$C0Oj-=[-]2=Qb!1ihDr4AfH'(`HKCTELm.6o;ugAU5-9[THFaT!m""KU:XXgtCajRNi<jR,ZaV7oo/a%7Sogf"Hhm\PSp!&JM"EiB@`.r]%>9;n:kQ]0UuZ82Qj.?86i:e1-2l2i?sE4<H4fI?<<K2gjUh*LeCYn)q'u-pHZEc(1]I1)@q@;%()@bR?spF4&h;9g21Zh_ANIRGKGrj;Rt:RDkY>2^f?pW5GaS,h&@.`SSqOns0bdK+/<BaKqcn2p&q&!dc!IB8?\7aS^s`ZW#qQTU%W21]*%&le8o8Q;!T[)b)"(@!^qCInm`8_53/=UGf/?aY<_u-6W^W=Ec8dtF]#>b2-0/9RPhEqT.26Ta+lUJ8rYHmIop<2qG1nl5`%;8;=k]/>2*B>ed,HS]Us%cc?O-"l3l(Wn-_0W8Iu1e3N/&U/mCOOh'9aUab]D)`O&1\(AbL2jH9Aa.)fhN9_78PUfkkZ'1d&oRYW%M<<09.QmAk!?l9M%oO;_&i-\69\hJC&M&j4e+'OF.[?+UM9d>=1\cn0SX./+;fVRQ&n#Bmj;=Rgbb,*2_ZNnVW0Sb#.^;AHpXDSQ%`_oeh60A9@_rs:V[PKe[UrR:U4@\KRYs`fSgHPODU*OE"3m>reSda#%L^lUd^3^`Z%7/!%d\r!-6sY20&=2PrmLhdQMVIfYX,%cB%e,m,hN[8cMKhea9$SVni;l=JPg'uQ6R`?&]TJU=ECC.BHLMChg/tZcqWKp8VX:3TpJ5$!c@JdV[;O#;nVD6^QkG$?^0TDW;A+3-G%mV2$049roW5qmpLmR8mr$7;,I'O.es@QE:DVP"B#DX>VXHdpf+Vl7P^3D58(=f@,df9n[lS#+.#ZgQHaJ(@$tM?%U.T[<N4$i,*N%6Kd+-7):FimUa5R1?m$da>''3#0W!Aj`3W&`hToDNK)o:JZ_n-WmJh,qhL3B@t[f+7\f\m\U66M1r8Q;'oM5pI-q"%]L`tuHk6<-%LJMW9id_XMS[_;.gfrL>2dlT_J.GB7q`/W_=__foi`\;Q0#6Kr$LZ<?,lQZ;">s:lBmHW_h*3G&l+qJWO'.p3>@Hs$WO\`V3k&_M%>B)3aR)/[h3,!\rJ4ZZN>WXbs"/.I4JV/PoM&cH]++4(s6L6>iPPj@q"RUKod5KOn?*d?FdDDPqVT)cNTGJV$E?%^k-_g[#JT_b%%0^+HRSh_u2nMlP$Vp!Hj@0%Be6#9!+A1XukQeudoWBbA(@n_n/EXf76:^OfW"bkJ[_\XBqGmo"e"/[SX'[=Gq4L=6leifk1ia_bd%##rAVDXp]c#)A\1]3IIrK-csZWVPcCf_h7jmk)nCG`#tgF*RD?W<j2H;h7Oc_R$CYZ10Pr*>-GOY)"f8G[,u1r'7QC)?jL?5T@=q%2Zg`^,gcRV$^IEpK`s+!*;\/CW?DW%j(HQpm_,rBGiT,n)_<_#$-5-9\O:RSLmU).n8+3h37#S)8f$i5l?lP;?Z^lGRNb4R-RnO6%Mkdjck+IU0&rR8[frj:g$ZpEnJg)Qb5Idt5Qp`'()#=R&LhH0U-Qr+i</D>gYU$1F-k"a929Z7=g;RE'<P3f,huMPF,73tP"@EWC%[S5g0?_@P>Thq,f/b*@J&ob!Y`r']6Y+%#"!$3IU6R'^1`>aJ]-j^P;8K6Alg;oUkP."2'=`Os81bD;.<'iVGTC^7q82#e'5mLo=%/'V%`MU\9@&;5gQ-p#,\c8&CdU_$3-lTn^,In6$l&-D,m=4:9?cqKPP`H_>g,cW&Z`oVEn)0A-]&neZbO%X4Y)?PV.D0_eg6LuQ<%<I:MM.<o:k.6\KWr0>G"]fh+kQc'MBe+m[fO:JH(6C\"uf=UB_Y3ScU:JgMA:U"6_V/Zr?2&b]3)X"=\7h$0:hYoJY.#YC%5PAV&%\"0.m$Uk8PABf1:&@p4pC@Cg]p1_L2V<p9&$IhX@J[]F0mUR.u0ND3[KIN;Or_@X<(kD\7Rom@a;$g5/_6Mq`:-r+"ac3f8+FuNZ%6*H%P#IpW^^iV&^b+$#;\kS=jTiFX*A;i3of:$EpL)9qTjh.?kkb:N-ej>IR$:9`@A2o)b+M)Q.3/i+H(eS`n4Ulmc!"B+nRQd-g%XEKnh.eC\7>tN/LS8Us.'Fbk;-p*MnBoqpYe[M6B!g73.3?"=M:H65<*ClKo7:BUdi8B+lEL/0PP-ohc&^]0<jWd<pl?V=m'2_+^%P0*HN`84AnGc1)7;%BQir7FQ/'+j@MVuRP$*E(7"N*)8F8D/D_!MWTlf7I[5p*n*Uj)>Y:f+WnVRbVB'ZX8;n`DkDT!AD@Y>)QNo%YA>^!N_bO]>NE2[m.V'@k\8dX@'bDN](TMCXiBbWYdX;6S+.;0G$CQ\a&;)G.M/qh,OIuKl03?+8@;nu\TnH(Tg!Qg("Ni;Zs3j)%TN8,]co4#j:,="^f6_N6@m5"6(aus,b#1Y([1J,Y#T!G2:jF,mZ!1)A,M)\=J88a'6df!*0$c$bU".@(rR(!2:X_qAg5^q\Emg7G%Am?>&e=8C"Za(iMG:ePjkPRh]GX+$oP14E`DPLH_GCBoK:KA%%Hor-"!MY(Jb>^XVh"8jYrhbW/<[LT$mZH6dc21D/UZq/oYT[td%>kWW<jur,16)RlK`Yn[s<K68Qr\>-IVnl_RR;MZsq+O^nl2`4KIS3fDTGE0/7[KZK297PS;GsUY@SbOlr*oa6.'\DV9$\C&-+D^;%R<KW)cU/66'@q#p90;anDIrn4d`sZiF3K(2/X`TY&N):2ChZS_Y!l_p?In22_$AmMG(1N(n'TX\@7Z<3=g.<immG\ZGQ9Y"ol[:Q%aQud,mC<mlf2ZfqJ6Jb3#Qk61dmQ>qR'7-t@EGaOG*R`c&kL)ks5[rFHkD;[bP*3B(IW8)gdVU8W'HM\n(!LGMb#(>%eSZ![\bk/%ZSF!C658=A=ntm%$F#/M88Uq_-+"bS-]6d/YT?,gn:tbdRV5++0u]uT]PE./(GN7Jq*)qbUGdWg"X@T))Y<.75MUZ[)<Bn`Qnl`p%e5@.i!J1&Bje#EH`B:NV=1@NbjS:teL%)qgOK-e1W:glUrtE@f+R*=N?'::nF%L>bqTM7=Sml9Rj8^kZ3Y,ssq`QL9,p4\p'PAIf%^+(ZJ5u.2JWZ25-/=>un"e]\Hf*TrtLPn@3op6`W-Vst?mqfuM;J!Qk;se2M,)M\<n0$F/Vnm?o[W;mt`+b0DoLC[s%t=tB&;UXt%4\ENW]9tjY(Z;8\r/"G_7Xmh\1Sei18P"qt))J:QdZG5:i-R%gNf(gYs#U/?oD>?&hN(*!6i2Nn=\;<;SOo&s7u'.Dh5l%M`%pl/%;:)XP-N8CI(O;J<'c&9(-@WDHA=<2qAp+PHMga\<r,/[mZLFP;MchM&Rd%t+i0VWW2uC<-[-LF1OOQnmL/VFpQnSPO71m+S(>(=9%@%(e3G36GEVOX_jQEZ3T2p2Kh$,+PL=OSMDl8R0(P4NE1hS=dq"W"k`bg8)haefBb1T,G(]g3%Zq2)qhhIa86.h,7sQs7);GkEsY%-9=_QYU]iE-m2o/nG@YTo/4"XKe`Fp5CRV^mf(,[a*@2DhY`Y`V]f=AmeJjB.-[_/&,#S%T)RB#bI63;GeLMsIS]G%`J*+F9Q%a!%?FAOf0+R<cX*ltA]6A(HkNP>urTlI]r9:Q&q=QcR?8]B*"R1Xclpe,6CFnt)[sKdGGVbu8KFFGAp>$:02$`P-_pbc5]4di1S!5QV%g`f)q+_+85(d`hA234_P1"?T]U^@&ZX'H;ArK0IG]s*sj"GCO<KtJ-*@0$fi0L#haQ/mFR?s'efK]<.i.s&rA@hMd7Ki8deTp3o.%[L)(*B`MH$FR%nBiJj>&Ngad=9m0sp8@E(!SLjP>2XQ2q-SpHd_Wh_]S-CcnrB_p5.;7\-a\Z3gp&oQ)9ZpYsmfGmcr33-(_l+MS%TV,9p#rTM$Cha!T/1q+fHbm'^1.7l6l^ktZ!^2sSHrA?#Q<\rj$`'F3WRa')U`rpfWsC%3/H!OV)/=qC5qdZSHE2o"P@s%j4.F@M%L;q@FCn+pq(GNYRP`U&o(eA@5\G/jLS2OfT$IU/$Ajr]$cH\SI<b=nI`SKh"4Z6C1&NorX4j6tkmZG;*Nu-O"4emm]jK[S%PBIXp%Ga_7Sk%4VtN7L!5:fo1O'[d^m-l,[!6&24_gu8t6-8Bi.>E%So'!d3am!.k_Q+t(?+tm/>L**aWE0Am[pH[%?%'igu6Uo0mIfo_k%S_7ZBBo>g<WMEc=CFK%UrH[Xi4W]n:WjH5I8Pm`jX&3`iU2P%+'ip8'.e"aE\&7(Ei,T?glR<(36RUc!p11p^"60^?LC:>9ES)ku%F7\\S4TGA/Oe^CLe7.&db0apE]n5YafNP@ick9+'5\VFb=T0XM`CSWgXUckoI[J&B8'S0h@]2Y3P`N/:HS@>nMoN>aD%INE(=g*L%1YG#6&)lT143UVE?r47u0iK"#KU&mj`%'mT7SFoMfosTAbR0eLN,Q;AJcHQ(UY77P1.G.>RZ!,5pfANiQn0[iR(Ps-7U3V+BrlDl%$b2rlnL8Vh!b2bj:VIUd_\ak!AKc;ml]@ga"mInE3&nisIOEo5BfSuScCJ+4V7?+mSfF"S-HhVAnt<p'^;n6_fq&*6+[BFu;0kqI%fH;&J5kgEm[4Z8]:_\eE'EXg!-2n3.S,-VI$rAaYQR^JX5R(CX-4<IgQD!$7^V:,V0,9&n,WHK=>09lc';d'$+sK<n,QVUVh(?De%)'CiUbA,<p%KUgk:-GEZL9sa2,n:f\dbM(<d@8WM0cn=N9:u$"OC^m4b#msW<Y/0sOi>Moj).0EV:+OalB4,4#;U[\i^-WfZQ50C%@^\^R0IC3YRj21=.]ZrI,s&E@c+aq:F^nVR#]lVZfdhG)n63V($!-_T#mTLYM;\#W1mb;XT&^\B:]ZDABF[*Y7pf"S%0F5`6e&3e%#QK#s.OWD36]a/#oKgJAL3]H'B:t2Y;df^_+?-O&6P:EmL6Md%`eSj&(E*:u#eE0HeUs<*4bHWcH+lcU/IEZ_A3:msCP5VA2u5BY%.jUe^F<'4O`5AI9TFCrG#@2fn,ABIQ=MYQt1(5e$^D/_RM-)?,+7S[Ek3NA!!bfFc%,`L^7^ZHbHt)kRGep`Yg442fXoRbuIp?P=%l':7\;,i]RL`[rnFN<`4L']r`I5%[^0]M2kL%!RQ-BDGd;Kie5=F_0//H[>.N9h<q4a"S&k@S=?!4V<R,4t:]`u<L`5e+rSM-dfQ%`NG6`pL6"9Dsc/f^kQW'=(S&8X^B?H>K6gu'lHQlLmhTFmAQSaE-K?"XjFq6B^sP#qkG1Q)Kr#CRVHmn,$EiFW=c1#k#>&U`+N">%i"&a0?"sc4&mr+I>HrJE$IJ-+V^AHi^L!2j1jXl1Q!1l.12`i!CMn70$Y<E._7%@p"JX/3^F43Ic0GN$V12Uta58l`"RkYgqN!Sa%5sES*7^.>R&8!FD)-n7l:sYS@>7*+d)H@@fhHlBWbJI&:."m:Y[EFT'm;Md4U2m25T<k6]+A^kS!Q!araZ9pn>kCk<1Q4S2/`r)F%QfHsI`[%nPH4!,e0LfqUqRk9?B_sKq+bo;mY[>$B?;%rdAnBW.\)sh4TX*_SDBB,kl@p$5rbZ<2]]/^qaILUq:AuhqLg3qYqVpBV%:YS!<j52W8nRJ?O2JG5"Di(P5-(=7=3-W/F5%UT6[Tq>gP4]0HT8]3[%+dQ6D$TlbHJEUm;e"WHj5/eqVd8>m[sVhqO2\eD\[@Y2%!t_-B$=EoBY+J=WB.rKX;8Ron6nc+sOk`LJ^4cYa-JZSSmD`[@m+]RT4N$9iJ6aa3\70;\(tNJ["&&Y[&n8KCrpo.K`T$k0":86Q%&lt0MKGGboKMq.g[3YlD#tI]S2Y?U:;*5*ZPO09RDGO%eZC2?l]qFB*/=uA;^Ak$%lj.?_+(-SgT^tO;2*9]Nr.$Iq8MTumIR$i_%V""OtJa2N@quAfs&60E@TMhK+R`#,c`\_`Li7bN<$_B+/?pb7&5a+:!Y8+XK&l?&8-R3Yg"ODRI#^T#$WZgM0%o["l5hjdu^lrP?%5:E@UqY7l;lTXM3dRbPS*.>%d+2+^;#TYN#dilgQ/'h4\ECJ"t[)&,aBfrD0`K4VlYg+,H0`-RPTI#8E[_SjPZeUoi7M9HtH.U\Q%-#roGS^:p$LBV=)(1ulL(Kmi!Rj/;IK'4U_&!=!HfKRd`'M@p9.[NlVK"`3,7p$'#9E&u!L$OY"&/7m2C]G>t@9C'hY#[tg,@2J!%`jr++9pOamFa'h1SY]`/Ls(U#EfI,fj5`^;"d6B6XP1L>,,u-ORk7%AC>S,1."g`PGiZH_d%.6/QOde*Y;HG*+rrbsRI*bdn='GR%!X#6scofCa#uV&a6E*/sB!`HFa8>3tEub$:!cDuC/-!t)`W_q51gab,5rQ'WW!?q%.)O#7Rk#:$T8ROIphA3+MfHf:LFhhSM+BF+%L2mUIX8p1Adt9LmMrf"JQ-"T99I-S/Et\r;X!efYU(,?OfQsgI)cSZ]^uBl1<rm_C;OH0`8=@7KWP&li#JLHgM[)lS1[=C:<.NgI%$[Lm8h#P4(l)tUB6.L8.HUcApYo(HTX)R9O<$^3QJrs#AS^V8/?j^G&])dk$_<bs%Cl:42qNcX,V\CMe:Y+]?[MbI]!i@+;FjA*-%b)W-SCPkE)'VTn,!uagoFlsRA=_)n3Bi@$L[HL?GM/-bf[DJsZ:pVp1\uC?rpZF."`Ibt_d^<KKiFZOqQrQ20g3G+#/,a4N*X]@h%oYM1e36ZD)_ugCZ/O"CIMp]<qVqA$`>lBtI(%EW\b3p`9/TCA@TJAOGDUeLBraG3aq/s]q-\7o@_C^It<0J\qMl3q&$-B'XHosXU%?UI3r4*Tbj>r1df^$5"^ES'aRFqY^>$t'g&.MmGjr`.1&4iZ(%X_d>YPXJo*e&<ATN:^I5aF-*>15"@.I<;#YQP^A+a(tAS4QE-L%BQSBr!P1"%E\jK`/[j^qjI6)C>9;TPg[:2fVaJ!MpZbRIg-*(:Snt9KRSQLRC7@k#$i-CLVWc2J!Uc@"pRXmqb/btL:WjakVPb-/%^e0GGlRZDtIS<$sL*DnY-_dRN73]*YPSoA.U^IJu-o+Sb@sJmu%GokOq&sad`4]CjkKm>$D"i8<HS,l?]2&'8:C$4EKA@P*h,pb<%U,\s&KDK-U&[/o/&(>`I3#E/J`;(juhJu1]#S1j!:AjYZl1o0cXY-[ma7tsk8L+%OO<L:uU-M1ek`H6`OQUE@V*cM<C!>_O6T)Ou%eqIGb/We4H)<jXYk$dX:K.*N;bU2Bra-i,rA6c[XjYAC>'!>V8fR@_:M9'btW+$jYbkJ;"o]D#"gi8tn(.A`Lh%?Ku^YWq--T:XL%?p/M4(G+n^0mhnp:[IHXTmPdDDciW!"C!W,nW"PPZ,ILZ1Amn&rYJ-$^bO`nc501HM4;5QX)AjA';p7GF.\ig*>`TE"gNX!:PAP#%6GI$\:INs2hI/db*B*mbd,.[n2_=rbf\]R)2sgP^+a?Hgp/o4f.(=DPm7+rE&#sN7<8AIfAEB1Xh9!?0W:@r`=8?9VPLHQ3(mM3C%eUMO=RE05Ki1uMJH;1!Y51]X,jOUMd'aAerFZjlLB<h:*X'RCkUMZ!+9\9![(-qM]/48e5^CuecQe$%KMu7hel"'.f[I[6"Y>g!4%ZL"(J%&%e+fFJm)[/.*GadqoKedPH#Y%M_C3r?EpW7d\i36Z/@8gIMZg/9an/<3FF"f"I:V%on+^(aeYW2`pKaW,i-,dVK!]HYm/%gstecM"%7*S'd(Zi^V3cmCR]5QD*b#!AQ%T7<,7slP?-Q`#*W`%TpYplk,+c7$MhDAXf`Ca(=);)\rsRcMCHc1r[:<B8`13kss:R%hiRl:WdJR3eEr9s7McV#ie9Y%B.)=Jq[A4OiYp/,a"p'Q(.WX>>HhO7o\Y#)%qL@H:7nuE[r)C)=M&='iu!!nJLFE`,a!Cqd,I'?%QAfWGD?mb_.OtM'<7DXm4Goep];BRJoR&u`c"Kt\5*fS1iK"?t6Tp;`-DFNL#A`o[Z`p0@Fk6Gs^Jt[]RoD(ZFXm$O$R0gjSC6L:%<_N$hT&BaH-U.II"(7@uM'P8If"\BoVoM*d=?!Uo9LtFR=81M]i0EeJWnSLW1#*6%AYRie%^oKHK8f3;J&.C5p+0LZn7`FU?g[;/%pX\$+eL1`ag]YM_B'&+g<'/@J.CebTDXIbTqa;HnTaiL5@c4pdZ0K7toY)bMWA4T)oR:Bu=]R`6HT`\2:@p_F0N_W,_>?V"W>jOW%W!80lr5;W#?;_VIdN!Zl#)O"?pcnqk"W@.]'N*,D?h'#NLO;XfI,"cF\J%TmPO4*9!4nE-3:;WMqVk_*?iP@H!VD5#_e.^*or!T>%>\68[*bt'n_6W++6.J+Ne<[Marr)KiGJ=OeL-%`#o;E1i\6+ok6^*p?nj&^PETm^Q]trIbNZnZ^XrgK8#9tg1j9;chW*pj^:=(NE%m6KtuE=lIQ9h\?[dGZ;g1Htl4*^QDe^VGmWL`EpZ*/lqd^'aTq27EC(Cg?2R"j%Q:%B`8jKiEADF/l>DN$<DrJe[>.4%-eW`7idC%$`T*Z[0%<s)TK0\'^+$r_I8C'kqL%V+A&iH#FflRm,E),'f1#Y]:o.YjZC8mJ)"K7[=15]o?8')ikJ)H<Z2foSpUgL&Yh<i5o(V5%j[+o<\q2:0j?$#-)G@kE$0m.^;!f*q@PuY;mtK6p[<HW?"WpC0AT`C=?+?#Xb3):]^.`(^7JM#*4U[q]N9'LU-rpt7&n\'U?OWYU%QsmX**Jj+qe!R*E=<&3g$XX&-9=(MFR8!cm,\J:$ngYHV[f'^9*JjC17>Ur3Q"%J)T=\gRX;NYQ0!&&<`Q^6j>)Bq2ZrUDW4H2>0%l?P.O$+@94rfT%dhpR@0b-CLB>[k"@_OeKCOh2%br5)O&+2"ouhO"i.nb>8N"UD.g*h"+"f7&QU\,toq+o.g]Ch/Ge\O-VR-\+>%%fNFcc-YTQUlOGC`lhrO;!80D8QQt.UhcD.c6;VW::)B]K$AAU?0KpQ"TW0=49GqteV=fsug1Kp?4[o%3`ql:nl;D(/<85i5R3T*#%en,<JZ1>J+2c4hH-0^G7:ZW&-Y0fDipQ6'#AIZZdbIc85"<q1#O'csm>p=?t_C7"g3N%q1;PJY5S7^Vff$CU5^m=`Y'"-EIpQj$/%io;Rsj)cY454h/q]s)TKGj(K%8OZ8[.CAcFWOtD&G/#],2\`C`H?%`*kH*5[hM!fQa'B",(KEU5qJdtVn50"%`p)+:&9U#.$fhmR%\gV:%YgOS=MDIL4_`"OH0\.<3qYTT6OOso0NFt_O`R\;J>uREMVrksb"MU;df7G*oQ4'WGALfrhD<b>'@JD#9cmL2ih")?N8WHj)%dq;"%o^S4uGu(F;]I.#hoZs@HQH>#+3Lh2c4O;-+'L3\@pX,QdC?>7r<b\2ZW%Rg$=G$4g:[PK7gWZ+mm'f.,p#D>HCF\Fq8=@/K%5<b9LTf;P-UALXsBqNHCnWrIP,m99s&H#3@G+$>.A'[?Q')PpgEqjlT@Wn`rQ:JG26sDqkQSTX'VYWuREs@%+/(P[<q<f/[R18L&%LhOsph2Fpk\N(mAGD@JtLKcRbV/q*S.dGk1Utq$Anm%`lAXhQPA,58n)-:Ekm%Q+'kPU%DqhK2mFr0_gc2@J)c;cUENT7?u#>sQ9%:%Bj<qY/T)a"Vnro+8ea>LANZT@3MUg`tt%r4_OhqeeEE5?*X5#Z!S"*=">,lAcYA#Grd!EC6>/n7;i"rP3)oYZAL+g_R[Z2[2r0%%]/4-<:OK]Qfa!Jq=tA<hP&;GIm"t(Y</u2@D0L\4%O-XDS%(&)r=ekW3Cii2sC#G@"+is)cSD\,m!DI!SU>rq\9umn2\5X"_,7*%Q^4Q@!'-Z:kRNrnK;plkp$](+kRgSt`=()Q8]Q'R2KjPd)i<O><Z5eR>k4la."$X3O'/P:ePuXXB/ZhD/jH.EB'hb]<cNY:QL6Pm%pRVdCQ:$Q.8f@T[P=dRCHf.Hbfe'dG;(<B4C;[nfr<cJ+f]X*ng7hk-r>62hOY_6*0@@1S%*g&>Rbf0=r[j^#ihT2MW*bY_\O?_s%pu-p@]-q/#H.kb4n)6k`j^cgN$u/u-IM_e'iuT8l`UFL.I0NlaE,;0*=;S?(`d-DC]._Rh>DW(7(.G*@G`+HVJ@(Rp?Qj3NA`)M$%k"7k5hg:%3_W^M%7X)]BXC(Q"q4GRupYc#qrr5_+GZ"hfh&pTW"-=/<bR2$<(Nsi:%h+7QT#@0mYq[m%S.mk;1gYoK/qusR8E3J7%\8#6Y$<UH=hcu;FO7ttE>Ic=RMcl4DcB;F%a5+!=[<J$%n'?tDl7)RmoNk'k`JtFAf7HnrX@?(s/Re6!49Z&!2g^`,V6UqHM="p%%MZj`*UTk7=$W<:a?,OB,<FmUuVL"B+@+Hc`g%qt)34_]V-geT\/VFTpKD=blm=L)Og)+I4^D<,$kO7s<cFL$X=UPqU#(_=?Ai">I%>beac-,Fq+T^JML*Ip@rg'ifNZr7[X*OR[U8J7ii71$(MaATo45rl0sbqSVm&f-Y@,T8RZnb(E-\H0OgdkikHC$>u%@uP4TKkY9o%i4u9HS]F\tp19jBFE2>`W^_/Vmuh79p@su3obc[H`UD1pAFI>X2Zoi',++.@OgCi:];B)i@)?'?kE9M)8MP<_7>@GaQOQ,^79hBf%l[3tGRpZH`f^Q>S_6?ri>F.b9&(M!f;*os#Z16A-+jUUU5c6C/cs=@hcUER7;1+pb&\Bo0iLD0oYf6'<9/bDfcRCsU/<AAO$rC)<%:WH1Q7$M`nc5Eank4p=%?P>iaB9T$l,LM,.MK(E07mOq)'73S4YE1fXj<_WhLG$pGe9MqYC:9/ZR?E``Z't&5Z"-=*k+Ig$#794#%ofn+jkp6J_IfES,2\!0pK^u/P>;3CWY`kUcL\i))[A\_-bHWu\D'<=`.h&hD,/^MbFtpc$aMI8QG0&M6]+VFY`Ts+Q$>-=h3@j&9%))c<!QkV#ce:AS@_p5:@?b6cRW:p8*frjV/,It__X['\WpQYVr1,iPg`WVIO]Bi@;g".ha`K4d<2_"jPTeHmbOmL%g_CX_82FJk+%4R#"<$>f2LW^'rY?0ma-=n@<nFKhXGkF`L/Pn[hC(J]KS?UCECFYt5F$)`[GktQ,ZeZj8D:gB</=BQn!c45EucsK"Nm;M0hX89c8%bYRT!E`qidW;KCRmU^2H8kHF6T^2nVOD@6iD/@O8^fQKGOM+a"4U0<es"lW*=L<q`B*4V*'>q+FlE&k;78[+O[PG-\l4KmlgK\3&%eh)[C;t:(/BR'&jXj%4A+UGrn[CJh;!s#FVB+St<RHWHqL4S1b<T=XEU+kn`:"`K9+)YsMM]t)-aGQ2i15aZ9oRK(q<!cDZNX@X+%)2<u:].K7.)%P9ZYn&IFn$erq8hq>2bS/U28I2M^@rXp(DtZa#;XRo;RU]r45XIp^c@pSQGY,<sSPqAdkgMmM_S\H:<V2L5"PO'$%kXf.fDX5ZN%O\m76]eAoJF"Sd;J*tK@Z$'[\f(m^BnrL!&gg[I&pr17?SYIKqqq]`,`_Ri/ZRjOP@g`2a='%$Qc-U_lq[dfd?'%7%,QQ4Nr*5f2Os&fs1AVtar1bES8o+K_h=1na>g3GJSH*)m<@\[-fOX1_!Teim,E%P^DGc[l=X_?F<a_h?nO>0[QfKiAY:^D>3q7\t%0a1Jik@J.LFc=%l&MQPj%>?R'(m9&7;c?Kuln1EnkFjRJG6iNLGO%96)2Qk+0lo8oo@K?u1T<4Ls4,%io1eD'9eaJ$gjfcqMC*L`%JgfEE*JMg$KUX+_U\:f-ASEYrS2i"1G5XXh8-7MVQOF]`Mo-;d%R^O?qZ!<o\(ddBikt1%H7J4RJD!e"fs42iR)J*M\Ynd(V[\`h%%ie7;dR-#P#8QAI3s9?_KHHR6[TFgN#)-qb;&`!0BHA'd**B7rG[2EKbbHHV`*XrdAo>I-7Ee+on$8cako7'1hdufCCFgh0H5Red%/#l7C^b:+5'[;UXd>hnH,Ld.Yp+jDgEGVVZ.1m\7VrN*'WZo-!.2E/YH2m0Y=c#:c;*O<IT)?Vao:u3!5GA=iIZp<QPI4'A3;p,1%0#MLG-u-rM5HO0*X8G<$h8*k3N[:ZVQfUE6E\EQa-q[&gCFRW-W=?HLOof<]hJR&`aob%[@o8e(%>!+MD4erC<'+/`5$#gtGt,C-%_CRrZA_Uj>MB%B-G;FWA;+kDund*lE=`\>-lTCQ^g3m!fEU(%T\Qs`Ze)=k#Mjg8ZYFbJ:CQ5pXr(ZM)4(@JM1>MG-1?e:4Kkm!W%%Edu8Wj]_g&684+J6g"O]H9O\XhsV34+s.Xjh4tZ%7;SOXk-KC1e[hE<4$YQ\"MQ;1(h-gm+BZ&?lr2#dK*o52[N@&DXW:)^#r<7%ngQj*0FC:XhLVFZ;sZqg!>Ne;YrpV^:.)(]K?KVPqs(E*fHFJ](Dj0O@EK3.'p5mR='=:k"3tHe#&P6rSqbBmDF]*Jn`:qV8lJk,%[:[L;RT<]=.UtoF"t@8VY[/`nmNA3m@po)%67]!:<"kdP""E'B\t2bsa4(tP/TEMlCRfN!Ltt>Tf<"Ad[&qtFfLiiMZ[A<f*@+<D%Y;@3P9u?3lmn#uH`=R1,Vs2u)rE,F-`8NcTjqq[XFDE/o7h&qmU$"K+QnK`mddic1!,g1ug?Ge&5nS@Ka_Dot-H^+qhbo_ZZS.Qc%KP%Q4kYK_eQVWb_cAeo8DogP@2plhQ14_u8OA7`iUPBH6Ua-716'A;)\EB$4;gsDQ.f1XGn7sNQWB=fRMFYbk"3jkG4@XTb3qaCl%@Uada6sKMrQ<h?O[X-81=]Q.7P"&i(m;lm@3H@\_$rdIH(3F5n(T<1`aXO4N!]:"FT99TE1f+i@qoim0@^BT2SHL?3[(R9S$(7J<%!&Xe<V_GrfWgeL%(oZ\0ZU?9l02>=W[N!7)02OG>)lLDgJsr&1qYQVA:sacBm%@r^7E452aP%/3TI(qZH;O3r>bEDhXGh=RRY;.f%%r1+e#nf6p'>kSn[@R^0"&;\!V":mi*Oe:.<)$lTjoRD;,>Feg1X/me-+Q98-d+;Q@7]?_TI,-6E9.JW`2N#h2GfUl-O#:Ii;:_n%^#1,1H1IUTjs:e2>m*#FR;iHh:Lca2aaoma.5RTQC?c$eWqkHG4;)6/jsg@ko/LhCo$do3m=p^GcJfhG(!5]pet(\%c<nfK5BSA#%'bYc(&<K/;5Af"Sl8mkY><(-3.iXQ;p#,CJ&s2Y5Tk)8#I3&<XCA'l8%t9Esf3#<k'`#RqZ5M;KFe:AO&H-(rdmi+n%,W/?%F-s`%B(7YML5@J/0&N<Vju1P&''HB-92l\0gGVW7pFEn"M3&#I-%nM4m9WWgjC@#KX$,3#OFV5T1]g3dF#T^LCuQg__]#m$-m;oE8[P&u%=Z,WHkQ#YmIS((S=5`gp/3lNcpr=t,$jd=';t#9gj<R`URGK`&(S?5-M3uO!I1ZM_TRfK]S-mgs,1a[fLB]19Np:Cn5o!"Si0.B8%o\oJe'JNr#RUSjgkUlckHjIpBk%PFdA#[mpo5FBLnaV+3&DR6Z.i]Z2lW6KV">E:XR_'?$[L)H4?m&a\5>)4TOG)m`leP5-p%%kV%r;(p+O8eU7$@VaJrI>*+W"tOh<h[BKb!KMN#HZj)W<5J]W-o-^,OM0B`uu[`c89Hq:Anu>Jb]=<93IDX8hD<dD1k_a;Cbq`LVQ*k%<_;En#&kUc"I>cu`W.*N#r%(?DB'80$802#Jnh2LE]O2`0QSJsfX!]_Pi+^WRV@,+BL+Pu3<316KV:X\eqFrC/@an>JVjKEdHrNo%_?n.6J?J`G!m1Lh+@8ETfCd@dA5[-^k9=<OK[SA2#iRWr]tPq*dne&@njB-(1^/W`BgSErU,@*H,X$/:V_!Go`k`l"$438oS@`H#%s8A)hE$K$;@(8Qj=<rO6d[6^1=U!%qM[rcHL5;;h\Y'gGe#:>qL*Rl%fE]=t$cd-&*K\p#8UrTC`/-`;5#:p#NtVf.Vs'gB_DKs:%k7'`a?p)AQ1NU2W!eU]_!j3192L$^1%jUV'&u<)R[MIC9Rus_/<M+q4V8+bp=Ok`OiGp+@"HXk+,2U>M>STdn2KD-cnD*&c-s$Us%2#J:`\8J3G$D<N65Q;K:KGiS(E3@r@/s,OMD@odq0J8GI:g#<T9T)*GU8SbM%M@V@\!D<'3EV1S*'kM.OO06C&Yt*^)7,ML&KhUf%)K78RV#O`HkWQ691,Fo8j:Pe?#k32=?Js[P6]b^3X/.99!<j-qgDjBnP$M[$L[uoZE[4$_h<,r6K98<]ffc6cPFs`4>$^<bIP(^=%-RT"0J^-NgJ+'\lkVte1b]*LYTYa`kA-VOu+d2":+9StYfr7p?<"Xg?UBDu;reFY@*tj`rn6XZEJaE<-F0%oJJ<,_oAcn&f_N:&>%1YI''gUZbT#]:6P180=OQ7EKhc:^IC!T!q"N<ME,L;\[o_\`uc9M(5`+AkL9f\j8GE<JOdjkk[A18"fPdL[ZAn[]i3#t[Q5"e@WW%i\:h?g8KlD0?M9g_S$?u;_7RY>E`R,,Y/3`OZMWf<MVll4r#:P%S1:_(J=6a4]KB1rmZ9K73KbgEt$V9pB)7tJU[thbsJbO:%KGO%APr]O:d[nr]++h07Y"V`^bQ"+Q1*D&5iu5"f\$rAOpn2.Y<e0&?"/$>P%D*8kd9=3.\f9?@OB]cjt9KuReORE9&5T3eUd83eiD=h%;LP%gRHpAOj\RjZ6Y>#,k&sG$b3e*[eTJa3h1sWZCOV%F'"<pmb]\?=E9K=p8`8iVDW&@^mS=Wi[4$X8:1+W%@QULOJV+hGV]!l<%BT%#mSV2;Tmn":r^IpOLL(;LO#$i+'II$XC61!;mfm4:mR?ERf%:ICHpMh5Qj!b9c5`GhBh=_R>m&6"s&H:c/N!K2I!GMUI%?7)>%`F"C=ZZMBQ6djNI7QRs4qO5#KP_MT7b)ed%9Tj>:13t5;V?\Oe&k-&>"@VW.4TgR=Zr+'kL#',(mreLKUqFZ6HW4uJP,50Z)L$@g%Cn/eJk%5_P$T*iOkGs7[,)R]H5h=s,L#kE'3-2V%ZNrPO/d;m$E0OOoaWD(:#1h'mZ63j<J81llhbYEi3Db][E#MPeD9+cM^c)fu%n1ce)M#"[pcP;D'Y\b$@_q=X'^o,ZqS1U*'<_O:k0D[J][5lX%E2<;>Vn:M.ZQDP[[Am1@c8[(#grg+fIK]PUo:E@;D;C/)L%Ug5%%c.DmatQHn.OPt*?M^m*l&LP'^;H,,Od\g>KRG4NbYY_gaJNt"#+oX&csUT&\2O1V-K4(Vq+Kk3?6cS&F$^PIPHq*IPIgJ*N2f\4%^*SkojLuDgS$>`q\0'9fd3^K=%f,UX)pH+k9)okVF-<_\!Y(4FlWQq8X[h+^4=V!'G/^_0PPs?h$Kcck?XQA*-=+4pVC+teYFQ">%FDgTYT94I:\-qJs^D,%;0JW^ZQoTA<17G=Q6X>HU[ikG1FV#]f(m@1e75h_=e?ba`3r!k.]QRZh,-O?"RAFJFBU,EOoMXhn7*Zlj%OnDOL6[&tX\g"W*UW6XT&V@rl9be/o;ueXa^>Can&_moM"+<oN9;57;69DQY\9hZ(_<C'h0hIk#7EG0DduPY&R=?7Q0P8E8/gds\%\V/]k0BIP/$jfJLJ+$Z/5AL:hYoT19/T4t+\qK@Rlfh_#kEZEdk&AKiFZr+#_Lp#Z+O#OM2u3Z"d(O$2`;9\q*g'ZPq#m7^gUMW_%Y/DgY'&XWI0gq09]7V4-Vh0Tg!.+AW*aP]gh.r+W*qiQuF%pnMIu"U*@nu)ih_3f()07&RibK%9IX3cakdnRY1^:)j4J0CAD>%Gg%"eKkpZ:/hJ@HOLQ:'RRHbbT/h(tNR[N0/aHgI+[HgEt6skB#kU%2]0B95nHP&g$X=);@HKU8jq7&>;?&X=H2M$p_S+IUI)6lj-m[%1`F2sb/-$o"RD,t4Toh[q8qtZ7Ppu6K2XPW$Rm%I$HNrBQfd<gb($&<\kJP&N/a::XU-Q&duFD@,Y&BNcV$4#k]&qI&`7;^#C7hS%C9qMqK/8"T[s@gE,9W\/9J%EkkZ%$LW2:0:`c68GfC&lQc<V=h8OV$kO[d+lB]2i8a9jNMW=(I:"R.)&DA&4&j<\c;(N+)@=,-B]%B9RF1TESjK/e2^^M1L@O5n)"055?,G#2E.rMBQ4q=]JqYr%Yiae`W#<p_o5>c=aDn(6Gb<!%#ueGjh1%FCA-,aG0%HpQodT`X`8:%pTWL*3O/$8AE&uW3X7LZU#[CR816Iobe%LM3e4]@H3hmk0]?d`7^$PII9Jj\rKs[YC1VR%:-cV5:K;*5?4(:cm?5god]YN-ft47G%@n>1HEtJ"nI[ZMQqfs=.Q"cs'gE"eCfc$)B_Lc(m@`><4)45RD_Y9^AF'[/E1VC]1)mZeTc?7Y>2^!06k($2P6T*_6i*J?0@Pi[\%ft=k,itliYQ]Y10H1pF!H;b"p(CT1Q)h4<1hT1IB"Aa@^q0<id_?alglY\NLX'#T]eLKt<'PVSnk1oTWB_6"&.k:/0c-1r%`*t?S%>Sm>*Oi,h29NGqsQDbjf77h:&b?iNUiQ7t!dpN\s'K9$2TIJa<AfGr.jNW9GL&WK&&&]./hpg@`:e093[H]WS9LI^mO^W"(g)oE/%L,&2c+J>b/Z+1HB<s*d@mZ8,;L"t9rN_Oo45Ll(U3D!LPGt4n6i,3,2UYK<iCSC+n[SG<#07+I]_ekFi9<:AQP+0M6bm:M[DI2S4%2Yq"N59/Gp-[9]tlZABqZn>R4GIm+$Y.8c7lc5KY^HhmK>.-Wr"s-ar/R/215t^<urTe:\PX='+bnkHuBp-6#"ZPK#e\HF?DBEJ\%Pk"Q.##3XsCT7T/7"I_4n,iV@G(YQgJEl[<$bcYoL/YD9Rjhd'm-#62B/2G*5m;>``4h];3?i"=g#Ar9LN#(SqNT7u!s'C)9]oK5%gos@N64Ior(tn):lLUa(Pr8rL&*hFo)3ti_!pcct]-N\U`\"P(!67i0Z0ZLa\-,G7REic\-KdfJo31FJ!,#sLlB8Yk0PKWL,Cc(W%l(Q:U$p4Vkq&4)J>UJaYlY%7t1PBAP6=nE)FU6oG"IFcqDke+faftZI0T8iUZlI0!kWI[;!+DS,@7Wg+8"$'V+ln0f]n3%X'*YkB%Mj1?qAn8.NM`L9g2SI-lE_O3*M@T2q@2/d2^gjuq&_rtN\,<-g:3_uUG=>B<!KI^)-]b%Yj)AMJiAth27NS;@H,Tt*lAmYaVC,W@%HOCmT7u2.eoZgdT!g-]kEnhn.3X8bp[#:XF"@E/%<lfk<E1-E56a50I8>:LeUDAp;`r%P-!1A2C;'3@I[0KVO&Jsl</M&[e/f2+`%pAg8FMaMsR3^'rKdC9@Ell=m!:*4gnMWadN^M8,nlI$,G,V8[[]PJGGj.^;<7=4+__SH&OeZ?KKdsZS=mfn>=*Vou)b@Xo2GlF5b%f`^Gm"6OgsrmbSh&.h(G48(g2>XZm;rGIb4PN6U01.lI4=j=_6`,$h!H9dY)$NBrn)b`+d'3`WdgLY\QWoWOqG&!`"I^q@fVK&o[%Es5utf,t>lYD&\(GRXq@g7\9\MWY`e7Pa;PY*eYuR/-Y+p]gK="lB==iO(l^Si7LbOd[5rG)5g`'@IEdP-N.?]MFtYAX$B^Fn%?M%.ecE4bN*H#7$jq&WnfSa`RcfrX/=!]C!B!.VYO>Jks#ZB`A:p4NSO2+9S^9_Gh?e*0iNN!B&@gN,dn/5?qLpC#'H*`4!Wo[gDNn%%NnSR;SnJkk)TmKuK>f%;9Ad94:I\$`=J6tad)b"029)_]S'O;o.)7*^J#HOaP(8*?.E_RN!<F][i:E>5Gj%:sQd6uW!A#18:4k.B%\J9iV.NmCK8e_o8WBuaU91f@af*`t:)(Nf$/rm!%/IBKa<$bLndDZC3CKPI<9mHePan"F_*t0^sC3f>>[>foeVF-\-05tf3,dHC<%QIZ;PK:JPB[j8o&3$$g'10c:\@0.f1.8_!YA71T6VG9'qd[qd=%<S@qa1rI"Jo@'U*)s7t?u;Z/'\)P=d-Q&IPbHAb(i68,0qUFr%r(Gt/<//N#\tdnakM!C]QV(b#.HT11P<Q0"[%,@hq[nghb\.CUM`[P'3!o)Mm*m..+^=m+34ce9hA%j]%k\E+X<74QVoR$o*;UGO%f8'+%GS5(OK5kbR"dOb2".Vrg@9JTX8CCN#X=Omg2,f0qr_dm)m?rVgpsjhs-d8j:Xr<QBBq<qNP%[P1)9HI(7t)6^!d8=93g$Wn%U^(8^q_@u#[:]#N)UIPkK5,Anr,_ggn:6t+]FaY*@+`i;@gb-:Nb$'2P,k3\B%[%dC[&Ngatn?9A2#:Ya.Q&M,[<Tk7hPq&30AMe%ZMtim>%l$-0oB,R[*MBC=["ckoF@%V@H>=m\uu4GSK-h#>1Z^)MSb80NcjZJX9@sbCNn!"XW<W_*SWc91=FrqKKk-AHY^Yk=F"W<%f+H9CZJYW.kWeBd,c,0kk9u2B^7@10[JYkl/bSMd2Dnf\Vn6(Jae]$LBfN"<BElE9[E2ja^nl#\9+1H>$"]'pQS.ZZChZpA\MP;/%%p1/b%n6RV:0SoJ+m3.+l9t&dQd'A*m2RY-@;0[]S1)"@Dmhb*D4oRoD@G;2a\2lp.sPug_!>k[&6c/1$h(%oGXn<*RCfrFYd-ub%#ZVp;<<mN_-ehX_%D*E4Z:K5$:%IY$faEXG=G=^Kq:]Z7M(:M?2Up8s6<A;G1F/(V/&$n"k5l2p`NU<i\(W_%\[lW]0_6aU'pN6+%Ju6j5fjYS8Qs#<dI7mR)9)$"MPZmc`WHS<D\RWm7ki_\X.0p+"<k-hHF^^(PcdbIlgPr4k#TMZA<*_2QlhnOc1cbaj2Pt@)pKUBt%3Y/=]Bl7c";)an3#iE,_04gt<3WBp"4W.^K6s[aI;YELaPdZLl'6O>`p:NKS7=_4El4t*PQ1I64QWh\/jjnJN*]*0R">qW"_ob%U%L=V6nQYg!`@NjaMe]mA+l+">!Fa8h4mpWh<`e#FD$O-9X9Z_i/-(orR+`KJbFEalP"UT[FN'ua+6Ga^8+URjC%=(:)8^B(6OjHG$%TAKnLF4<-'P`I)&j@apMoOAeBAp.aU-JU#mp\HDZGSn7u6ilEONpMQ'nqFqU'M.M:jbNtPdK1b@\0hZ?H(mP>AJ[*C%k&4upZBj&%UNJ`<BLXI:Pb)@+:]u^p)Yct5,j,P($,IOWNhpUtGQ:dc^GGZ`Ljksd7R?<sg14/r>ZCp&V9j`A+)1\JZu\QBeMXMM`;`J;]r::J%H"D]dH;SPj>t(u`BN$%mQfkCmL&tS;FO4J#=(FU]0MFd@-G,7g)5)i1"f-i&b&('E"BfcF$jDk!'0po1V,Vu1SDH)7\m%6>+@V''%Zbn\0ZF1R!mFFEG$]G2'p.n\e:nN4faa?*5=:OJHEh2Kk&En$I_tY%qTEoEL)50^O14ed;N:FA0P;r,:gFp]OgP(-l[n0bZC&^WS%`uN&UY%6D=55L*%8b\4d=RCPaU2hg:I)3D1iqZ^\ZbH(okJ!pZ_mMg\Bfg$0f/bf?^pM\(fuj.3dDU`nXPqSMbYj2BeOWA7.6#sb%[=n?^ORo'^-`2*]8o\!fX<BU+N=4f<Qd7JSWKuTqR6R=/`UhmTb)QJ/$"#4eft-)#j2Gh;%_.B>;%tT&o%&AYZg@+Z3T1BgMg_SH%9H6YW-)I)A'U6rO\ldXT*KiCXD_U;S1C+.-HI6j`pG6!>l[P0%_r`O!XAE&K$8Uc%&`Q1V=/*ch?BI/ee)[ShEZ1;S+*;3c;iGi;%!'=-#nDM$CNf#$3)sIWB.E]Y<.Q-^7=m:A8K+1$".(domYAa6'In?/jq9AcMQMeBp[1g/a:SA1_+4hKb(<Nk5f.o$<=LPUuNU.@i%mW1f/R7/Vm\*>s,D/B`q2J>/QIV+U;`JhWE9Mpn7--enOS?[#fdLA"Y,]P_3MmKq`#:`".a*9>_r"'$?RJ]]CS;8m,58&B7C)P+t%p\jtu7pnTAGcG2TaoFJnL?pVGC^ca?FN&bsgel[>*O@cm4?i,LML?ANao;*Y#0Y[n6chcCBM]]t!GU?[A*2)<n6jVFZ!@"o9E$fY%PQB9n:fc'\@CoHr/X=rIbiX#94prq!-tQf+).?3>"294>aM]OFFG@)Bb$YF>loAYOJc9F3]$'tIWoGZm7$/R`61SOHVmI]i*Y+UG%$G7Kd4gXXLEMfaV.@+>m/IO3rZLD>lk#(70P0g,ekgKI'M-j0`pH1<%aAeXj(37o'8fs014Y/1feS/gF0]"U2::pV"@.tH8CJ"2)%LCAHU3f'nG2%0l[V/2;4Oi5QpfOtjgW%uBH>XT2]K:[s]85>D:&]mqqhahV\)cPdSRP(d3MdG&*lAA0M]kQNphOI>;G;2\c8]/Ro%ZW6Gb1!-Lj=6FYP0,s&?"nUPR=jEMl^_CXDeR0G)R/B1\*+(jcLUZgG8=k*#Ha],ec"BH/o%MF9D_l@ObF29<)7YA7U_Vu>`k#cH%UD<rs(n#PUN\Y+`79TYTE47OF;;-qRU%dtEaD%S@Dl2m@bQMm3WSZW[>"+W+^=uBi;)-ERK\s)9a-QM%'eZAer6J@XEI#hL[?SIq%\mUB`?\3Cj#3e6YT.n%,,SNKo`Bd$*T]tnu_,7Ud3,4)IiX`P"[2QL^rH]Yuepqq]d@P#U<#%lXaG!bTf&:dJFRP%d*]?m6$,a[f%,:EIW'88DhLH#X-CkbRm>NR(Wp&Zn>!,&^-,7HV]/YN:T.j^e@4eDM)\j!CP2uIhRaqi,Mg8DuC`H/pd/O*Xcag+/Ink=/:HZ]*)%_p0N"Gbj)fiD</4R11qgmtSopVEeZE[/jJ6nc4*(^>*,o44KnhWq$1AW3phX",%FVZ-Yh0nV=Q8Gf@A`MgHt#DDQSk[cNJ[3D$l]%(T9"ol*_iU:J.Le(Qad$GOV@9nh&\,TY+Ob!]B0&Qe@;DbmN=.A^0!UJQu+mAo<j&rs6]GqGk+u\lLT=jSJNZMq)LQ@Ld,>S3tel%D1<S3Drr+Z,dDU`[7_[R183i:SqRr`*R?%!-Ujp7gm-C`ZNK;%Ma(X[(dltP@8ZaS3iW1f@/-hp>\70kFlm\oV7\73WhNWkHSe$V%:;`a0.C6+A*b&B<3c/U^'Y^4q^,0$Z1Y0/0*qFMgq(M,[(boW::t.m)[lABWV`S`(LoY*jYtsDLk_e!Xm#][Tj\L>_],rL2osTW+%g13+O]8"!'I(5p*hK&AA@8jT%2B:!en%_%fj(ZC)7=UlIC)4_uehG"*.h2Q$:Rh]d+@Wor\hWN,\\9j-WWA_K_<mHXR(NTB']-\H%>uf-M0Ot]]V"^P)4Gt^nOc4"#II>!(ORY4&q)"h[FX-NlEK(fXPD%Fs`C(Vgcj,Mk$;6hc8B#8!3)uqP9,G*7WG)2:@9<'_;ZGL*%E$[m.4:Yt7.i_`IN[5Np0K!H:Olp15S(UhJA?664Mh[3s`%]!TeE>:4'L'S._Tj`l.Mq+"63F+NN[;sVcb^=`hWj!TE@-_m&d_;0%=?U!50=mjW_bel&pA0Nj^>QL_g8d5]@_s(%Cq%)JQcG&#3t,<Xd,WXS#NImM1$rQ)7Umomi_q[O`,Z0Y8tn;3i4b[Ldb<+*GXicV%)H!F8',cJa(Rh,a?n!4*fh5$9(Q^jWH=PYBEI=SDiGVZ0$ce=:j0Wl(XVT^oN.k:K$gmDd\!0<n2&8i#bl&jWo(a2qfjb?9<$s'B%NHC(OODoRT?Gqn/J4&i9*sIKhe@R$G7;ISPogmWVO+b6_+)JqLJIKL#/2=AFR=Pj(\!U%#Y\LPb9@%/bAol!q^F'rSFu8omfPof>%GAR"h,/A%>SRLNreWA'iR@?,6TRqC)S*Pef':!GKl($9,4Edi#NY0aY\&X1H?;RQ*dY#^A337+T,NH]JgE!X`=0FX2/l'!)(ZtLb%dRtL0bbdKa%%X;\3%Bf?!Ci3(i!'A_"i0RF3kuM;D:dt@F;kWQ-NS>T8p,GS<LBH924ZF%Qr0M:rtO4U\mR)u)Jf#O6h<l<NAbGk%]-V"&)#t5aS+Oc]qRd;L"j99R<>[)R=-1a43pne<pQ=))%dAl][t&ral!8,`^9_HUZ:B!NL`SQeK,V]5:a$B:NGZO&IDSL_JB=0d%$YiA8_]Ym4#,;d7kJ2ZfZX#tP)LJ[j+ZEW4"ju%bSBB,n(u_Ct2.jb>=HhSbNCA\165oI*8+lbL4LJ9>efXk1%k)G'#jMNBbFog'%BR(OK`GAAG6+QPe#rVDabE[K=Tgih8-`D#QX'-c](oONmRB7;LdPj.]BR(?l;kfh;otf%+rA?%O;Eip\9l"?8D`$?[/HH21Rg$id%dO@4(DaURNQq?J-*0o-f80Q#eO"B9Ild&OPiS8I5)_5b[+.:40TaWGE^Zm][QeT_5ht!E*G[WA[-\lg(40X"a`ej1tj7g2.>^a1k%Zl=e>gNIkXp%^#l"/fA?7o9oa8d`sMpE,n#?Q8Otqj/>N0or7g_ah.ODIrt&f4Y::nbWO[-I)Mo!cPiN0GJgq@NQd,Ke&22W+pmt%R2,Nl=m4FCreLP)hU5.V;C4iPRCmgk?u;+_C[D`c(Nril\T2*nr)6L(qbU<F,./pM&m69(k2,eL`M4K\UdtXu);8%bA=KR4C$%g,%]+GoP>q(nsS7-"F[k"epS"f0sc]#sEnWoo.S;6f/AA4m%1F7@QQ>#<ER:<=XaDUH8,c3%7ZFbmV&?4:6dFT!TkA0_:/Xos?M;5%g%n!Th><`mh+J'RXLm(Cq^>(Ko(`LNS^ilod427"_K$T^^LoN25SWiES0.]:V@XHF@iN&`1I<,:?j/4+c6D!Wcs@ZZ0N,*SQVFYFh@%MeVH920Eh1SXVMrVHSVd]#%)UW^fub(PF9D:3:jD)*,8aeRmKd'jp7k/l-8aeetCnqj=tF<`k">P@3Y[eWnat8&g?=?qfh*3gXZc%W$)b^4NsY4_I?4%lXLltErLY0'/Ka"&Li&\\IDhE?e6S@1(Ed6QA+O#(%!Y5/*nBB+`e\pr7G,,(,]''A5Ql8F_XtNj<\gAFI+Q)%-t"dTT1\?^K/9LUdcl\ta[/kIV_a@N,_2qYSr?!IQ!U9uP:81#d[PNZWii$^H;aKRNTNhd19YiOd;*o,Z?`Iul&K45Z\0#p8$@6\%/W81jQ;?+(TQB@>?1#D914!6*I>41="$%@@@C(&:,RLqfl#c/^hik*aV:0u^ct9_+/\<;%A*"uF>NYK>]6XCIc_kQB(-"+HR8'6#%2RUDenSYBt32N*5:Y^E*qTmiTbNSr476ef:KAb#=h+@Gf]/N<ZAU*&?HiM*V2m`BG@KoC!/KY:j'^c*"Ee;'VJu:r_-Zcp<3GodS%L>Epg+S>)D;'se22\3,e5B1^*Aj*QNQ]1'"`puH[q9*PV4YfT7M,q5h6YPIshjG^qL'-E1ouG0?g&Eu(+qMTa[i$]Qrbq6cNQ!)E%54^Md')b3/AN!qgfmm'fqjoM:>$Qr`:[k;Y&Q?d`<-J<kp5(PAr6uZ"V-'_jo\uFe)osfUMcI$LLujuN?0k;'AJet7_,$gf)(_PI%Y^q\uJn:=,7o2"s.6*VTHU49)*-<FRcAD)/_Nf#G>T6^C"1&ppbL3"U#moN!)e^]<GW5aO_;]op`KN,]o[F&5^&cQ1VaKsHBs^K4%Sq%]V`H?a/_5nmmLEB.JEs,0%lQbiEHKfE>hn^)cGRdS]X:>$%caprfX:7!@e;:QP\5N[O6CrG'n6b094(VmR;\uQ&)*L(W_Fh-r%MT1k"Yu;EEGn"ug"+bkb*bM_g)c+g-3)o`gbB[+TVe\9JLu1C?<Yq,B:7k_cb/<UIrq59"BHKi`X:3]sG4Ndp[79LeL24'-UBFL9%5,CUs#rOq^>Ko8GC)9@1MLni2PB96j&AF%<!^gD%bQI0gY/nsE\'C8Z_Jn2<LW_`"WYAFU*t#Yl5C![`=c_a(0[f(t?U;>>C4i3D%'nGbZ3k5<D=d'XRn%s+8ZMHdgA9$VaM_J%tjVJnFL+%r`123goUN-r+U`gTCm&HC*)h1=F'fXsdVVS8/q;A7YP:HXfCmnU4R=_tZ%#'2.(](pS(K>M-E@RK>r2P<CW@dp!'&8$/I>7?tgYfiIkm=7GZ/Ns?EB.Q,K`&jmYep^fa0RTCOMp%8]lo`T"He9P/MSfs__fr/=%V@;61]C<$e@3<fcmk>jT-SJl*"gC;KNBA="I8LD<6XUM5.s:E/-E2<RhIGEsb/+;CU%q)N%;0<BUcm`On)0ikHGs;p,JtAPn"OQM%8_(%J92NR$F6%]0[PI#1Yj.coA[N&LVj4?T(?rrIL\b>"bLbkhrmKs8=GZ*rgBce)q7QlHL_"S.rEuW6@%N1>4RL=FTp10AOpJBT%5\?QL!o+$6?4p1U;48b6]dZL`6(sEgVXT]PM^90'78#/9pZVFDZ)Hu4@OG?IWj/M!$tO0p!!+eDKRA'`Pr;2i,/o^VENAoU62"+<%Zq6JjUBD5N'"0XpeCR.g*."**-5)eG0i!3#N6kMMPn#MPGg#j`l^=IFJ3Us:M]j+X:EaEXjIR.>Ops9Cqr44l]bn&F3))d<Ak31X%@0H8Ymn9D>AR*_JKrVQ`:N`E>d:%ra_do5U]U+lEJT7s#@YgDjOu[Z$C$?m?*U3(M,s)h;_]JrsOKNF>ZQ-r;U7YHR/-a'n@.uBh%:70;)O-\Eb[cm<R0Y\lXY:Dcd4a#$f$Dg&*Wt^_jhlF<j1rWnkeg&oP1F4.'AA4(QYF:+Epg`3^MKrUP-%p(:p.Z."d3\MYUR)o&%,iK!]-uMUQ\tLhqj(,T%J'ObIf.kcVfth9P?b;--Ortng2mGC$+UQ>i6,NZsjEgmUpds]&((ujPP_;jR,d^u4$!sZ?q?6gt<KTlP%-)Ak@`*QI?[AHiGn@h.]L9(S5IF-uU$p4K&mCZ"]e+rscakS.0`KK+iLB-s"-fZQUePC!B`=8bdXN4[42bcgQn09Vd5W`8`#0^S+%+S&mk?;"#\^Yb1?&(\@BC8fi;,YG*u,t%R.b0^4mU&N^^!Vu2!!&,\_WonQ[BX9<=.7)SS.2J$.Ni26)PI]@5Hj'gsn$8rUb-,(d%6PFpm5$ZHsL*ms]FeBf.U0BVHOK(mYT7o.;L!!g'0(pUlrWP`^ZP4P?C7H3`f[TANC4A^Q]1C6+QU!!M&eGXI@$Nlh:'2M><#\+[%83.)2r`2am`6ZP?iVl@7"&KWN:B`nm*oCOHC,6=NoRdPe.O1"QQa*FsYpel+_ZESp*(>&l0l9:q;UK^2(.)SP"?EE+M*'fKjt=C^%`:2YN[1N,nAI#*G`mC1!:b>&"&BPc>,dN"=;>Xl?B2A_>en9Yp8aXIn$88kR;CIWTN?F$,p%bmRd0H-,K;.Cmd'<;6?r5@uB")em%F^[.@9T6Iakd<T*o4X#53Y)j66LZnXU'6M$UnN(>54&(;C[N+*+NsJRp&erXB\_hk0WSHjL/"Gb^BiOM:ig!d#t+l-LmlcU\p>IY%=Kq8i-=NN1K?khgLLc2`J^b4e[afC0o3os%)`\cY=nd#3`OHpNL!>pd=q)[g<a*":!`3f$`emHW(:Ypn3LQ&S_kt41Q7ij"H(lY)%_BDZE_ZX7!8O."hLiAI?fSpGihSG&[T#+4?Ik-W:'Tg4nZ/Lm#G(PO3=\gSSrrXQ,%oI:8kF]0%;2U[0VMM,11s-:(bX&RIF;2q$%Y!G`c2ss#o#)%8'UEs-]C5.BB==5PlF6]l#`b'as"iVh=1'\[-DT]$gg4$-RTtQ\FHCg\&iI3lW!un!f]^qXOGso`qMFfScXDeC=%+\A,V`<c-P;<?RiOh#N`+Y>(AG8_W3*fF($.iNeC*1bQ[VD1u[3XJ,RK$;S.mQ*d,AOqH]n%1DY9fEB,?Yoeb\j;rr<RbQV6-rhU%5&ne`K-irc7T?d]CBaM*1-,b(\W=ulREa49;cTC:B`S3^j"b31(SF43Ik=5lf$0Nba)F_&Y*+Wo(_ZO,]&o/QF&up^aI`"2pA-^6%m"h6*rZYK#q$)<_4c_b?MVQ_`kHMGb/mGO5..lu3ql$0DXV\$'0)Gq7]/@LuC&P:*6lYD5^?h:09PHNQVahJaE_e!f0;7'Td1A+,%l''dMN@!J][-3PTILrhED]]:@)1-Fg<J3*:ZKt9Za6LC+SOBl%WVU%@!"_ur;rs)aapq_Pprbo]U_U8R1aJgu$TDCAH<?"g(hZ*$%jjJlo[/rm^ikYY[XoT*$L<Le;3gU7ENe)GK"Zp"bc?aPJ*(sd$*l\r>a_Z\D"TD?O6c'oWMQadK^>lH;s/8n'*Qa8D;p.d6dNR:C%o9fE:Fo/.S,(:4$B2D_&V4>IUrZu=]63q3^\\s]\bjpbCktsL+%:%0@Z%tnL9oa@%J137:P6doC;S&daq3X[Rl`^iQ=noZkB&>nm%.krAn:HJ__f5WV4G"J^>[e*ap(V,Djisu0?iq6Z)\"ASpe2[Co<gW0MaKmHd"2%PY$Rgi0V%g[^AdQ"Qbl+OsN"[c"9/'Sl$TYj>%dM)k<kA6XfTK^)^mb+h2k?#j^6jEIQX;@?6D9?8Cb@noO6j&aMkWSbuL4IT1/-`,;2?uMoZPtU!Y,8'C02`T3/TELYLnMUR)Ra5@%^9^"2[U2[/>L_H++U%69rS+;(!3D"%lm/DVm-8/@+nC]WVE:?O)*n%/-64LP^STBh_i2YMqt!JJA[5j[G*0VW1uLhme^0uW0t]GY%kTT0"8P2e14uQ7g=d@#s1*^[)S%F*J`)8gsAV428`4:EGDJ5nqrDDcp&0r,kWfkd0VNM)"mE;Mo*P+qdcK1M&mT`L>IdCK7oE>Lo%\q^cbB+i%3"X;Wm9qC)1XLkKb%i'J2Wt*+SV/O7((e'bE,o_VB62X)EC@ffZn+1#%OAATD:oq\hTdrAGQ)aou*Xpn?VMK1a=J`hZ%'=U)8%+,Zr?jpXhd5(rS_1`t:=UcF^KWU\W1'VO#MS7oZXKg->TB%72\QlGA\rcj'Ht`,o!Q$fn(<7YdfCr##o$iUH/2Jp5+<Efq%f0V)5iXYJ(oU9;$'=j&l<-GuC/tM>q0(C:C@UI2&,RJ#X963T]PAX-iJ[5L?ddL!P7kg9_a<ePLB+:%Z*5#q>=s97%k!ka\S1SMg%8JZ?WA;4@K(aEq,O@t%:mi-:-RcrH5\]!]PE<m+>08&TM/1&A,$-b\G=d9eDaluKR,r%>];p=IKKj8Apb![k/[GT`#bK%okOc]Nc%=tLj=C]/O@I@mgE$h-%<*;b#R/)oqsD;7B:Hkr5.>A\`P]Jo2'f1r?Gl\3)i<8>q85ePXk=6,O_,HDX_4mBhuF%N*64M5m[i-ba@%=4F4%MP^OU*1PbmbmG:rGcdCohTam:Ydl(3C4JUW0,\@EGlSD^V#-);jNfQ#/o0![97,rfo;eVoDs'6e&[_LG0oq@:E>$d]Asglc%170&HIsd3#VdVePQYt[J*,II5(SOC$l*3-'S+GP_fs9RWQ+3\]g`.fb:t!oXe5`&-J*=6G0V\b+q.kiKarkId&.Z6MO;(h6!WN'F%3PW2GAFGop'kr]NVcqNf9"PoB+Ba>q8nVpB%]W"_,8RQ&\/A+L8doS$W-Bp`(P6rI>gFreP-T%iW-"g%[6X!\"AIhjn8+8)!ULGV%N*Iftcr@=``%YAB;takG,&u?GZdIXB,[ZVI"fLdj4<HXmAY'&.1h7pYoV8<t=se&?LWL%RY#0A@JV6jnY'O.'jq4oUgS[E7^We*M%]T$>@6Ggrh^"*7/!7n2Q4$KIZ6)&*]YWcGXi)%lHOaTcp'4fU4oO39E5SB)0duT'i9-Qt?mn!1P;)L4'(hS<-"a>T^<2R-)&Hd\;%*`3se$iP#IPI/.];;4(4)DBX%IP9]Lf*&/&rd>N7h@F"UV_B*b-[o"F]:I5*PWi(WriMoI,X<qq<#gkDP!#1]:U(D$KV!0N6mr;j%Y=YZ4cMOLW/N=N;N^M;8d=M[`o1g3,J5(deNVeM$<fA$CiD6(f<R='?T-LhZ#*@JQ<iCri,e.5#)"4m,)Q17U,9m2H;R)UU-%Ys3%RgEbihCD.RQQET$-"K>-E`Ah4OqEK@3(BH5=f#4%,5-]eL.]YKpQulh>T&fkZd`Ap1]eNn<kADa.,b5(%7h_.-X//g&_RTG$Ip3K%$QEUePX8Go&pg:-Q'/u2@s:-K#`bo``VC0uJ/b)6p"A1-]T\`4p.I:p4jbfM,;3":68;UTs6iYb6s=;XR6]u%lVYfNk0mRmTiMW?%J=fs7r4*E;\(?k,OgI*m@bnhs<&Bq@\Y^tf$IQ2E7VM\^V0R_(:b@86[ho/e,$X$_=$^iY@XV`X^M=1p?Eth00O1S?aA>@)O.d5=%V_+srSO+rD%ZYpI=RHHYO>K7<%Yo`lM3[Ru#Cq6)U.QVMb0]>E&>Ht_7SA9-"!p5pOnJDN+OmeR;XMW>Wnf]_L83%QXUo+kr^-g-%\K1Y6Tbf(ge-&QsMDuZ/@9L8n\Z\^cR+dilEi?Wa*S-l3+U^Mr_I[4djA31Fg!r_A!u$0'ZoNe4!rV*rZ]<\&.0p@'((;&6cGI?d%#Dt(a[")uDO>kcV+T_I%_?u*\S&\Q2T:I<9/F$Vq23mgXH!uPq&+bB+fgPm<0PA`dEtk@8FjEt;Rinl>>NW]&"[KrB2Fg&U&DTr_%S\JsS7H"`FmqYc1m23<O@*E$0h"$%i9"N$M$.)\-_9m%n+TA@#QtnW(H?]-9LNCmYFPG5:Y.]2(XprYhJ*mFR1_koF0nGJ4drh4X%9G>kq2fL&>IO7o>%?n=tDON^>YL@nk9F'dp9;[ZP;o3W2o$04mf?]l!rFD^jNUNfp/=dt8l+(O0Pg$0$HrYoREcn5Jkpu\&H%rmG%R,\?UU8;CM;!XZa3lha10G77,CQqT3fpCK:Si#E:AC[jTN\174?ob:i?Kn,I0qt7baU^HOf/)n1ZKPfN54uKaM^&,tSqoc?7J0db%9+iQU.J.uDc&gJD#_DQkmJOYRE[8a:*pQA;(^\(F\8pFK&u&N]$AujUjG>Y*@,OY<S\:RY=hBm&V?e)93RfaF`<[UFF])(IYnROW%e?9W:aN1^oCIc>B/eQV&</05%E%P!"f^Pla!CYLKMXo0i?K+o*G&V$Kh`qMD)kUm7$+'38XQT$e<BrSS!)5JF@5c#K"c+%ipJ)Or%r0W-qg):\$I5*N46g\4o1);(D8)5^)cu!!aN.'(<O<oD1,.%:(+oVZl7E6'AWKPB%+378Hg+=VmC+3.b)O))pURGZOca@;L#-H/A%WAk`10@J5%0T4WVlXQ+AaQn2TXkkrb8]I6h\g79NS).\aZsNsZ\8k5r@O9Z9CH7C:Yq:8+"X<`DOk,i(hdbEVZu7^pD6KLD$#"+\%_V!?Z^NO]b>RKA/D>U;^f$Qa#,dPGgq#Or_rH'&8AfSSo\.0]V)/(UO>epf!V7I-o3@7"bY(NA08au!G0p<i/,r2)rM?Xfjl(OM+%dX/(`%iI10YGZ?O&$hT`ntu;u*O?,!X3Cj#M:P/!oBIG0QZSd12I!$j:i06(#cC4;B@-W(Am0qP`Z)$`=qat\],I^o2H=C9qa$]=%HuS@2-Ek!HReg;s!^[RE>PGOL(&_%bGK*H3X'1Oqq,'lRQK1W(?rmj#B)8*gnW.5MR(`#3)-rTrT+u$:$%?gi-f[R![XV24MR39/%pSi).59:a6#0;)KT-aRSD0ecuJ00hK5/!V:F\0\)4jl2nr&2P*n<]H9iML-D_UpJH("m.N)*]GPjjl6FA%TIk=ffNuhZukVI?(VO%^r2&+F/(Wq0d@DNl1(-!A^FZ>A(j?emJ^LI"'UK(Pf+XN:K-5M/n'M:e#`JG!m!Vg]<VR,@fAen<!fJ&RQk<5!N`#K#;Rp,N%T^B%T.5h4/Y'n@@I[*6EmeXd)q2EeC,6Q]Ldu3cetec&A,Q)/iC,u2Nkj%0YW=!S/.8%%175=RE8629`m7!imDimcG88--680QeQ1^ou%")g5.697aE+Q$u<dfE`$MKp'6\MgLWONgB4O=XC1cH9N'O$?E]Q7AQ^(rbkaA+G.8a@W6CnmTe,[i(U1Vp6M%(+f,qAP]9hZMAl=%Z&'OY!`,UQ_!=p%Jk$.HW@#'>5d2GnURuc+%Y>R8JhiLX&4QZD:'p(`J\<d.?kjUl'Zo/P'%Cnb1B3AoErWT$>*9Z>AV-kRS:K_E%"@8%el3o3WUfeEFDh>?(<Zh=,_V`r&K+`K55F=Q])G9:B&Bn%q5oYk*`=UOPA5\DKN.]2$hkT/G<1IEIS=u:ikKT__Do[E/fcakL%6NoQ?D@*0?o>ho-(q@2"Q=F&V/kguMh5,K^ii[0&&$X*@AY7Ip_--I3A(kfMb[Ni_Z>]BlS7->IR_3'\]pHD)!ZMME%2q3;(>#HE%Zg;uqi,iRZPKtah9%oIHgRH14AH=d&$oNjG0:(u`%9RQ-%5WU%*B;PkgY%HOLOp:Q3+e$WC4\ORZVU2_1/6r*ncnFl1%V\k@<ePL%d5$B[Hgqoc\Vr?iRGQMuQ^LC\[P+\bh_o8?S(2B?&O'NErQET5q@$0/K"ab-NI#n!hPPet0Q2usRlb_9RCm#e=2=5\[n_%mr)1rq%h:MPglocB+Z8ULG^GatIDT77-5Am)_gY?QpDgnd1Wk/#;D[pbf[1dboSt>Ves*aLeT:Yrkrr,]lJ4C)mj&Nia'(s_lh999=8`qtA%=jmS'h@/gr$XgFVhX$&b]9Qu3N0fs0<!d`kA250H><)]g`EY%8"[psrQUQQl*&uEdFa)c&P?_MF-+b;#o.+M//m.H94U6Fe:r-p\%,%Oe`7,A]8#.FJDBnP-^0e]ED_KVACqn.d</]km&]Z`WTd.E@V6#"uTH,l_eqHH!WR`X+-K@7`o1Cm)&`OU;.ZPqE'i(qA_dgeuO%,o/Kh("Id&+!,B4Fe.H!fh:<ikt<pnq1_9<?=IHQbQJ#)f@aV>+BK!onk/&SYE2i^7siWP]]NES3lmmMo[;p]X@cBBJ3K'g>j(M#%YWq/h$h4L&R',^-'"Gm%fCr<=9Z;@YPFuUC,FCC57,V?b@6'7g`LgXacNrD[$MYAeHj1:W0unWO;Gg1mTX9h*M]XeoGZ63Id-n5l%B8#4]L"KlMT<AidU@A&g`LbJ>>6mY$+e*YUMmM2K0lIXCF?r.^*nRrVIbs'OO!rF$d.BO+UFnZY$YdTSYh(Zhp5GWW8(gM[frMi"%]^Cf!J,Xc7_3N9PeF=KP%c"a1LV*$-r6m%&TMDi=ohcGFbm_0'qqJM6H^)kXSWQXS.'Zc=9KLA0<(I+m&PtssUV52<2DuBl_HIgC%!?\S-AF\!Q_OmHd<SmV1OYVl1I;EDr@0Trr4kNA#hM#Kqq?F%*m/qE,9R&5rp]>&Xh%0e%Ya[S)#Pa%a8]"A%f0BsA&q*HD]OEC+%G`aVm.:^PB8%Lt`%8m$l]#^UF:==h^>3P2o`_+Ml#4Ea#0aC`:Zu_*oLn[)1A/(2f=N<uh90slemHWm8=c+EE0].tTA!G)Eb!-MS%mdqGrFLnC6g__;gbfD-e^A(Gl+\/?sKU%PJdSpRP*bhC`5fooC6)Me&FZqt%I\YfMDU:Xb4#G=/NBCe3+<YS(M.WRQ$+7E!nP=C3%S[2]So?H.(9^sE?#5McqR#A;,gPe]7J,.TfbL13:['X7C58$7q8hug>M$HLrcmNVjZSDMl9`>8HL/N?-:fZoslsU;7P%sGOcaRf)%4jfogf-c/V9]:3]V]J3h\ZJFMgH2,6e7:4t5]hHW"VtWLE50=YXBI2*lPmZ?OFA?2$SR<Ad15i@,`i!4.3$u/lsL2^feJ5-40Wm-%6nJQ?V-qSPXCCkU?K]bWC)>%Z/cd&lZ_T&XHAph"(nXK*&=`pW:osH)OqmuCTj^U9+GVEsq[n6(3E%JiOECZ1r"^PM9gGi`^EagF%OFJb9,<!59;poM!.UBrbk#0\l%!\It=Zhoq1/qA(H'HQ'!QS0H6/==s\]];["c,pGbD9c32O,Sn7#l%VD6b3+j'<.5R%<P'RH-W0%Tp!!g-:<cZ%u&Ih/Sr*c7sbZD<%T/CDG2Hl#\D&h,@t$J",E*eV9D#sljd=c]j)(.s0DAqr#[@U*'pmi:Z>XTE>E]GE*lODRb`C3%<VG''06jZH5C6CaUtcA[[9_G9TrMd^>HR4jCIRQZ@CPZTqa^4hiu6IUK8N90qJB7[9QBGg6m1hRgTN$?5LR!>;#uQpj4a<32<i`O%J-T*?IY*ZCLoL"/N98E/(3?Ke40dGBFQM,b4q,_?BE'[Aju#P'D+UWqU3`"_>na(02N8DZNFf<&OLg=aZuhd;rS'0%2;WG$ZH1dC%]!U12oGSMmRQY5.)$.VdGMR]>WQjUQ6Ue>jHU+pHmYYBgh7QU(1RPN2m[^.7T\&T'+7C6$DHXCN;@CE+m2!>R<a?^>s.M#u,`\Ya%-HCSurAD-h(=#T?A9b:Y3Q4\PDg%7!ei"#gRC4Vl9\;Se@=N"V/'-*)jK83nYj9J&)9+L<k#;&b@K]hB3(SNK(3d9CM:5Rbrtm!h%*SGio/'m?p::a_XCZ:f*9=r<Z)[O<0TIaIWHDYOXRGYuj73T`U4OY'g:3tZ_[RJ`.*RhHQ27bMZMn2E9Bktr!)QVlU1tE@H4Eo1,%YI>ug]bb,[dkO>O4)+H7HYt;[m!NWJbbI6aI'uf@hDu%rL?=l3E1\Y%)%9QAUr7$+5b#MI:7kN[>Gh!,bHD^i1"+2opIneu"%D@e%A(j76NTQY;pQ^"1Kg,W[$Lol+had.R3/'k`1gOVbjTi2s?%?B_+L[1^E:31(DW"p4`?PZAb^MmB61<?;JOj@k5)/lS9Xc]B%lY<k%GP.;2@5l'hH,eCXEkD<SVK=CRq@Co_B-7)uWp-u]s,5:s<qO/.@)#QgX\chLri[ePa/\EiB/1ohGE#l(/IZDDcRTC&Xsj\g?tlCN%<0_R;e7G.k)l/p:Yb6p"^GE0$/@=5FBY1:jGVo^A$8%[^+GC$A(hrrCb]]j2X^U$uSaB`k5f$70]WlD.R^h#7,8(333DmhM\XL77%l^9<4PDk84Rq-@%6!H9:SRtnkK4Wf4ddUiV0=LV6,,l1hUEN:.I7X%1*tTqT&I)-&D7'8^V9?]49QiR!XQ0jBIc`YSKFt;7/8LX%%7N`q<]lE19+crEV40"%@-j1r^gs"]NV2$TLVF]#*qQ5Zd[]8E"IT]N>H]Dk58OlT)+\poQ/lqH4K.iOKIsk^%0ro.0OAuql>ZjXE%5G<kk@b7^!(h2pY>arKoV0W9RJ7E1k>\cH$=**+&iud*.je$'sL9`.a'psGCPJJ?8=bdtWl5t6a2+r_2ZG"CUL>Y>t\eDs^"g':f%H[uKa9s/::e@US.$>J1BMcIfdJGgsPA&'&^`/0,Q/?`VX(CP/\P;@6jO2Iu8W4F2l*d(bcV-%BKEK#b5.gP$tM*lo/Z79Z7\ZMnH%G.2X^/<Lm_eKRjX!!I&d.&Tk6hFn6<c.TCY8<mpk=Z\eKH?SV$cB"[5A#;O[j0>p!Me<PTNPqD$Lk;(i8*Sb..S?kii9IBf10SAW%A,]IPd#mYjkV&uddYj`dTfQc:"=eAaJeHZlKAai-%+eBV<23#r?SLe1m?Z<!Ogq5X4OMT[\3Ufc<>V'@<M_Z$WEM)a\kK<l/kD+`%Jin?C1mK9C6a+ir_!a/HX#Q592!.UiH<"8o[]#Ipc3!7%)u7I+^mIrcmD<&AXiX*R*c%lMRs/7UYnH[K;k6$WAYWN5BE"h/[^R-!%V?M+;b#iQHNpPJ<#ume=CrWL05NH0=8DA8[MC&PhS;1%glEKt]i=+L&2.%^O^bNfs0npHFXN>m7>VXI"?'^[)L+bWo?sRckmK9"C%f3I<)2<4V#h!pR,nJ::r67ATpnPBpV5o'[%A^eE7PnIL7T,2,hP$@Wb*d5:'ephsUioripoCX.RI=$.*,%B>$[#EHWFi#DcAN_Q5%/_m\cSiL`/&9)o7Dt1Oop5`@.#C;M)@c_.JmDU>P$kb9[7Mi6FjIu.P>7C(qC0_uRc<QUCSu+tg6(to[;+oW6&QYi;6-*1/qW?A5%n_W^3#`!U6'$^-pNN.k)/RPPRB`<%mkd2q6:&^d+7#4.+ao@ml53^Lf4G\cbnao8A*m9kSAB^/dWC[3%SY+eOfik2hiYo+=gXr_9%TVr(tYqrP&@7`)S_63FD>$Ss+ctg652UuDMe1IiNXNR@p7JcYAS[i3saYISM"BI.eB,KpsD50#tlB[J.aB3nL^9!sEX9[GGqqP%C%h,0X0?\3=H#3@u+Sto,(QXiEQ\Tm?%%P[k[,oEY,)!VE-]`MAj]pa_iT$Wji_qb="-d7lFZ?8uK;Xk+rG3LL9`2XL]epB`5d:Ok3%,Y\9t*C_=(fKI`/W0H*B80/+&/_EtJAp;TK!RPih5b$K\4.*CrA91T4)rUQXA`&#Bena*h>rL&L&27PPl=&Zg/@hdiSHGAg9(s?j%IY4eq!;DNsp]d!r"pc$<?F8rUd+u_&T_V^p@fc@#OM=mWP+dCg6NK]ohc^&5XBM>NW5-bIgHuKIDCt[nc1>k+9_"+=McO6<GW@0Z%LLajp9$-[r!P<m?PojX:m=4jf8`e@U(UFS=/X0bQZeaso9u!1VCieOd!IT!*]X:qp;qHo(3Q#ajP8lEg40DFd3s_0ZCtgl.`S^W#%N#"Z`q_cY!inDlfh<4'IIS_,lFZ?,&k]VQ@Q$6?n/.39Mc=0$)FC$=14:[)[YB.s%@In+RQ"4bu9jT:XInW"Wqguq'9@k/`LqdZ"%6\`5%>K>7:QYm0h:L4,-.mpT6A/%2Wl-a*^33R<XM?[%`Q]$PTQgVj7)/\!pX@V7I4j\'>r*@/,-U)&A^Le)tY'VNS@uF\;$SZod%qSPi^=6lF[_dr-'4>J(SL[]r=1-1[";![g,(3$5'4$se-aM9CZ`scF1r$/>:oGN"CGmS9jZ/mT#66-Jj'H[m3$(AM\<Z$@$rbJ`J%X,kZ`/-Hi"F/Mfdl<AJM3+N5]Q_.h<&gO,XgoPeo"tZ1omGOo6DE9bP';<S6'>?bk7BhAr(lPd=?&0=G2e'^!fSie7RW`KV<c?8)%JNKrn\jP_fH@.89(iX3_`gP\WnEf!up"giO%&l5Td"(Alj,"Q3EHpL!C&RpdErlb%3uCT.[//)lY$1;(C=6&4e.A@Vg\ac=GYN37%hom=&D,Q&LH<$^BX<ju<#2$1liXcTN[LP\8V1,bd/,IRLDqea)*p(<2S\W^TaWGaug6''UE8S[0Ac_>-Cc!cj:WPnqGKPU/+lT$*%@/N2]WAk`ee^pgZ0!K7d/K[.ZZ*qn#-"uqW]'*dVJ%_a'$JSO[i_.e_o,3sA`"E!<_1oN))to*+hd>hlMe?kD76i=7oi^p7*f@/1%*5"e=hVV\+cW<8!1T^&?chTAkjH^U,L[4E0/D,]-lWADppCFL0'ju!*k8iX^HA-ss6.R:IG\:%%ie;O[lZ9bdc8Tu/Wgg.Y4/YZX%d*=_1q"[Qbis%AQ($B[Xj9?/6BF-d#BHFS)U:>QI-Xq:TfUp;n6m_\C`%>#N@tAd-0\r,A/`MP6-ng!s)QRWm(-a/HoP.<B#1"M!%0K0NgVqHjN_=MB@]5(+r><-TbHr6d"L<a;LNT%>IR]O!,U[uGqVDs]3AO3kg,UE"igPts_>'2/r$+S;,h)A.p>BM:/rm/[$I65dA%@drA1,Y.796QX-A`ZUY)'Pa>#o5eWLCqu0e#9>+`h&o1K$VL%&UU=:Y+NDQeV[d,\P3i6=3#X%.!+T$0UFl,@,)n*8ruT*kT?8b8%s.faUP+H>n3=KA5PAGaR!eM7@;ii;C4iBmED^(-?=WMM/em/P+L-C@_S&?!o$4QKDcO*+`TQ$NdGm`@$k'n_l@T.k81ZLi-':4tk%Zt:+;+Cb!7T2acuj,'G3<u?B8EFpcBiEG`HQ8@/-k9Q%Rj<YP'i@VL7&!,(m:GGVq&)/C4^#U[#ZC0TJT!O,.4L*j:Ib7E7ms-!k%aSPY72uNW2d0#]Vl&Oi:]T++&rgs",s1Oi_[I\3V@S-OUcDNdXFb]EX<m'A>`=poV@a8X$YIkoFTA[:(OV\$H/3AJ\pG>^sO*`43%hXX7#FGd3ebEr^7+)IpUch,bs,hIAmln_qU=^&=2H@08[5&t^OnooMBDlsjG7Bh+"4B`uh4]hEE:RkrK\Wk.1`XfPsj9(a*94*.F%356h-s,\i"'<9s<Y+NhhcNN\7."ArPpe<?!W>;)JK6<KhHf1lZ???q:g"d@r6gG>KEJj9TGo$6M:;K,:0MJ,a/PSCYH#s(^LX*@_%rUXWGhB%_>AelT#i_#9Ydj%'L;\X#.FoD8]Mhi[;Lcp?%pV>K=g[:JlLV1;Yp+a6lpMD@0It,/n$2RW<eDJ^aOcr?%j@[jIUb0=B%2Bi7/MS'Y$AU2I^I,n1S^1LVnR3Pqa>W$;4--b7e4D!d41I3,)U.'L&DAf;F][LM2l:V2Z25Aer0A\Kns2TN?/$&B+Gl+)'b8,LY%EUJtPbA?,5a9KBA%"gN9[o.I;jHb4![o.J,$?N>f\a/upinPb+RX*@r\@h'Q(7Z/V)=p3+4m`-90[J5/rqsTT:kL@g6/MO$Y?,??%/kq89"$):3/B=Y-,e]_C(D#fqB/0.'m&l`If$rRS`M^o!p/le$brM:8Uh0Lm#>&r0>^khm?_XUn/N6LdJ7Gs:/n-[,l]47i-.WZV%qqHaWgYJK6(hENup\`"V[k,RH7c3*1055p^eA+4u0[1@h+q7j4&&FnZ$[MeB7$TYU7aP)dTdO^@"])gO)k2/f3$a4eQS^laL.e$f%R+*LKo"gU%E`W[)\Pk1H%HblELH2,)_BR62PHr2m9oZ80AP7(;UWR%$3fK@imY6`CenXV>7k[$hcqskbAHRs"ct.rIJk&<3<0+8Y%UI;FOh_J!fa8t/\^%m2t;f6R[ceI+2og+-R2&(>>%cT%g`GdNp0kgW&Kd]2DmUUm>>q)#)lakOiQsfA3'YKoQ7#NE5_g)*>Z=0jt%go)j&kSt=o%QSC$;DROXQA]MUA=p&oq_fdt^A<+QHE<_d<L43MR$_V-`eR3pANoOVH>"*qO]A:[_o,lf<j';>m&7=gYdVNc[LCTe%P\6=oqGsJNTr$^79+4$f_MT'26]`dN4nuokf'pMJV"i^PrZGm&g`p851T+:+N1i*nFUZ(1rWG\$;4&uG0HGdk2/`&JDC*5,aKJ`%%h?jWkFg9VOLIJA<$SgA+jMI!M>q3<kAYaco&^=][bn]kMht/LglVLlk'g=dViO9B!B$'.p+^@ZXeeP>f8Cp@RXb4\1pUtT=YNYJd%e\F:f&`f\S[9K0SeADV_,@KoVeHfp1Zj4!k)KPVo2bUWii-;VtB3PLEf!l6se"(HOGZ`oRDXi#Uod;9.8ANHFnR;G@8AL>iZ>GCd%+iprimPKQ#*\/ZIT!88r_i<0=nSHF)_@>N#&aEr63##3n))nDrq&!Q'@t^A(kA7f_?VA<dI,V,QENHV^>52g5^oC.PYJp0"C=HBT%s80RGeB/g$H+)G$hiu):,a0#U@>dCK1!:>)"&7L=8[8AgZ-Q$0J."VuM-ZN`-ql4.#i3SL3Y.CN=c6R&<Dfc"-;/.ZH=pK30Y!J1%[)I[!MC"`#4T'1g9MbpomFRame^`dup!,eho:!38^dm%VrWoM9eX1;q8k.'R8^@'.0V`8D'ne?K@5E;B'SU_Ws!^Y@?aA.kU*f`r%T9B-VA;;01&lpljPQr-f!nN6?#rHT*4KiBADT&F?e(S_R2_WASd"_L0;u2ZP`iV]<cmaaXBuYJ$Ii%dmdp"/goen#A&_ef!#H?kZ%>_1pU+Yb=H5oLLkMsOJ*fXIF63j_6VAnHWj2R5RGRc^1J((s3pqAUc7_sh/L6k4uVF/sZq*%%=O?a`WfBfL,Y%41>`5mbr8a0&LW%nMGIUU"$>cb1%7J4mbgt5:'lC+*66Z9+nWEJ,`\->H9u)NS`/2pF3u*TMWFjQUNd-[^JQu2gnE-==;9."n:5#gTJS:kS)XZ&A?a7%>KR/t6ZVUmZm;:1np^#!lC[@mM@_SdjqOeQiQ7_X!c=ne%iZ06k1%mbSYP<h=H`:e/)2c!RK.H-B.o5\&XEMG_j?\nC$'@aI63CC%<DS=sVjEs/<1_*Tg1-S3?oq,FqmFaXTVQEXi\0lfSBkU-_=bX^8ekb8JumR<qVno]2W^J*_3IXtol,jiHY;5E<tW\Rec?B.YENOl%5>JS_$F(81Oa[n99HHm,0/!t]YC]K(?kWVLP%o;UlU301.8[QcA;SrS64S%`]u.>g'8=g.!7_m7$\g!3P*6edBiGG:ULaM0i@eV6%c"\<i[o">Fb1"-oW\q@k)0KA/kFW9>lTfZ*4%<uJljm-f]_A=;9e!G+\?9`o(6e+?I7o=l]iljJC?qB@NW_p-FkK9V2$a<.U2t@n%?:;g@jsjq-cs>69]b>i<)IE=W8k&\Yd;<XN#Y);&Ytiok`78HH*]3k)P*BQ56P`Y>#Y:d9H=n%0&lJ[r!s!p6Ajg%]O6Un\/H76\%ZAc[>6IX/Tc=4cYC]H7CLRPn%.1iXqasCh3Z3l[4c>a/+VBakQFBg&:n!^u/,(?Jg5E[mc:f:IrB"6_RQ$YbPb&Y/G"!4QE=A4X,%[=NP.5$=I/>F2/OpC%e/ZBguOMFcgdl?<+L@0YD&^ea8_+0Eh81#@Y**[$lCb_gc&2\Y`,VQV+Ph>nsXj1X0=?ko'bQEB31mpA_B%P%lu8?Wo`QGK7\QKq?JTSH]70.eV'M^upE?gbZa`])K(U:Z`H-glZko!M,7<C:[\"7_86n.J$#A)Bf(?cq`2>b.Y^L<EZW1&kh$N%_b08Q%L'o486=P"D8dYO<7,l(hp)5Z-CB4\Q`O?<+B^m/mU$:@psXe`Z\bf&5K<bG[OuuieAI<Kr+ZX=(L[234[#2>)'o%XgH([,%9pR=Z5=*"N:.g+([j(b<6V''Il9l'e">rNBjJYAuV[HLiZ?>#qYg8V*Gb!":[N,s0>l:nOer<_,]Rn#%Wkj`r:scsXr;umpCuE`]%7c1*aVE.B]f>#oYF2hs9g'DDn]m\;TRPP.so.N_d+L5Oa@pJTs6'?'qO+SCX.Bc@J34(CK]$GGi>T"(Hn2X-D&#<7i7d[4dD%9QL%4DT4F-EE?`F-L"&BC'>tbt[+u8!9&L^O1>]R6/Z>3rZ>3)nM#$H&9gaj2Nf05:g`RVDmTIA*j5Q;XH*>cc0umM\gb`K/HO.IYL"t%NQ<5ZNd_%HB<Kukd)QZ@VBn;"TN]jN_)EU+9s)\hVjD&G31sjUq><#-^Z;rM&/rN1Tq5c$n,"Rk?q*4h1X=G]RpQ_RBo[WH"oZ$/%i'3:%6N8J,&#:mm8UpTPLPd,lo=D*`ULc*An5Itka:>SgT0BNHj_UTFnnR,m.>k&:Cq&mk`3n\B/6:+-8hH9HQ[Ed.^[7!dc?9Vp%<G;&0$>J?[HF<XVdE2JENn@ECD3M1ob_@\.*3Jp**lK`pX;O'q(>H)GYs'e*Cm'9jiB()N;B9Re/;Q[,f6k:-P\i]T)8s8OEK=E<%&+Y,D)k&:ER/1&oQ=i0&>ol9>I(no_d+4\g_1%@^FZ.h=JWhj[q[PEV4P+XJEbBPJ_oAE7jbtYefP!p=S(/HHV=9iJA`ptlHb9A2%*HBAaGcB.lPcEuBROs!R4J-coMp"L`$Ou:q!0V?=(<2a;E7Q*!7Qn5J_mkD0SC"_*#*OsC$\X8QWi,/:1_5f9DV%UsB(YAKbG=go%Sb>SRC2B2\%3CEf3_a!O7\BL&(4T'r9rQj[S%>ID)00_]KbB6AB<p2]bdLT09M#T6@Q04L[P.+X2_Q/RdW7DHb1\Gm#$XKN"4sqg%,Gp^WT9LVn3JPQ=9OANV'0EelEN/HH!Y?Y+^3CASUD)"="7YV([suO!lKmOQcMaMPLj[<-.aD3NdDS"jgC_u&[4J[p\]9%Ab_[^h%n_W-[aW]grg6BCEXM*"L;m(5!@Ie*PA4LRd[]7mTX'K3PnEd3^KtFFVYmsr;de@d=gg_)Ca`]u*LnETJ"Sau,`JZoc.>oYNE8bl;%kaq0FFtr#7:XVf2)S7/87Ddqa%P*>c<A0YE=FYQQX6hSMh!7V:UiZ;nQ<ota^Zo'^]kdNr<&Kr-?7DtDBdJ,3E8VaNM-^eRRW!XS%At3Ik7%YmZ#f`?^l'2ho(!*LYDO>0W$jYLK&;Be&:.O!cFFDUg\&XsgSnh=o>R#bR?-$I0oL`P/%Dt/_I_q.P8_MUU?@(^c4aJD%%/usbiV2JEP?7agKg[qpQ#K"8iXKWI`"aut>kh19YU,?_."'Bm2lu#/hk`rKXkETA!c5h0Eb6M7/jV3n_1*9.&:$qg^Z.*'YL&J,U%143h^F91RTkIMO$HJYtKD**K`f^hrkH'A.CMWHkYm7-iU>I!gU>5DdlmHXG3L?Y;i^E<2D#[;[s>NI(j-tKpbdWM+gTWU]D;sI)+%5*2:HQi4[;`RHEr4l'K<)CXHu@g(2@e;Ja.fucri69K0S8]jbb.4HSaQ.H,:QLAqHNTF0p=E[I2,N>iTYLOPS-VVonge/"mf^?bk%aMRcdVp'n$S$G.=D#HP0m94d]JeDqR@hlq0dV3Pmg!_!P+_:;fKI^O;Wc^k)A`sUs=,9.uEq\#_reir<mdKiK=th`9[gCen_q7t-%M-$==]$&,Vcae*F@2Ssh6#,[kf7d8]%cT27F4\DCDg8/C0+*DR$tb>j.Ff5T4a'=Rg+]A31e49$ab9=]*kdc53u_RQc8Fg)Y9W)L%=JlOTg'J:N2ql9/r(Sgcg%V7ZUj8N`OO/nmk8!l[E>G0,SsU8kLX-P/cgghGhVPSg<(XaKs8)OR56%NVM%\Ck,PFL4!"M2_gre7@%\KM!4Ij*<Bq'-+V-30o8TO0A=E9+Sa&Zoi2:r&"SWV<0@e%8+X;*X\+\THq_oVIucO6^N1/k=As(iJLPJHH^:FF^3^T@3D6rJ^_;%f3,s9iX0`a9+W1EVAtI4i$dgp;'-HWRJQQBiS*tIA\SUeMDa^4Z-[kMM/!0B-=a.!+5F7j&c,YDN9S_\m_@EN[5(_^D.WP_T;sRi%W1Cq1=llHEE\!q7\=8h^8o4Hb()oT9-4%]8=OB4ZC2rXNf;Q(%0;OI&os>($.gkTgm%2A*"9loh+=J'%To$:j5*Z\iBaIVa(J@I1%I?'N45nV[=FV.N/Ofm7?hlifd`V?%9h:H1JSeL&9G#+4F:!90_OJrk(X#5pua/Ai>^Rh`E(s+3rX!,lMI[L[/B?/?a4GC:NpEH\5%q4YcENbd_hEddrQ"Xr"h4M9k:LjG\K:2R*-l3'2`&Vf%,FPa61Z5qKn=?T_Y(VF_/"%&`VIWA\\O.oa`^3O]DB?sEf;FoC8g#W_7%]./!IpH2]Sf,m/IGrg<WjSItEU.#MV!\'.<N71OM/\+GB%&bfXe7HO[265,GmI(*e&,@cj!ht,:8SIP*7b:;hUGgc-*e;?s<@k<\%Eg2pu:,#E,\9%qLGhl+Cr,K`%E<!):/:(AH)GEW:[7mcLd0ZZ<Wp!FA@s6FphX5_1DX5f;X#LM9dRep%RdLc\n_'%j'cs(<XX5/\%FHUCF0Lf7,@pN`H7XsPm_m-:W"]':&N#W%"j\Om5dT?U^7rdrb$"(A4`S2#761QLT'<u_O2'!Re#mrkEaLIhd5k3a`#10!@@3?nZ%0V3V@'`[Z@Zg32k?3$e;F23fPN0RH\;G_I:F@Yn_Gs0Lu?0h?p`+mANViNA`/+]Pol46OcRehD8"V09U',fk_-L5-0aYmd5.$Ls4%'uD9Z-X[Y7+4U`q%CSI)l^9uD3#K(;4fOg[WDZ05(m.0Aa[DJp%8siMW+i)#SUa_"(OF<'KkNrtg`IiF1qZ;WMNf$JJrte]jK*@g%eNt1`Y!J?A^V>3>7rkN5"_I39figM/k"QV(dD'o,H>R"QASOON3YWq7EC&,p5b4pCf+8K[#MuVX:[22&7%ZkV5Be]8r'k,InNs*2%`_INmOQL]u6;HVhlTA;s>&@?f-HK^/A4!a.&:C<O&Q1Gf8ho<\Jd%KZe)QoG?uDYn5pqjk5j>Cr?Cbrhq)+(iaiO$U)W*%)Vo$?c%ENKEPG]1=bmdQ!,6bK3:)jZ>lM?YO[=9u(UhVp_@hXm<*[)CEdR:2/TE+@kq4LJt5l;5=_,j[b/ghY<!F!Hm7U'W3V5ZrV\D#oG[%Jg_bpWF_u#T.-@2\U/X_HtIlUY10NTVi7j_#^*80dL>\L*7lNfX^0"*i]>/#:k0h7K#b<nYti`n2&cpo%&[opZC@D68?</+1.6i$%R0Z)1'Z(!_N3J],Oj^)T"qGr&eA'/h1s,.Un>Y]oAMI+7<e*5u>URWq8\#_M`k;As"T;%6$ismGK%OPV.GG$(c&#oGf=,_HRuS<U%=rW-N[WK'^'G7CpWl#H25n;KifDM]'X[M@5,0Pjo<.#N%l9U1K@9G@kYh\0S_@GZL$=gj561cteS+U7_dJRMUGgK"1GRb%^[hBb%%B0;]te'Z4uai'W#E$n=Xjo_R(ce.Wjo"_tATl)tA&jSuH%i/'t\RpXSDa>0MpAC7D/HG@Y<$,@*>6XbQ5]5HEW;G9os+!WolI:U+%mLVj2Q*=5FcQho-p.Fj\*o'&A;NAK91bc#B9/,le>/=`';8uB;q/ese&F#$FM2/7d[DM5lm2;%W9$WidM7FQ5T4au:l4a[]R&?[m%6Ac[3$6^pm-V4>%`N5kUc=PP)gtKjqll+J2b#nd'"g>Te9_Y<S0eG+n^_2i&On<9+<Og<9`ZR47o=AN5mAOe<Og>Ve+Jp97*6me-%rnc5<L2-9R'u+/deZR4A(5,mZVkNp0#o0sl"OWc-&<-\(K&P\R$rck/h'kref2o"g9p<QD,rb)Uo7l@Q'9[)]:+,.lToY.ldr?IA%U<1S4XZ(.9T9p&>mASu]8mJ;5+Q-#1Y^WIs6BJ9di*[O<7q!YaOgfF,N3J-RiE_1fm]\IC2aragbR07-lNNbgc>H5[V)r@B!6.Y4%K,dP\__=;Pr,enV9]Z$k0(5U97p*T!WFa1@P>iO(&Lf<$-+WTK`a):oqGm&k.qC^@hW\oEi3<(-ZoM+u`"V,jQO.a39@pjH;kM5O%oL(\#>>lZJgjogsd+E>VBDL%&>j76p^%?X)iGoHX8HWt*X#Q?S3S=ob@+4cC$tEQtoh'Psg4?[-ESd+c%ZmAu_qT,-a>RlJGmncG%/:K6gI/3D9.?B8LQi(V)+5J0)+?^)SV"rmb;@!Jc&2AJ]+2t!1]+*LrYbY*=aW(`T%u<dJ03!]/6`?$h[-/iOa2o%ZY0(>3_e\s#%*.3MSEkN*H5rqC*M!<Dn6U(6i=lC^?aXf#N8=^oPOC>gIe\6\AdM>]-RYd_sNqbIu1/UEm\aFK5Q8&-g0!e*3"efs'>lLb,$*JB(%1X>T*@+jdW]TH?+lATP)8.qNp&nt#B4ULf3eWUGSkZK/-L;2nfToS2V')=)qk`*%p'5F!"KI)Q8RTcPOL`icGObT[DmMmMCX(<CD%dj+Q_!6*6b".Y6?@CI@Z8%B4WN$Xm6,Ds/JP$2/Skp8qUWPrK^@j6'V(rOFJ_]YW5TW/5`KHM#K!ia)8&_@;?,poG+$^n.;/o7+C%-nE05X+Z!1=imYEDpU:#X%]l6_c6b.L5o,f$W3WYr*;il!tc^:^e;gIW>Va/4k57`*(*%tiQmJmj%:bLm!>AM;MgGpK#2*<#+R8U%R'n/eNKd>rNp=ru#tqQbeLdsa)Hb?7nL/JC>RGD9NH%oeFgET&aLQc%`bLjPjjuo/*AYu\LprHQ3R#CgY<J!k3Po7X$:tG"2%Yg!%8lF]NgL>9@#oHbOe!$d46Ej7V7,tW!*9n$Q<4e>.-05[uD(.m]Rr%+0a,H]_P72,.3q21K<q]c/.L-Vdi<\P@3cYhK7k:k$Nu[0]%>iE+]`u[4\=>+/2nOY3XPTHRZ0J[2\0fs":TJ=JlK=DCI.Xa(OH+KfY*+FPSQuY*iZ/jlB@:[&a1_3'E4!OEtG`+JE>d]';'kSG,%g3>5s`nXF7PP->%"7]"k]a^f'%1>GcN74`Z@Z3^97("^d@)fR>`hEVA`]G>c8UV*1:dQ\\7>:6QXWH_ZbVa$d%*u>,L>F5;O;/IT%3(:#B4CI&B+nC_o'Xkf]2MA,H-G(mlFRnp(LTdI."?Cpf9F>Jr?K61SN-pU!3Dm<LJ`tIIGAc[IHFKGA\:LN0T3L:Y8Ynac6hWM[%IJ<t7a-%)$;B8k51;:S&'Ok%V.Fk"%E`-.E.aQIt'U"Nf<$(ER`\]+,LkT/+60B0SN<I\Q#aGX;"cW#o._PgD#8s6+[!;a/&S9"W%72_9V6]D43$5rJ&VF@B"mU)N^$7a:2/=T?63IAE:;%-jp#Y<KY'hA"?,')C*6=NDVAs6mQJ:oa9SrP\L6*b0XV/^o`+]J`ra(0B1%Je2(OB2L#H;&La8D%WH2ldDK-:E$kVjMDo5'd`5bDB^q[@&OO*]_97P9r]#0:I4!f$Q5OeU\<jsc+nAqr!(FXeaCo_YW?_o\X'3H%+\:Pq671E+M`ii!<7XgLSTDKAklmrp?5_aeGSs4'L4uSGBLYiKA'ne&^D?Ja+gBsu&r`7oZlTUO.eapsbG`P8>G8#)`2.L<qHRlf%e8lPMCV3)Y,RI7L'/S+UJ@BkZ%0b+07git<73K0aBEQ]bgCuj]!?3FHh,.HE7RJ22,V,6$o=1r/ePJ-G7+98<7Q(_,9+k]c>=(]U%g%.rAfAB;[&hig?7Ff*-aNudt-I0@fbJJ"ZdT$ETlVn,Zi)Y`S_=ApV9YQ)N+Uo_PRM>$`;-FdS'a9XhY2Mm?i@gC5<`'Ig`O#[Y%6Kob_o(4**0IJclW!)W>;N+Sq`/YKtIK`E2/]B[Zd^g$Ze0%Gb$3l2!XM`0g`\9H?`Mq;icG#s3%6On+Wu=N)da5Ad,$G^SIl1AT%a`>!sHKlF^.S%N1\<"4eDi@=X%PT?7JMT`pF]7X&dK'hj"!I98B(cIs=(XdrHLj[-GZ6&V1r_/=(PGI`X$O,/;TWh"A#2[NL]#pD%"nDdp!.-('@uaZI#g<ncEFE12k6VGX]VstKXqU*ETjCaS;6^Q_`9Y&'EJ,0'W0!,#dT0`e2$mZJ(#cf;d0t(54W\l>?_q6pEsG=c%P,1'Lr*8>L%WCl")PUMt?,WX,2.^0QY\+s;`O7;1qM^*PI>2N'<*F<sOpeh/^'G*OC*$Ht.AN?U:sSkUhi43:S]o47.;uHo`?BS2%W-Fr<OkuON!nC],USMi5Buj/$9S<e9)X2$f1t:qHbick`N-7,^"\E't)^AbO__Q@kj+^XBl=+Kp?i\cq`q^aKph,ZZii$;S[Kr`[%T!8nVX@,g0@_k1qLVf0B9X3r;S4H1`Ee]h(Zf68%/t)D:H(/=sR!9rm>aXmZAbTi[EMB&j*D;CY/XBD&@r7337"`Yjan,<b-rb4?%CEuH.$[#qP:r>-.(ZN-DhQ-T'0:B>9Wcs`-ZqW/X7usbW#F)G0S&;4*+FIY_C)/2>iiqck2$,n?,3`W.=g4$!6k'7+7DZ@]cmWsg%7:q$!mhIq0NmT,-LpRsI?Sb"WEnLDt',BR1YEh4(o868@;*%XP_bk!_@;BWp(8cV:_f!KCND91*)88F"V:+V!_Nq7Ef96$uB8-:+%Q42j:A38-L11_ER;2=?D'(mZ+h)r7U-,nB6.llTW,r<9.BR00)Re2W;Uf=R7R4$EjKL$J51pg#9U_(q4?:M7&HC?p7VY8q4EanQm%gkoFcm&B>,fC-[4M.OWh.9)_STL>WU?bn-]dM43#eIt(VHrnLiCf((`Sc80je8/_r>kX'R%77$@Ar(OTaBDL*0D8F,S9j>hg,s`s%$S$?3/dgkR!VG#*CPnab6/E>(S)^miNQB[;n=C2EMW+p.GZilI7e]]$]E?:te[XNWRAie>X_kaZ8&HaL>G`c=)<TP-9!gpH%@%K:%ldAlnjb@dm3<EmqeFiQa<Zf06gH)D3XXWEhq0ecgc'G;Ia/9p%Vi`27da%Wt/M?\pgo.+Mh-p2D9bd]'1ZT'H9(9$En%bj&AOX/-%ektP!euj8"gn0)V,@7FWe^.5D;@FJpDu"_o^$qS>*#@g^hnsFM:^8S#at/YTRn:Fb86->.&"m\[pKS#m3nlBe8QNga^N1*_C6Bju%2b`0IRWe%,M@a=h<pSngaD4,;FpK>m8dHSMl#^MW1-'=r.65&idWnanB'l?f)3V(7a\bdCa5?6WF7l"9Rj>;,`FE@l*5MuifkBdM%NXs!e`NsnIA,F=EP)'&s]R9TK7s0ho&-[Gg1.60Vk($[;A+p+K;!Q8QaA*G0gQLdG=2S=>m*+A"nYp(=6EuDpigoWe=r\sih-6Rs%p?GC^m-KEX]"5HN+/'(-.#>5).6]rKSP@10EKVXq#D.n>&Xnp@m2)D"]p&Gu#El3h!iO0`r67u&X9=6i.0Pc='0Rf[Vepml?cbf<%7j1"]2b2Vqh`dGb:-0do6HuQkO_d(YqL@\,,OBYqA-r1Tfk*,+:I=EI,b&2M@')7)ct[ZjK%1[`GY>(feXPs4)M^u:XHfgVS]LC?%jIT.EW7k0tT)Gg%'a&uLno73#T#CgH^B/TP=a?AlZEtlh>bP"TQ1_oOk<J?*_MTZh=;Kr=cE%/++^b,7SlIjIbH;1p,PJ*7#'i:F%\hnP:)%b.O$$feQUc]2V.0olDOC4K[IP'6EBd"4jTN%7D0V'`n]l)X.Da1tgqrMP*E;3Z\Nch#jD^Y!7=.>-a=bgK]^2oN]J25`0%CN`N>7*W7Vn.qM6896NEMnTp9$?p(R_b(X95+%VX"e#q1\6d4]dh2V9dQ$5jAXN6MpbSO.%URenG.(Slp8%1RVr3&J`(P(G@FiMq%iC2;\J`[[o1&W@[nFDYpFS1r9_:s#ad\ULF@-e":Lj?JrPrROSkHLIY$*28:$Ggcq1)?WlZ:a8^jD$k0^!m]>\nJ7.*]$HdKT%,*%E%K5.1WY^NTSiYidXApi7&e1?<C*Y%>%\a"(Y;(14V<L9f[n"0G2Uu>_eL"bK;Q(%8>O]a7M^i<G_.!YI3DfL6faP3\RUp.V:J:j%@qKSu<-s%@?A.@<X6f)_lAQgaHT_qtPDUJ(IJoa+$'e(6c-L#<+>6BJkHio:HEN0\i[BRbbGeG``2Dq)T\^a..*`+a5iW:]]9<pZ%aF0ptMt*Rke.bN<YCiHdrH+Z4gq9/LPBh\SN/ac,@F`cA-'"GIm*mm'E3NbnL(D+SEahVR4=MpA<ABCK`T5Ta-672F]fuQTKMO.Y%'9CUAe_j9R.;@i6Cc=nR-NR\RHUPj!SSee-6&-apecENR^.cH,L92XC;h=pX\m;tFb-=9+WG6eko>_>VB=,44dk/Q2N4Ko%Y$&pr%*'>7<S[%`"8k.4o*aN^Oe/9iCV(%,b2]ToB1*;m`S`!Skbo!cBJl`4tMbn`*D"OEmUQ4P`6SD\RXf&Wks-d5^Gfs:JO!;1`U4I<"%j@H3CH&?&GFO3-F1-(IL\QQ\3HYCXi/Ne15k"%+=L/3k,@j+6,j@I)cNM@DsN,1m9)S%c+G=($5f^,ER,-hm,;b)Za#fTt[/BSqB%0cAi'r@LWPS].cco;XL=ZfT:54"8HOco[;oCl(:*_jY;i?:\$N2G+Er:J_5,:bAit@"/t-^Dsrm\!;_Op5Z:4VChH.(mjD9b>1UK%mP5#pV&Ua1QPrp9JZM70V!#B):>4*cs,ModK)E_P*/&:bpb#l/<6^7@QQ'm##=%*BF7gr0WJ"!34LBUE=3q6]_rbg1$81!Dh5f1P%NhT5VM%2[1VdR;NUe?O"OGf2OX'HgKKVQul6B)p,kWG7B'T%D92[;5g;+`->fa]H(ED)P]NM%p@5hlt&C/:kF\dPIhiN%O'$N5pf%*`Zp.gi4=Q4e-G#)1Lc,%gq:NHr%:BLI8aT<04oMAZV$1_Wl)0@I"@_?,b()++YI+.?GS18/_YtOWO*UH7A]9I/^%GoNtJHP+3-<%oihsAl`X\M?"%c'-$OR\T+6%JjEt6`X;-Xi>2PQl,)ej#68#>*"Mk:8l:[g]NM[Vp:Aq3fZTs8.RhF8rYGJ1Wdpm,[,5'H`"dUB&%LVV[hUmS9]W:JiE.dWBe*\:)@mR.<mq+Y$'hXg$.LE"TS_ct'&&F1SAg(D#mL4=$f:i(c=95oB"TmCQ"NUD8.UZ$<>&0@T.<bDG^%Za>^?N[]-`$UF\^<8hT+*s0Q+>&sS;L1I.M&rJ.-7Z*s?*["V2e7f<V;<O)Mob\hh#5U@N!h+:qOGL95nc!)6&Um-Mo)V,#PWJW=%,Q.[c;Rc&n*&Cib8jF]0L03m)ldEqnY?$RdDMWhtO8)*O^MYp!T,S.]-2WIkY*;*rT@'!*a2'!M"hPOBA$3@6"aBBVGl?J1-bMF"%btreeYFgsr4'fc!kE&sB'Vft.>te9*QLe\WlM'MM/VJXumbfAM=;Z',:F%Q^>%Cr[kHpXpc%Xhg7-@#&qKA*6a1/_PhGp=D0i@jT%G$5kc]%1-rOogO^)f>6ZGS%FBPsb'&dtU#(iO#uj1Isl/iA_o@7bp8a<ts(lnBo_emPAuebsmW['FLOB6RE?TR%D^'pHjkgD)fs?%Mc[<H)%QT&.b`qs>lp&'DpbiQ)d/4jl/N5*/3,M,jETkWV&r3qa51p(kPE#%D(T$X[#hI%o"6B6o.K(bVblubqlsX;Y.`XLYE=WB%+HmN_Y@q8%_S!N@H0a[!6Y^"LS.LlShcKFH$YRh?:lq!uYO&t[>0qQ%P5,)&OB]n&6q%R:U(Do/bt]m\9fL!$J+69?\Q3^fRBLGU%Ur_o++?QLZB@-6.8^XV(70]X0a+d--8s+CtI?'G8oK\Q]fK4A$>eZer/d6oCM3[AZ&8R*tdM/H;aQ\B.k0*u%0ejFC3rW'Kkk6ch%\7>6.88;0nd*]Nu7UDQ4K^&cHD\>(4R$F8VgWgj;R_F?*I/RtJ%R=$VP1iMD[`<GZR@^=G-#<EV(^[t')=%BIa#54.f9h+,e!?&k%1*bqJgS+eW6D(8YUCg)^O`I?XNGM=Hi#s[IFLK"5(n9!:+W`-=@mqPN15QqRD@S2N_bFJV*g$_]-=B7eM?JM?Ob;@uFiX's%T7qS%ZDX-eb!Ki,B#_M/Hul22G(lfqE(l?/M1=%3DTMJ4=7_@s8lo)q-uVRs9F0FjI^I#5+M`F$Zsd.M.hU8,L>puj*trj[Oq>oc-h=s7%Apbh8^0&8,;;D\4\<8jKF"N?J(Go_6DF&<S0Sa0gUJm0r+`Rb37@"ma2WkL/-se@H;>ML],Fe!l)'S^Kd7(ofXt&FqG^hM<<[hou%^(q%7%oOAMlgo!FQr8(R)QSebZ`7?Y@(ahn4+;+>*^eOA0B!^.4e50ci]cHNAE)a[cKi"[CGk5C6>:TlZ<,bWhFmcQEfcaIB:4^G%e"1pgojo$IWHia4&r4>m;k4i#fAE$@?UQB)s5IBJU?<.8c)+Q%.f_X4Z1_9*CtQ(S/u!k1gB?3mV0,I8A#MK5>o4m3KFjqsHR!kA%T'9o!'$mW\)V\->"U6\E>IZ303dklCs'Is,(bO6@UdO5"]["u_(S)qYW`;,^IU)'C-^0d8DRR]kW)'d=gNJkf$;0g<&X<Mtne:BC%De<+R5D,O`\,-Htj2ZN$MZ,Uc/gm6f%b_^4-);`I(sb44&@bKqa":F-oQVVS;Osfr[iLa"V-0@%/qof(E\&@['n!j45^jf@QkD^"%ibLkt]!(dlfFn,Y0.]`,lKbc()Dd*2?FV$$6G#C8"L>;lfYSu[UH,s02MB)k3?9s.>hoMmlNGWOf2bNCN*K*E:hI,37Z\&s9(:;>%[^ZD@]7blZY--)pGjcA6PrbdI,Rhl&<ddg>Cs''6Vd$jmWuIX`m35$T6&@*8[`,:>e=!^=2H)lkbVg@ufZQeXBag#im-!TKOcu4]%5J[![(Xu^Z$YSG^?H?j29MAo(5uCTpA@3`tGR[A>^6&d_k&$0)W(lABD]91;2it?BW$;@t\WSjD%9a8mX_p/$+K]MgXpX'BpY@\A%fjr.n6E3\b7]r2b@aCCE1lYc#\GGqt)mQat^;CP^#("*K^4R&kD0&;-Si(Po@@M+%G6bc6]nN^NLco'8NtboID#tC6W6W4[+YXB)%]Pd@)_cP)*^"E,.[*2Pc5d38dk*V848.DEX!hBg4-(@m?r5S0)q_aD^;`M2EW0q_F`1G6>eXVYO?<p\N-8IDs>[!phE-@g#-!0lT%>jnb2FkuP8<p)7O"=o-uDFjFIkjr[#QTnPQ;*ai%*5RNK'RAii<\-X$n0tHTbP]T.T#4;sPS"XSFqc843/#P@mA*Z%'9f8U!<3$E%l`K.47Jh&^H*e.T_o0`FIk5M"ZC-V2<0oTWT?n5!@J<UBIHrF@,<'e#BVZ)=[>I/`.+EqJELd#eb!\&g9a2/JDoDB7,k=/iaYh1e%k!D3X-uY$9lRUcEe%\Bb*Fdmd*;,2Y?O1?`3R55klm(*n3,Pcco(2<W9pB,0ZlhA8g82#1Ds_RmcH=Q"@A-M/8-m>^RsZY9SoQlK%>mLo#=IiIj6V*1*-!q"b\:T0Tpu9l*cnF:tX^>t5S'_KaGJWjH]RIH8]&ZN)[,93<jNFWZ+>kLVSV=H13B"e93\Nu*]@Tp,r?Yi`%\rXK,bRM,e9[5`GY_3inWZkD#"]Mlu?H/aJlFq*tgrE5F_T/<WWceBE]f$$m@GQ'd?s?M_>u>"`<i9a$L>3F(K.RC.85$RJWSd=$%oLPA)<=Q!>3bVcAa).d>dDA.SP*$k:Y2@9uc&n_;DZu@!=PjHt?7ec-$.E8G8<8GGn)[ilr,KYn70'[2b#P^$oemCZQHSM4)r@q/%g#WiP\,7rp2*hb7S/t'cVE='k40#h:7pC+[Y&Wbe@/V-tZ8sW?',ap5_Phu!p8'fk&]4Pja_R-d>8W<P+W?os=Cm9maOT5[%6q55%o=5%6-Oihi4*&h"nJBT!Ki@S&+65Jd*6WY67hJN2Ck-6"pIVDq]mb46cHAk@*YAlMF-C=X76pR$-sFJdnA0u\iOI;R9V,\_j7g1[%pTc[Y.8hA?f9]LtOaBbLJ&Wq<+R%;DLHU!2&A>=,Vq[6smW[t).A',e56MDngiP5lNZD=@,YL\!+mk5;]TD?di:@#6(8hD`dA2o$%Y--ZgaDhpWDs<j>pF:?X$L,W\8hXW'5dfo'&:[[_ZKJ.kaaUc>6<a9`[)70j6>RM3Pu@:m-\tL\RXEe*YHN.B.#WLeqO":>G%4l$%m+RKT>4h-%mYuYmjEgIU:^f&^qRPlr^QdslcI$\RI:I\koh5%i2tld*lbOtiUe7IN<I=^m8<EbNMM.TJ-.^EBpkb/h<Q4PUjCY5C%Ael?n/7"HV6!k_4SlFmdT_lY2IJe>lYFked8K$/H;<clZ>\Ai\(2U8X4;B9]Lq6>\Gft6NDp/[ar+hXBEs@%Vm@7=U,=H.XZS[gY%OCqB$+Ul/,6j]hWEiF*LisX&5+8N_mU?$,6cqoF&\9T)oSAjugK.-"`'^>t+;""V5fV6k)dGM#X&;i7X&iGN"&Xu]oGFQhaNgA6u%`*np1-Nlr*&>m*8P<s<WnV-Td7=E]?O@tIh$R,>A.#l3f"'L$tZpk`8SCRer"#hHl'&P^L._;OJVoA!rM)?0\Zap@[AI.9/'i:qu%_sgUJ&>.LVh+7+'l0=V)BsebL0=r9J-6PtTbsX>bS4E-\01Vg">p!3%$`UFX_+ng/m\W+A,,V0/hWrJ+OgTr[$J/V!-f[p$U'+:n%r;+L_!%&eu]5lL.(bs(J#`[(ldSYZo`:H&\nL;!e6$i)^./ZITLW6d;nK+.mQ9ll7<KcUgEd/`XmMK1Z3OV>CQY+YgYP#A<>>:-@%D%XunPd$t+^fcB!'J*/QE!Zi!Y_r*XPRX:1Q`N#7jdB?UiBbO6\]0B#no(%Q5J!p=:*EU6\s>bg"o.8Xb)$f9Ct9Flc&E/>'jNUI%KI@\Ae0D8QFIi\PTqf,-'ic>TA[.+B`[]G>#h9@k4oIL.@Ut`:H\o`I(;+OU(Rl`98Y6S]\:ZD??#-U)(+?mIWCegGmsq]Q"Ck`4%n4(.^8Q4H*6%mbRAImD"7B"]M<K+)MK4`7@qOl#D]nX1G;CG(hf?7GmJXjBo[5eRS\\f:_'%',!*.M;LM"I_ed<VbGE@kgW==&tW%%[eq,K'g</6/Ye\#l)_bP()5`<W]SqUg_M`"Tq?AJ*W4)"\'Li.W03,eM:=J%AYXBbqppN4aPfrKinhdGRB=*aiB!?Is?.X92\rX%4jn&tHZa&#X0OEbU`bnfm26Pr)cuTJ[0]>,'MVbjIt_hrG-:f@6DbtSKqPFOi>@R)#Y$I1\prm4bO"OW]#cm,]Sj!&O;\i=mr@76%R\!C>Z`'s_k=0JIRZK=.EGEU;7$s7>((h9Md??s$$P<grHA=NK1W?r_.3^]1WiN3hU"kMhK<g^V-scThnU%:4;_o7*/2bnEi'e>>%o>DQ2)Su3)SXRph?[U\-X<<3ZZPppU0%(+B]XSsqIMADE>^IXQB#K%)\;]p^5PKhajF$G4g%K!UneQ"8NgYW70,]oO<p$Y:g?Ksq%;C@Dd+VU$<Q_:!N4]PP08E"KM9Wk^:__Wm#SKZT-01*>"eS%!J'K,/0="H)F)";%X=31&V.[f]Z.g&Db+^S*'n["L_H)X2^ik1r.%;3\F=@jUfrgJ6d8/om;n&LR5MI"E7o5RV.F`D]b9Nth`Tg94E:SfHeejJ+/FU.-ZsJhL>DT7YnlqihY3U8$Z0fh*YcctmJ?)M71#%R3QC8Ke`fAKVpQTZ&S=Y^ksTC:dHg+So&1cm30ldWNAJX[1</(H@AJb/S]Q"R=lOlc@l6Kru-;^oaPZFng[t)0Q<""[m*<':qXQ/%3ZM<eNtNU>>ULC2pJGm;NN[^hg83.3abd2]MS*[coqM+!'ig->k>PTf,+)Ur+@il80G4mbC=0/eR2J>'Y$Oj1Ct`AMpK6g'`;G.-%[f,Hks2Io'jU9^pC=(\7r$lP;7567KYu^+sVYutp!)8]cXK@(XQrp_9Hg+ht8;U0g["<0'okF2qdoA94#uLX@:;kk`n?84<CAT@`%5U#o&.iI_PLR3B>p8j:'WX^/I4*4Uqd8``lLQdY(D]W^0`CJ$:=,s9(lMEXngI/cL`tY0sLWhU.d_.;sNjQ"!:_e,ZSX3Rm6"CqJ%5SatOp,<@-K6M^s0%X=s(/!,OGV=V)-_:&""]h0LK*WVB@mM3Z(kHF1MZ#oB'Zs6pN([#o\<`6FbS"[@(1l.&pIPY<U_;\JRiE$c%74%4ogE.&)'^d=.n_u0e=m1]CaIPUp8`Y15Q-GdQ8^=Q&PZTQ1N[>'m>abW!RGO%h9P3*2YUG$ll0E.IS(>mkQkMA8/8U$aar5Vr%bG$0n<!iqO_bsl]^?V<@hr'(V71#\c>c&s]SqY00Lh/N.=$*Dk926Kr$.LpLTsVQ4"3(0>nXTTPSTnauI3.*F,-bc*Si3`qhH?TF%ktX>c1NXk5`V%2oi^k-&QHP84Q=u'H&5Na<'m/)rV^a,H@MI%-fDs]ok6q^00i'j7BVA_U;k$>3M5PZK8/Bm8Vm\<%FVE*d)LNLo%N'^JsigC*>g3@6?_R9!\[44;Odfi#qg0*6Yrl$sg;[55;.49,mBkOcSpnF=[m*/6dX2@//['O8]5GYUho@QWIFUm4p3jZH0mA,r+%8t(&Fko@lI]Lf#[K?V\e8>j],,NYJ<[b)gKdb2i8*mRpU14=/flE#htF7uPpqr4,dMThW3?MhsSa1WqbE+u&+Et1:m2U4<f@HPNh%'tb'L]K,.sl%k=?:=ij%ER*gc3ZI8#CtpK&>[,cK3Q9[3^/N<DXje0IN'XjKcJb5=)s&'hfQf2HeIjt8c8_`&fPYg%n>`oq:=f\t%*Anig]ogUN2RS<^'#??g`]@bnQp%O7lD5KlnBMp)Rh+tXkO7[3>h"/aS_Y#U2W!-C*Tb7%]8MA[]X,,pcGhp\("2u;GKL^KO5%Q6%7jJ^2]Q6IflAKj]7sT!bF#`;mj.4TKqF*N9Rmh55Zc.2#nZ5K2HP+RBjQRhZZ(l6U;ji:o"ukNj/u`7:LNoiL-`c`24=,ek3:+S)%%K;--7Ld=rGfgQFo:'u*GCnJ'kE7SAi`Y(tk=%K`Mq5m0RsTm-]X-9Ao\uG#GhI=SGJ(u941jJUc8Y23/mbdPcJadW)t1G#fm)\C%8flh,+o`MM>kbVs:)=ArBP2P6d>`<!s'(uAc9&(JOuM6#6E7VBVmr__`f#+;kD!m(;ah)>F/PVc;*lr$g$D\mW+U*)q2K]T:AU]V%`Qjs4H59SCg8Lq';ekC^e5JZ9>([ma=l$u:j.8-L`6LNHbE6Ys1EsOSm]!qjaD;gk'X.#i>i_*oU3#Lh;3^+[4d?O4bJl]3)7Hfr%)8#:]5,1's`]g0Nd)J8-]@t$PB5qnX_`f_(RPkZe/'6Iq3A:(T*n9f$54>6fp)2C$?L0HT0l64J53caP,qOhBIB*42k1[^:Rr.;C%Hk(NH480H:61;LtV\!Io`]\#XQ8\"Wc@c5(;,@%Da^2Z[V`^J\,G)2SR6_e^<$;=><^"A7>=%lP+eIA\X=rR9h#D18T$>R[NHfUJ%?=(:N]?SR>4(Z^ZMV*2eO2_"TS_`NL)t/_('eeFs>qgE]SbICgmqg/Kg3@6Vm-gX=Em%m-gpHZ=*npEtMfsu<2b;jr4%JX3&+(@1%T^B+-G_=gcB6V\gNHY$R#<V>>D?7>rc7%/OdEWZY`QgQGalUE%F8GdqFY`?sJVSC)cm#%VFLL5I3cgMhfib3eV"V*\7IO?C+4b]N%^5[7bA6?k$6T^'5kr.7@,9-$_Z(#nH7iH6OoCiA$g6n/RSR/ZZWbZLj1V5X+`]IDORYQ-2#IqF&Vm^$8`1)!pVo-9*B6-SY(\+T8%:H%38SUBrOT%05Z&+QHJ.*f%c4DBJCn\5a`*6Qr/4A,tN&+_?Tl1SSX%]J3>kB(?pNHi`N9QoFK*5f-<cQ5.2c9-Fj>n?OcPkL)_%%f9[Ae8m[<AttsHmAV2q\Qk4XpJ_R9$BNulF#p"(Vk,]]'K>T^H:mRK*m`fN((^4Gp<?>rCC#,Gq-<XQ6U#9fniQXuY);jF-L*uT%j#?NhK:+jgF"Um:A"W2.\WP5)*0Zq@.NUk&d1?,=D2bd.Ytloa]U=\+p<t&H+8/8lI_CPsIB"VMmbjR_p/&kKngU3=@bl4u.9!nO%h;Kdc-@I\Kjo'Y5cQ:j5_`ms,C`E>3Jb<h<,FVIloTNgJ<+#Q%8LAiLRt%Tdc5X)@2JHOrZT@(B3GM$mk(eGd;j]MQNISNefLA(G%MncOC7U</5q.sK453,Z1bh_GB(J!AmkDWFN&,.?)l>/-A.:Y@]/Do6(\CAdC4eqG^MgMmDLYU[k3r3XPT$cqNkFQEec"so#-V8,a%pNb31;iH4dSk>$^I!E/6PQ9FIB1.Ni\E=.XoAQ:sPuK[0g"cAk`BAhuD;8'XpMG,#8f>HkfXU*-p2BAu$`I:_`]^)gmu)N^@B5B7%hJUr7HVT?M^:<?2Y1T4k:A:3%aCf]a_4>r$'Q*8%:UT4:H!/p$#dWO24[m0V8_p14lN+<Wbrq\/*q%^J>]Oo3*lT]PmWm^=`][>0%HhQ:YWUkF^q)mKIlGYoaF7;*U3?l&miL\Skoo48I0m_j,>h$)K`8s?L<P:jfY:o0$`R8(!c`#.(;,:o&\\>%UGM/gPH7D9YjRAk7%_ke#Re5HQthO3O8fD`ZMmEsa8kAZs]`]JNDY(q50d+W["=^?#mj.-N&Wc]PX\(c*OT(9Ln0%39PD2(3dP=F-jmI_10;<P<GGBOc*%fm%.Z_Ba$Ufq#a^n]nT@BK,Brm^N/SSSdb,2t(!A4hS+"6LR?)]5nlKg:7^)=_B#W]N?Ph#hm9Z<GWA=q50^'7pu>b]MfR:lL+6X%Jld!US],l")tAm@cnFArh$Z1$fg:F=W2D\qoXE.F`,3NK$gQCh7d?\=;$?\`4[k=PmdjDE%spSYot8!:)u$FBqENaK-iHRhmO8s1%8b2`#259ge@t6)[o\uJ;C<gn\T$M[@pRKG+fsp2N+8eJi>ATuDq7MiLI,<LM4r)a%^:fY)'jF1I]ZI'V==VY&PKskeC_->@\0ft\%9g2!_$&.-TB8IJDNI4Lq`7rAr[!&]qc`!PMER3d8Z'!?Og">JIh=S&+2W*_r1\b;CZafi-@k`i&fe^4lkJR0<p*m9T]t`6uS@.]k%2u@uaLODA=@\<ITL%/cI5Ocn/3mc1TIU+K1?AEg/Sn\T@s7K<aC?K:U5('trDA@O678rO7Ca;mURJ]3VAS-i,<#I90YNu2MlmP3e%,bUYl4162fW*NhRT+EdECG5,8Zm!s'!I\9^<;_SS`Z19,)I)Qab&\K;eA2%Fa%HP:*mQOl9-=OB#Xp99)(F6_,<E"5^OM9l5'?]o%[2^55[R^ZX8W"tSYj;u"_6ppcjQs/S6Kh`"K]I\NNG?"Z(?0[:C?N)I'cl(_0U"s'ESF,XnT^UG\I#04D1tdqm(,V56#K4MZ1WBn%-.b1FYeUIlE5=k'6:k,_Y-u&;`PL<"?Gb@7B<U"A_pqB:KH&<Q/NcDH;*?fK=Qm-GP?5E7kunD1kdq*.4Xmo":R-O4,&d(2)OtoS%.%t=e7_Zb>=g+&;?"i%bm3#irZ<gt()SJ$+XuK,s5^pJIKXM-W[o-NS=!^E4B:+/&WJVX<]!.V74ch-Hg[?5<e9)/N)Qf8Hfjn%q%ns$FIa0R6iQ#hA`F.!1>d<QXE2=3o51L'G#*Lh6'Lr@jhWs>NIMoM:B<?)_1iXGDN+>Q_AOn)oW98N"f5K+7XkqXpS`XZW$(@'uG%46l&ViY:[aSQ7*e:Tdoe`^*FKGF;n]1%?I=GWSugei#!R>H.?OqH6$bGI!8NeS>VlA!%+n2mD`7NqB#=ZDB-U;a63t`h2rH(;og'%fD*h_VS(Fuqmp3O+V7[[`;/R5q(G?5Ha#>4`!JguKbdE!$H-1tdF=^6n;Ym`G&B,D('*%=P!O;#+m,)jj*-Z.W$`d9>hE1Thc4jR%Ynm+mlM@[SH8.9^@+id3"O,^3Qm/A=#t(%\L-Y:"E[b;nYSk3hL[,Ah"T8b`heU:H5K-USpp)cfgD`615`?Kf%?c8Es3_s=;38'g%br<p@.XS0C5AQd%WD_7X8+nE,+7_`3hThXR#gR,6As^3ROj4ib,rO`q@Z=.)QNQ:J%"hO:W;.4SGjM58P8_V);,1KmfqjE05]('A%URCP2"&jJ6da'J,SWWVk%G)5^$qhAPe?W<)(A>]5)\Bh?fC_)D0r6YAD'!<<V*]07c'Un)A!ub@F^C63Zb]7jUu4SUam:\fR_O4%%cmVG.p@P<Mm`kP.(<230I'Vd*Pt!S^P/c&_&H8Ie=HIh?l33Fk&``_JZWII.CCac:AY7OZ\R(Z:>cs$&^mQ6"lnC2F;(5ApXLZXO%*[PQQnT1f)q>^a)Q0Qtf`q(f6BD57$nAi-g)SV0Yh*L+.Km?IrD!SC!f\X7'W"Kjf513lMP![;08ndfW0=ue"0R?W#S7JKDQ\$[u%m__D[[Qll,7Db)iZc1:u!d!TUha-ORS^ANPfL]VH$pCrB'FU1R23eH@)]AY;54?L!di\d5Bou8f;QfEUE1%V#`aTWJ@n^%Z<NPra%aR`0+7cLAcR^:ItZb34p;M.I0(=[/)88[22/fj1Y,uVCB*-SONo&E"hd>WetU3:s4):'-6N\>cCP?lQn=V)YM3Ld.qFS`=B`f\56%U@s>3%b:RPl%PfZ#`/sI=UAY";\,@16k%"u)6lNPG'M=-;r&4FP_(]MY%=Mq,pGQD-&9:ZL*M#(%,^'@>#+!/T5I2JcSG0WFE&Z]%S6@o`Y7WZnAIG>:8)?lXqf=i)q=Ga*f7I(f40.eXbC^h<o-LJm1%mD>gMa#H>1:g&mG-l2!rMc7rG;^lU_J/4S\\O6S!Qo^Qqc&C%9<rM<LPEk3Ol-Tbg?^"P9JPFrUKWUcr-=*A,8^`h/ilIA?X@I>-a(r4OsJ*_g7MHg]`]8AfP-D=5(?G2^9L"VOG:]Hi>Xg'l]XdA%E>D=(p9;2A?3YDb"V&4D"0?/o+#P(@P_,bYH?o?LDbhRkEh.^=pL53[_)l\mK=sT#];S5n38S(Z+I$KWhBn_DZV`l\:h@1a+,kT2%,K'd[aR1QUUkA&U:oI@^cu*o!:\e)b?CNGbZ1lF<'=J$L=]l+,q!e/FR5Cof'6f1*UM:*[0Q(:$53k.lDkVV42,R,ZA8TrW9j7#o%/mbnj.%I^QFsQniO1K0UPb:gU4f:drTC&9cZ!+^MMcNWVEM]:CY.@YIfugHI07`IcJispk;/,hlZsVt*bo9lg6<Ea3g*>N\fq%mm%o\L:fXm_A<<lI5(Z1+$*R-U;%k=3XWA$6Ds/=*Jp&"(m2m+d`PK#P2p)^bPIS-FbI!)p]oqSOjk70h2MdIX_Q%*Ch]Ep%"hAB,YC%]K]Ct^ll5Q6=kg"[F!g+WJD9N0]Tc8S,u/.>EqNm$W_hu,^kmhjOjer82+7oF6-SKG;;oNDCmN6N`,MR$$eqJ)3Kj&h3BFLT4CG%%=20#7G'nRV'IHTOGD[RWKpJl-G.MGVIc3JIJIogaHj'o#f3PrcKD4;k>4jK,nMO3EDN_Q)q>q2%qc_HV_buDS:7Q`]SeU^6YKt/t%Uos3#S`3aTbPVsO(6>RK<p\Ms%khn?T,PQMcbA-E#%FcoWCNmE%C:7bb4fg9nr:8S39GB`[W1[BOjf[B<Kj%*XKgh\<tA].IXMN)%XL^pUOjf=^T,1UMG6"ea1ec#N*.E8k;:+:U1D]5$6r#U+:*JR1/6mnZi;ZtT7*BBY<4Suu;l`pg#%/D26Cc/T9%JA2F`qqn;h"@d%RUkCD(32B"X+WP1+HO\@?nL0$C'J@#0uE.B4n9=HQ1KI=>NM@eh1!P6MAa8<H:6%.4^#b&DQKj>$%g833JH*?qM:X\G)Mm%(6o2E%O]+f"1%R0<TtQASZc<l-NiMWtDio*1fB,miI9m8i&Me"-:G`4<O?#8\Q8plTA59:<.=91,C8tb>Hg@1)%CKL*SDDGl*hu7XZ:Adc%dn(Hmh]TTIa2!DQaihoq%%3=ATYeQMEm'u#XO&qPg)4>*\&S6]^u("W<EadiZ<g[(WX8jRpcaIZU=:tf_"[[@<@.\AXtj_@XEa^@%W+1O*.n6sSJ$5AdBamIi<&m7sqD?^OS@hI^Dq1>[6Mi^73jMhbh3bdq9q><j:60Opn4%>#<-8E8/osOahVnQ)#L*frmLQ!XEd=2P%f;^?sCceXZ+uC;jH';dOS\q;_FC'kF;!G<Qh0'f-/TP'=C&bg!@AB#%KO`te1eLrCh?%B1o>=X6Rl`R_>-+0HAsC0R9@HUs3NGZO%8(c0>?[U2[9sfR6"6r(-RW6G*Jl(r/h,43@.n'c\rQ[NoPs^F?^?g*4%B6B.dtV.8mCFRp_,6dJ6`2!^^e%i+E$P>lbt[0Q\mZPA%pTgW6)/I`*gJlAGHH1H\6DUuZI$>SLk!T#kZL;Gr;/(ls1dCm-mDn)T?Tu`\s5r3frh'5Ne(9*Lkn!g^5M#l-&-)48^]*K,?iKV?%J+r1<J,%?>qWD5bgL'sPIm8DXbGTjhl^toko(c)]nh5LlgRnK=bQ#3RoD,$Yo#kD?p?03go(fKhkKj/Xj>pimreE`9_a"*T:]DNKn-l2~>%AI9_PrivateDataEnd